
Mini-Project-3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000026e4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000140  00800060  000026e4  00002758  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001ed8  00000000  00000000  00002898  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000fac  00000000  00000000  00004770  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001a0  00000000  00000000  0000571c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001f2  00000000  00000000  000058bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000240b  00000000  00000000  00005aae  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001386  00000000  00000000  00007eb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011d6  00000000  00000000  0000923f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  0000a418  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002f6  00000000  00000000  0000a5d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000096e  00000000  00000000  0000a8ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b23c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ee       	ldi	r30, 0xE4	; 228
      68:	f6 e2       	ldi	r31, 0x26	; 38
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 3a       	cpi	r26, 0xA0	; 160
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 e6 0e 	call	0x1dcc	; 0x1dcc <main>
      7a:	0c 94 70 13 	jmp	0x26e0	; 0x26e0 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 98 10 	jmp	0x2130	; 0x2130 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a7 e9       	ldi	r26, 0x97	; 151
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 b4 10 	jmp	0x2168	; 0x2168 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 a4 10 	jmp	0x2148	; 0x2148 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 a4 10 	jmp	0x2148	; 0x2148 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 98 10 	jmp	0x2130	; 0x2130 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	87 e9       	ldi	r24, 0x97	; 151
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 b4 10 	jmp	0x2168	; 0x2168 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 a0 10 	jmp	0x2140	; 0x2140 <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	67 e9       	ldi	r22, 0x97	; 151
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 bc 10 	jmp	0x2178	; 0x2178 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 a4 10 	jmp	0x2148	; 0x2148 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 b6 06 	call	0xd6c	; 0xd6c <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 a4 10 	jmp	0x2148	; 0x2148 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 b6 06 	call	0xd6c	; 0xd6c <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 a4 10 	jmp	0x2148	; 0x2148 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 b6 06 	call	0xd6c	; 0xd6c <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 a8 10 	jmp	0x2150	; 0x2150 <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 c4 10 	jmp	0x2188	; 0x2188 <__epilogue_restores__+0x20>

00000942 <__floatunsisf>:
     942:	a8 e0       	ldi	r26, 0x08	; 8
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e7 ea       	ldi	r30, 0xA7	; 167
     948:	f4 e0       	ldi	r31, 0x04	; 4
     94a:	0c 94 a0 10 	jmp	0x2140	; 0x2140 <__prologue_saves__+0x10>
     94e:	7b 01       	movw	r14, r22
     950:	8c 01       	movw	r16, r24
     952:	61 15       	cp	r22, r1
     954:	71 05       	cpc	r23, r1
     956:	81 05       	cpc	r24, r1
     958:	91 05       	cpc	r25, r1
     95a:	19 f4       	brne	.+6      	; 0x962 <__floatunsisf+0x20>
     95c:	82 e0       	ldi	r24, 0x02	; 2
     95e:	89 83       	std	Y+1, r24	; 0x01
     960:	60 c0       	rjmp	.+192    	; 0xa22 <__floatunsisf+0xe0>
     962:	83 e0       	ldi	r24, 0x03	; 3
     964:	89 83       	std	Y+1, r24	; 0x01
     966:	8e e1       	ldi	r24, 0x1E	; 30
     968:	c8 2e       	mov	r12, r24
     96a:	d1 2c       	mov	r13, r1
     96c:	dc 82       	std	Y+4, r13	; 0x04
     96e:	cb 82       	std	Y+3, r12	; 0x03
     970:	ed 82       	std	Y+5, r14	; 0x05
     972:	fe 82       	std	Y+6, r15	; 0x06
     974:	0f 83       	std	Y+7, r16	; 0x07
     976:	18 87       	std	Y+8, r17	; 0x08
     978:	c8 01       	movw	r24, r16
     97a:	b7 01       	movw	r22, r14
     97c:	0e 94 1a 05 	call	0xa34	; 0xa34 <__clzsi2>
     980:	fc 01       	movw	r30, r24
     982:	31 97       	sbiw	r30, 0x01	; 1
     984:	f7 ff       	sbrs	r31, 7
     986:	3b c0       	rjmp	.+118    	; 0x9fe <__floatunsisf+0xbc>
     988:	22 27       	eor	r18, r18
     98a:	33 27       	eor	r19, r19
     98c:	2e 1b       	sub	r18, r30
     98e:	3f 0b       	sbc	r19, r31
     990:	57 01       	movw	r10, r14
     992:	68 01       	movw	r12, r16
     994:	02 2e       	mov	r0, r18
     996:	04 c0       	rjmp	.+8      	; 0x9a0 <__floatunsisf+0x5e>
     998:	d6 94       	lsr	r13
     99a:	c7 94       	ror	r12
     99c:	b7 94       	ror	r11
     99e:	a7 94       	ror	r10
     9a0:	0a 94       	dec	r0
     9a2:	d2 f7       	brpl	.-12     	; 0x998 <__floatunsisf+0x56>
     9a4:	40 e0       	ldi	r20, 0x00	; 0
     9a6:	50 e0       	ldi	r21, 0x00	; 0
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	a0 e0       	ldi	r26, 0x00	; 0
     9b2:	b0 e0       	ldi	r27, 0x00	; 0
     9b4:	04 c0       	rjmp	.+8      	; 0x9be <__floatunsisf+0x7c>
     9b6:	88 0f       	add	r24, r24
     9b8:	99 1f       	adc	r25, r25
     9ba:	aa 1f       	adc	r26, r26
     9bc:	bb 1f       	adc	r27, r27
     9be:	2a 95       	dec	r18
     9c0:	d2 f7       	brpl	.-12     	; 0x9b6 <__floatunsisf+0x74>
     9c2:	01 97       	sbiw	r24, 0x01	; 1
     9c4:	a1 09       	sbc	r26, r1
     9c6:	b1 09       	sbc	r27, r1
     9c8:	8e 21       	and	r24, r14
     9ca:	9f 21       	and	r25, r15
     9cc:	a0 23       	and	r26, r16
     9ce:	b1 23       	and	r27, r17
     9d0:	00 97       	sbiw	r24, 0x00	; 0
     9d2:	a1 05       	cpc	r26, r1
     9d4:	b1 05       	cpc	r27, r1
     9d6:	21 f0       	breq	.+8      	; 0x9e0 <__floatunsisf+0x9e>
     9d8:	41 e0       	ldi	r20, 0x01	; 1
     9da:	50 e0       	ldi	r21, 0x00	; 0
     9dc:	60 e0       	ldi	r22, 0x00	; 0
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	4a 29       	or	r20, r10
     9e2:	5b 29       	or	r21, r11
     9e4:	6c 29       	or	r22, r12
     9e6:	7d 29       	or	r23, r13
     9e8:	4d 83       	std	Y+5, r20	; 0x05
     9ea:	5e 83       	std	Y+6, r21	; 0x06
     9ec:	6f 83       	std	Y+7, r22	; 0x07
     9ee:	78 87       	std	Y+8, r23	; 0x08
     9f0:	8e e1       	ldi	r24, 0x1E	; 30
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	8e 1b       	sub	r24, r30
     9f6:	9f 0b       	sbc	r25, r31
     9f8:	9c 83       	std	Y+4, r25	; 0x04
     9fa:	8b 83       	std	Y+3, r24	; 0x03
     9fc:	12 c0       	rjmp	.+36     	; 0xa22 <__floatunsisf+0xe0>
     9fe:	30 97       	sbiw	r30, 0x00	; 0
     a00:	81 f0       	breq	.+32     	; 0xa22 <__floatunsisf+0xe0>
     a02:	0e 2e       	mov	r0, r30
     a04:	04 c0       	rjmp	.+8      	; 0xa0e <__floatunsisf+0xcc>
     a06:	ee 0c       	add	r14, r14
     a08:	ff 1c       	adc	r15, r15
     a0a:	00 1f       	adc	r16, r16
     a0c:	11 1f       	adc	r17, r17
     a0e:	0a 94       	dec	r0
     a10:	d2 f7       	brpl	.-12     	; 0xa06 <__floatunsisf+0xc4>
     a12:	ed 82       	std	Y+5, r14	; 0x05
     a14:	fe 82       	std	Y+6, r15	; 0x06
     a16:	0f 83       	std	Y+7, r16	; 0x07
     a18:	18 87       	std	Y+8, r17	; 0x08
     a1a:	ce 1a       	sub	r12, r30
     a1c:	df 0a       	sbc	r13, r31
     a1e:	dc 82       	std	Y+4, r13	; 0x04
     a20:	cb 82       	std	Y+3, r12	; 0x03
     a22:	1a 82       	std	Y+2, r1	; 0x02
     a24:	ce 01       	movw	r24, r28
     a26:	01 96       	adiw	r24, 0x01	; 1
     a28:	0e 94 69 05 	call	0xad2	; 0xad2 <__pack_f>
     a2c:	28 96       	adiw	r28, 0x08	; 8
     a2e:	ea e0       	ldi	r30, 0x0A	; 10
     a30:	0c 94 bc 10 	jmp	0x2178	; 0x2178 <__epilogue_restores__+0x10>

00000a34 <__clzsi2>:
     a34:	ef 92       	push	r14
     a36:	ff 92       	push	r15
     a38:	0f 93       	push	r16
     a3a:	1f 93       	push	r17
     a3c:	7b 01       	movw	r14, r22
     a3e:	8c 01       	movw	r16, r24
     a40:	80 e0       	ldi	r24, 0x00	; 0
     a42:	e8 16       	cp	r14, r24
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	f8 06       	cpc	r15, r24
     a48:	81 e0       	ldi	r24, 0x01	; 1
     a4a:	08 07       	cpc	r16, r24
     a4c:	80 e0       	ldi	r24, 0x00	; 0
     a4e:	18 07       	cpc	r17, r24
     a50:	88 f4       	brcc	.+34     	; 0xa74 <__clzsi2+0x40>
     a52:	8f ef       	ldi	r24, 0xFF	; 255
     a54:	e8 16       	cp	r14, r24
     a56:	f1 04       	cpc	r15, r1
     a58:	01 05       	cpc	r16, r1
     a5a:	11 05       	cpc	r17, r1
     a5c:	31 f0       	breq	.+12     	; 0xa6a <__clzsi2+0x36>
     a5e:	28 f0       	brcs	.+10     	; 0xa6a <__clzsi2+0x36>
     a60:	88 e0       	ldi	r24, 0x08	; 8
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	a0 e0       	ldi	r26, 0x00	; 0
     a66:	b0 e0       	ldi	r27, 0x00	; 0
     a68:	17 c0       	rjmp	.+46     	; 0xa98 <__clzsi2+0x64>
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	a0 e0       	ldi	r26, 0x00	; 0
     a70:	b0 e0       	ldi	r27, 0x00	; 0
     a72:	12 c0       	rjmp	.+36     	; 0xa98 <__clzsi2+0x64>
     a74:	80 e0       	ldi	r24, 0x00	; 0
     a76:	e8 16       	cp	r14, r24
     a78:	80 e0       	ldi	r24, 0x00	; 0
     a7a:	f8 06       	cpc	r15, r24
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	08 07       	cpc	r16, r24
     a80:	81 e0       	ldi	r24, 0x01	; 1
     a82:	18 07       	cpc	r17, r24
     a84:	28 f0       	brcs	.+10     	; 0xa90 <__clzsi2+0x5c>
     a86:	88 e1       	ldi	r24, 0x18	; 24
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	04 c0       	rjmp	.+8      	; 0xa98 <__clzsi2+0x64>
     a90:	80 e1       	ldi	r24, 0x10	; 16
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	a0 e0       	ldi	r26, 0x00	; 0
     a96:	b0 e0       	ldi	r27, 0x00	; 0
     a98:	20 e2       	ldi	r18, 0x20	; 32
     a9a:	30 e0       	ldi	r19, 0x00	; 0
     a9c:	40 e0       	ldi	r20, 0x00	; 0
     a9e:	50 e0       	ldi	r21, 0x00	; 0
     aa0:	28 1b       	sub	r18, r24
     aa2:	39 0b       	sbc	r19, r25
     aa4:	4a 0b       	sbc	r20, r26
     aa6:	5b 0b       	sbc	r21, r27
     aa8:	04 c0       	rjmp	.+8      	; 0xab2 <__clzsi2+0x7e>
     aaa:	16 95       	lsr	r17
     aac:	07 95       	ror	r16
     aae:	f7 94       	ror	r15
     ab0:	e7 94       	ror	r14
     ab2:	8a 95       	dec	r24
     ab4:	d2 f7       	brpl	.-12     	; 0xaaa <__clzsi2+0x76>
     ab6:	f7 01       	movw	r30, r14
     ab8:	e1 56       	subi	r30, 0x61	; 97
     aba:	ff 4f       	sbci	r31, 0xFF	; 255
     abc:	80 81       	ld	r24, Z
     abe:	28 1b       	sub	r18, r24
     ac0:	31 09       	sbc	r19, r1
     ac2:	41 09       	sbc	r20, r1
     ac4:	51 09       	sbc	r21, r1
     ac6:	c9 01       	movw	r24, r18
     ac8:	1f 91       	pop	r17
     aca:	0f 91       	pop	r16
     acc:	ff 90       	pop	r15
     ace:	ef 90       	pop	r14
     ad0:	08 95       	ret

00000ad2 <__pack_f>:
     ad2:	df 92       	push	r13
     ad4:	ef 92       	push	r14
     ad6:	ff 92       	push	r15
     ad8:	0f 93       	push	r16
     ada:	1f 93       	push	r17
     adc:	fc 01       	movw	r30, r24
     ade:	e4 80       	ldd	r14, Z+4	; 0x04
     ae0:	f5 80       	ldd	r15, Z+5	; 0x05
     ae2:	06 81       	ldd	r16, Z+6	; 0x06
     ae4:	17 81       	ldd	r17, Z+7	; 0x07
     ae6:	d1 80       	ldd	r13, Z+1	; 0x01
     ae8:	80 81       	ld	r24, Z
     aea:	82 30       	cpi	r24, 0x02	; 2
     aec:	48 f4       	brcc	.+18     	; 0xb00 <__pack_f+0x2e>
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	a0 e1       	ldi	r26, 0x10	; 16
     af4:	b0 e0       	ldi	r27, 0x00	; 0
     af6:	e8 2a       	or	r14, r24
     af8:	f9 2a       	or	r15, r25
     afa:	0a 2b       	or	r16, r26
     afc:	1b 2b       	or	r17, r27
     afe:	a5 c0       	rjmp	.+330    	; 0xc4a <__pack_f+0x178>
     b00:	84 30       	cpi	r24, 0x04	; 4
     b02:	09 f4       	brne	.+2      	; 0xb06 <__pack_f+0x34>
     b04:	9f c0       	rjmp	.+318    	; 0xc44 <__pack_f+0x172>
     b06:	82 30       	cpi	r24, 0x02	; 2
     b08:	21 f4       	brne	.+8      	; 0xb12 <__pack_f+0x40>
     b0a:	ee 24       	eor	r14, r14
     b0c:	ff 24       	eor	r15, r15
     b0e:	87 01       	movw	r16, r14
     b10:	05 c0       	rjmp	.+10     	; 0xb1c <__pack_f+0x4a>
     b12:	e1 14       	cp	r14, r1
     b14:	f1 04       	cpc	r15, r1
     b16:	01 05       	cpc	r16, r1
     b18:	11 05       	cpc	r17, r1
     b1a:	19 f4       	brne	.+6      	; 0xb22 <__pack_f+0x50>
     b1c:	e0 e0       	ldi	r30, 0x00	; 0
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	96 c0       	rjmp	.+300    	; 0xc4e <__pack_f+0x17c>
     b22:	62 81       	ldd	r22, Z+2	; 0x02
     b24:	73 81       	ldd	r23, Z+3	; 0x03
     b26:	9f ef       	ldi	r25, 0xFF	; 255
     b28:	62 38       	cpi	r22, 0x82	; 130
     b2a:	79 07       	cpc	r23, r25
     b2c:	0c f0       	brlt	.+2      	; 0xb30 <__pack_f+0x5e>
     b2e:	5b c0       	rjmp	.+182    	; 0xbe6 <__pack_f+0x114>
     b30:	22 e8       	ldi	r18, 0x82	; 130
     b32:	3f ef       	ldi	r19, 0xFF	; 255
     b34:	26 1b       	sub	r18, r22
     b36:	37 0b       	sbc	r19, r23
     b38:	2a 31       	cpi	r18, 0x1A	; 26
     b3a:	31 05       	cpc	r19, r1
     b3c:	2c f0       	brlt	.+10     	; 0xb48 <__pack_f+0x76>
     b3e:	20 e0       	ldi	r18, 0x00	; 0
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	40 e0       	ldi	r20, 0x00	; 0
     b44:	50 e0       	ldi	r21, 0x00	; 0
     b46:	2a c0       	rjmp	.+84     	; 0xb9c <__pack_f+0xca>
     b48:	b8 01       	movw	r22, r16
     b4a:	a7 01       	movw	r20, r14
     b4c:	02 2e       	mov	r0, r18
     b4e:	04 c0       	rjmp	.+8      	; 0xb58 <__pack_f+0x86>
     b50:	76 95       	lsr	r23
     b52:	67 95       	ror	r22
     b54:	57 95       	ror	r21
     b56:	47 95       	ror	r20
     b58:	0a 94       	dec	r0
     b5a:	d2 f7       	brpl	.-12     	; 0xb50 <__pack_f+0x7e>
     b5c:	81 e0       	ldi	r24, 0x01	; 1
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	a0 e0       	ldi	r26, 0x00	; 0
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	04 c0       	rjmp	.+8      	; 0xb6e <__pack_f+0x9c>
     b66:	88 0f       	add	r24, r24
     b68:	99 1f       	adc	r25, r25
     b6a:	aa 1f       	adc	r26, r26
     b6c:	bb 1f       	adc	r27, r27
     b6e:	2a 95       	dec	r18
     b70:	d2 f7       	brpl	.-12     	; 0xb66 <__pack_f+0x94>
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	a1 09       	sbc	r26, r1
     b76:	b1 09       	sbc	r27, r1
     b78:	8e 21       	and	r24, r14
     b7a:	9f 21       	and	r25, r15
     b7c:	a0 23       	and	r26, r16
     b7e:	b1 23       	and	r27, r17
     b80:	00 97       	sbiw	r24, 0x00	; 0
     b82:	a1 05       	cpc	r26, r1
     b84:	b1 05       	cpc	r27, r1
     b86:	21 f0       	breq	.+8      	; 0xb90 <__pack_f+0xbe>
     b88:	81 e0       	ldi	r24, 0x01	; 1
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	a0 e0       	ldi	r26, 0x00	; 0
     b8e:	b0 e0       	ldi	r27, 0x00	; 0
     b90:	9a 01       	movw	r18, r20
     b92:	ab 01       	movw	r20, r22
     b94:	28 2b       	or	r18, r24
     b96:	39 2b       	or	r19, r25
     b98:	4a 2b       	or	r20, r26
     b9a:	5b 2b       	or	r21, r27
     b9c:	da 01       	movw	r26, r20
     b9e:	c9 01       	movw	r24, r18
     ba0:	8f 77       	andi	r24, 0x7F	; 127
     ba2:	90 70       	andi	r25, 0x00	; 0
     ba4:	a0 70       	andi	r26, 0x00	; 0
     ba6:	b0 70       	andi	r27, 0x00	; 0
     ba8:	80 34       	cpi	r24, 0x40	; 64
     baa:	91 05       	cpc	r25, r1
     bac:	a1 05       	cpc	r26, r1
     bae:	b1 05       	cpc	r27, r1
     bb0:	39 f4       	brne	.+14     	; 0xbc0 <__pack_f+0xee>
     bb2:	27 ff       	sbrs	r18, 7
     bb4:	09 c0       	rjmp	.+18     	; 0xbc8 <__pack_f+0xf6>
     bb6:	20 5c       	subi	r18, 0xC0	; 192
     bb8:	3f 4f       	sbci	r19, 0xFF	; 255
     bba:	4f 4f       	sbci	r20, 0xFF	; 255
     bbc:	5f 4f       	sbci	r21, 0xFF	; 255
     bbe:	04 c0       	rjmp	.+8      	; 0xbc8 <__pack_f+0xf6>
     bc0:	21 5c       	subi	r18, 0xC1	; 193
     bc2:	3f 4f       	sbci	r19, 0xFF	; 255
     bc4:	4f 4f       	sbci	r20, 0xFF	; 255
     bc6:	5f 4f       	sbci	r21, 0xFF	; 255
     bc8:	e0 e0       	ldi	r30, 0x00	; 0
     bca:	f0 e0       	ldi	r31, 0x00	; 0
     bcc:	20 30       	cpi	r18, 0x00	; 0
     bce:	a0 e0       	ldi	r26, 0x00	; 0
     bd0:	3a 07       	cpc	r19, r26
     bd2:	a0 e0       	ldi	r26, 0x00	; 0
     bd4:	4a 07       	cpc	r20, r26
     bd6:	a0 e4       	ldi	r26, 0x40	; 64
     bd8:	5a 07       	cpc	r21, r26
     bda:	10 f0       	brcs	.+4      	; 0xbe0 <__pack_f+0x10e>
     bdc:	e1 e0       	ldi	r30, 0x01	; 1
     bde:	f0 e0       	ldi	r31, 0x00	; 0
     be0:	79 01       	movw	r14, r18
     be2:	8a 01       	movw	r16, r20
     be4:	27 c0       	rjmp	.+78     	; 0xc34 <__pack_f+0x162>
     be6:	60 38       	cpi	r22, 0x80	; 128
     be8:	71 05       	cpc	r23, r1
     bea:	64 f5       	brge	.+88     	; 0xc44 <__pack_f+0x172>
     bec:	fb 01       	movw	r30, r22
     bee:	e1 58       	subi	r30, 0x81	; 129
     bf0:	ff 4f       	sbci	r31, 0xFF	; 255
     bf2:	d8 01       	movw	r26, r16
     bf4:	c7 01       	movw	r24, r14
     bf6:	8f 77       	andi	r24, 0x7F	; 127
     bf8:	90 70       	andi	r25, 0x00	; 0
     bfa:	a0 70       	andi	r26, 0x00	; 0
     bfc:	b0 70       	andi	r27, 0x00	; 0
     bfe:	80 34       	cpi	r24, 0x40	; 64
     c00:	91 05       	cpc	r25, r1
     c02:	a1 05       	cpc	r26, r1
     c04:	b1 05       	cpc	r27, r1
     c06:	39 f4       	brne	.+14     	; 0xc16 <__pack_f+0x144>
     c08:	e7 fe       	sbrs	r14, 7
     c0a:	0d c0       	rjmp	.+26     	; 0xc26 <__pack_f+0x154>
     c0c:	80 e4       	ldi	r24, 0x40	; 64
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	a0 e0       	ldi	r26, 0x00	; 0
     c12:	b0 e0       	ldi	r27, 0x00	; 0
     c14:	04 c0       	rjmp	.+8      	; 0xc1e <__pack_f+0x14c>
     c16:	8f e3       	ldi	r24, 0x3F	; 63
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	a0 e0       	ldi	r26, 0x00	; 0
     c1c:	b0 e0       	ldi	r27, 0x00	; 0
     c1e:	e8 0e       	add	r14, r24
     c20:	f9 1e       	adc	r15, r25
     c22:	0a 1f       	adc	r16, r26
     c24:	1b 1f       	adc	r17, r27
     c26:	17 ff       	sbrs	r17, 7
     c28:	05 c0       	rjmp	.+10     	; 0xc34 <__pack_f+0x162>
     c2a:	16 95       	lsr	r17
     c2c:	07 95       	ror	r16
     c2e:	f7 94       	ror	r15
     c30:	e7 94       	ror	r14
     c32:	31 96       	adiw	r30, 0x01	; 1
     c34:	87 e0       	ldi	r24, 0x07	; 7
     c36:	16 95       	lsr	r17
     c38:	07 95       	ror	r16
     c3a:	f7 94       	ror	r15
     c3c:	e7 94       	ror	r14
     c3e:	8a 95       	dec	r24
     c40:	d1 f7       	brne	.-12     	; 0xc36 <__pack_f+0x164>
     c42:	05 c0       	rjmp	.+10     	; 0xc4e <__pack_f+0x17c>
     c44:	ee 24       	eor	r14, r14
     c46:	ff 24       	eor	r15, r15
     c48:	87 01       	movw	r16, r14
     c4a:	ef ef       	ldi	r30, 0xFF	; 255
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	6e 2f       	mov	r22, r30
     c50:	67 95       	ror	r22
     c52:	66 27       	eor	r22, r22
     c54:	67 95       	ror	r22
     c56:	90 2f       	mov	r25, r16
     c58:	9f 77       	andi	r25, 0x7F	; 127
     c5a:	d7 94       	ror	r13
     c5c:	dd 24       	eor	r13, r13
     c5e:	d7 94       	ror	r13
     c60:	8e 2f       	mov	r24, r30
     c62:	86 95       	lsr	r24
     c64:	49 2f       	mov	r20, r25
     c66:	46 2b       	or	r20, r22
     c68:	58 2f       	mov	r21, r24
     c6a:	5d 29       	or	r21, r13
     c6c:	b7 01       	movw	r22, r14
     c6e:	ca 01       	movw	r24, r20
     c70:	1f 91       	pop	r17
     c72:	0f 91       	pop	r16
     c74:	ff 90       	pop	r15
     c76:	ef 90       	pop	r14
     c78:	df 90       	pop	r13
     c7a:	08 95       	ret

00000c7c <__unpack_f>:
     c7c:	fc 01       	movw	r30, r24
     c7e:	db 01       	movw	r26, r22
     c80:	40 81       	ld	r20, Z
     c82:	51 81       	ldd	r21, Z+1	; 0x01
     c84:	22 81       	ldd	r18, Z+2	; 0x02
     c86:	62 2f       	mov	r22, r18
     c88:	6f 77       	andi	r22, 0x7F	; 127
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	22 1f       	adc	r18, r18
     c8e:	22 27       	eor	r18, r18
     c90:	22 1f       	adc	r18, r18
     c92:	93 81       	ldd	r25, Z+3	; 0x03
     c94:	89 2f       	mov	r24, r25
     c96:	88 0f       	add	r24, r24
     c98:	82 2b       	or	r24, r18
     c9a:	28 2f       	mov	r18, r24
     c9c:	30 e0       	ldi	r19, 0x00	; 0
     c9e:	99 1f       	adc	r25, r25
     ca0:	99 27       	eor	r25, r25
     ca2:	99 1f       	adc	r25, r25
     ca4:	11 96       	adiw	r26, 0x01	; 1
     ca6:	9c 93       	st	X, r25
     ca8:	11 97       	sbiw	r26, 0x01	; 1
     caa:	21 15       	cp	r18, r1
     cac:	31 05       	cpc	r19, r1
     cae:	a9 f5       	brne	.+106    	; 0xd1a <__unpack_f+0x9e>
     cb0:	41 15       	cp	r20, r1
     cb2:	51 05       	cpc	r21, r1
     cb4:	61 05       	cpc	r22, r1
     cb6:	71 05       	cpc	r23, r1
     cb8:	11 f4       	brne	.+4      	; 0xcbe <__unpack_f+0x42>
     cba:	82 e0       	ldi	r24, 0x02	; 2
     cbc:	37 c0       	rjmp	.+110    	; 0xd2c <__unpack_f+0xb0>
     cbe:	82 e8       	ldi	r24, 0x82	; 130
     cc0:	9f ef       	ldi	r25, 0xFF	; 255
     cc2:	13 96       	adiw	r26, 0x03	; 3
     cc4:	9c 93       	st	X, r25
     cc6:	8e 93       	st	-X, r24
     cc8:	12 97       	sbiw	r26, 0x02	; 2
     cca:	9a 01       	movw	r18, r20
     ccc:	ab 01       	movw	r20, r22
     cce:	67 e0       	ldi	r22, 0x07	; 7
     cd0:	22 0f       	add	r18, r18
     cd2:	33 1f       	adc	r19, r19
     cd4:	44 1f       	adc	r20, r20
     cd6:	55 1f       	adc	r21, r21
     cd8:	6a 95       	dec	r22
     cda:	d1 f7       	brne	.-12     	; 0xcd0 <__unpack_f+0x54>
     cdc:	83 e0       	ldi	r24, 0x03	; 3
     cde:	8c 93       	st	X, r24
     ce0:	0d c0       	rjmp	.+26     	; 0xcfc <__unpack_f+0x80>
     ce2:	22 0f       	add	r18, r18
     ce4:	33 1f       	adc	r19, r19
     ce6:	44 1f       	adc	r20, r20
     ce8:	55 1f       	adc	r21, r21
     cea:	12 96       	adiw	r26, 0x02	; 2
     cec:	8d 91       	ld	r24, X+
     cee:	9c 91       	ld	r25, X
     cf0:	13 97       	sbiw	r26, 0x03	; 3
     cf2:	01 97       	sbiw	r24, 0x01	; 1
     cf4:	13 96       	adiw	r26, 0x03	; 3
     cf6:	9c 93       	st	X, r25
     cf8:	8e 93       	st	-X, r24
     cfa:	12 97       	sbiw	r26, 0x02	; 2
     cfc:	20 30       	cpi	r18, 0x00	; 0
     cfe:	80 e0       	ldi	r24, 0x00	; 0
     d00:	38 07       	cpc	r19, r24
     d02:	80 e0       	ldi	r24, 0x00	; 0
     d04:	48 07       	cpc	r20, r24
     d06:	80 e4       	ldi	r24, 0x40	; 64
     d08:	58 07       	cpc	r21, r24
     d0a:	58 f3       	brcs	.-42     	; 0xce2 <__unpack_f+0x66>
     d0c:	14 96       	adiw	r26, 0x04	; 4
     d0e:	2d 93       	st	X+, r18
     d10:	3d 93       	st	X+, r19
     d12:	4d 93       	st	X+, r20
     d14:	5c 93       	st	X, r21
     d16:	17 97       	sbiw	r26, 0x07	; 7
     d18:	08 95       	ret
     d1a:	2f 3f       	cpi	r18, 0xFF	; 255
     d1c:	31 05       	cpc	r19, r1
     d1e:	79 f4       	brne	.+30     	; 0xd3e <__unpack_f+0xc2>
     d20:	41 15       	cp	r20, r1
     d22:	51 05       	cpc	r21, r1
     d24:	61 05       	cpc	r22, r1
     d26:	71 05       	cpc	r23, r1
     d28:	19 f4       	brne	.+6      	; 0xd30 <__unpack_f+0xb4>
     d2a:	84 e0       	ldi	r24, 0x04	; 4
     d2c:	8c 93       	st	X, r24
     d2e:	08 95       	ret
     d30:	64 ff       	sbrs	r22, 4
     d32:	03 c0       	rjmp	.+6      	; 0xd3a <__unpack_f+0xbe>
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	8c 93       	st	X, r24
     d38:	12 c0       	rjmp	.+36     	; 0xd5e <__unpack_f+0xe2>
     d3a:	1c 92       	st	X, r1
     d3c:	10 c0       	rjmp	.+32     	; 0xd5e <__unpack_f+0xe2>
     d3e:	2f 57       	subi	r18, 0x7F	; 127
     d40:	30 40       	sbci	r19, 0x00	; 0
     d42:	13 96       	adiw	r26, 0x03	; 3
     d44:	3c 93       	st	X, r19
     d46:	2e 93       	st	-X, r18
     d48:	12 97       	sbiw	r26, 0x02	; 2
     d4a:	83 e0       	ldi	r24, 0x03	; 3
     d4c:	8c 93       	st	X, r24
     d4e:	87 e0       	ldi	r24, 0x07	; 7
     d50:	44 0f       	add	r20, r20
     d52:	55 1f       	adc	r21, r21
     d54:	66 1f       	adc	r22, r22
     d56:	77 1f       	adc	r23, r23
     d58:	8a 95       	dec	r24
     d5a:	d1 f7       	brne	.-12     	; 0xd50 <__unpack_f+0xd4>
     d5c:	70 64       	ori	r23, 0x40	; 64
     d5e:	14 96       	adiw	r26, 0x04	; 4
     d60:	4d 93       	st	X+, r20
     d62:	5d 93       	st	X+, r21
     d64:	6d 93       	st	X+, r22
     d66:	7c 93       	st	X, r23
     d68:	17 97       	sbiw	r26, 0x07	; 7
     d6a:	08 95       	ret

00000d6c <__fpcmp_parts_f>:
     d6c:	1f 93       	push	r17
     d6e:	dc 01       	movw	r26, r24
     d70:	fb 01       	movw	r30, r22
     d72:	9c 91       	ld	r25, X
     d74:	92 30       	cpi	r25, 0x02	; 2
     d76:	08 f4       	brcc	.+2      	; 0xd7a <__fpcmp_parts_f+0xe>
     d78:	47 c0       	rjmp	.+142    	; 0xe08 <__fpcmp_parts_f+0x9c>
     d7a:	80 81       	ld	r24, Z
     d7c:	82 30       	cpi	r24, 0x02	; 2
     d7e:	08 f4       	brcc	.+2      	; 0xd82 <__fpcmp_parts_f+0x16>
     d80:	43 c0       	rjmp	.+134    	; 0xe08 <__fpcmp_parts_f+0x9c>
     d82:	94 30       	cpi	r25, 0x04	; 4
     d84:	51 f4       	brne	.+20     	; 0xd9a <__fpcmp_parts_f+0x2e>
     d86:	11 96       	adiw	r26, 0x01	; 1
     d88:	1c 91       	ld	r17, X
     d8a:	84 30       	cpi	r24, 0x04	; 4
     d8c:	99 f5       	brne	.+102    	; 0xdf4 <__fpcmp_parts_f+0x88>
     d8e:	81 81       	ldd	r24, Z+1	; 0x01
     d90:	68 2f       	mov	r22, r24
     d92:	70 e0       	ldi	r23, 0x00	; 0
     d94:	61 1b       	sub	r22, r17
     d96:	71 09       	sbc	r23, r1
     d98:	3f c0       	rjmp	.+126    	; 0xe18 <__fpcmp_parts_f+0xac>
     d9a:	84 30       	cpi	r24, 0x04	; 4
     d9c:	21 f0       	breq	.+8      	; 0xda6 <__fpcmp_parts_f+0x3a>
     d9e:	92 30       	cpi	r25, 0x02	; 2
     da0:	31 f4       	brne	.+12     	; 0xdae <__fpcmp_parts_f+0x42>
     da2:	82 30       	cpi	r24, 0x02	; 2
     da4:	b9 f1       	breq	.+110    	; 0xe14 <__fpcmp_parts_f+0xa8>
     da6:	81 81       	ldd	r24, Z+1	; 0x01
     da8:	88 23       	and	r24, r24
     daa:	89 f1       	breq	.+98     	; 0xe0e <__fpcmp_parts_f+0xa2>
     dac:	2d c0       	rjmp	.+90     	; 0xe08 <__fpcmp_parts_f+0x9c>
     dae:	11 96       	adiw	r26, 0x01	; 1
     db0:	1c 91       	ld	r17, X
     db2:	11 97       	sbiw	r26, 0x01	; 1
     db4:	82 30       	cpi	r24, 0x02	; 2
     db6:	f1 f0       	breq	.+60     	; 0xdf4 <__fpcmp_parts_f+0x88>
     db8:	81 81       	ldd	r24, Z+1	; 0x01
     dba:	18 17       	cp	r17, r24
     dbc:	d9 f4       	brne	.+54     	; 0xdf4 <__fpcmp_parts_f+0x88>
     dbe:	12 96       	adiw	r26, 0x02	; 2
     dc0:	2d 91       	ld	r18, X+
     dc2:	3c 91       	ld	r19, X
     dc4:	13 97       	sbiw	r26, 0x03	; 3
     dc6:	82 81       	ldd	r24, Z+2	; 0x02
     dc8:	93 81       	ldd	r25, Z+3	; 0x03
     dca:	82 17       	cp	r24, r18
     dcc:	93 07       	cpc	r25, r19
     dce:	94 f0       	brlt	.+36     	; 0xdf4 <__fpcmp_parts_f+0x88>
     dd0:	28 17       	cp	r18, r24
     dd2:	39 07       	cpc	r19, r25
     dd4:	bc f0       	brlt	.+46     	; 0xe04 <__fpcmp_parts_f+0x98>
     dd6:	14 96       	adiw	r26, 0x04	; 4
     dd8:	8d 91       	ld	r24, X+
     dda:	9d 91       	ld	r25, X+
     ddc:	0d 90       	ld	r0, X+
     dde:	bc 91       	ld	r27, X
     de0:	a0 2d       	mov	r26, r0
     de2:	24 81       	ldd	r18, Z+4	; 0x04
     de4:	35 81       	ldd	r19, Z+5	; 0x05
     de6:	46 81       	ldd	r20, Z+6	; 0x06
     de8:	57 81       	ldd	r21, Z+7	; 0x07
     dea:	28 17       	cp	r18, r24
     dec:	39 07       	cpc	r19, r25
     dee:	4a 07       	cpc	r20, r26
     df0:	5b 07       	cpc	r21, r27
     df2:	18 f4       	brcc	.+6      	; 0xdfa <__fpcmp_parts_f+0x8e>
     df4:	11 23       	and	r17, r17
     df6:	41 f0       	breq	.+16     	; 0xe08 <__fpcmp_parts_f+0x9c>
     df8:	0a c0       	rjmp	.+20     	; 0xe0e <__fpcmp_parts_f+0xa2>
     dfa:	82 17       	cp	r24, r18
     dfc:	93 07       	cpc	r25, r19
     dfe:	a4 07       	cpc	r26, r20
     e00:	b5 07       	cpc	r27, r21
     e02:	40 f4       	brcc	.+16     	; 0xe14 <__fpcmp_parts_f+0xa8>
     e04:	11 23       	and	r17, r17
     e06:	19 f0       	breq	.+6      	; 0xe0e <__fpcmp_parts_f+0xa2>
     e08:	61 e0       	ldi	r22, 0x01	; 1
     e0a:	70 e0       	ldi	r23, 0x00	; 0
     e0c:	05 c0       	rjmp	.+10     	; 0xe18 <__fpcmp_parts_f+0xac>
     e0e:	6f ef       	ldi	r22, 0xFF	; 255
     e10:	7f ef       	ldi	r23, 0xFF	; 255
     e12:	02 c0       	rjmp	.+4      	; 0xe18 <__fpcmp_parts_f+0xac>
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	cb 01       	movw	r24, r22
     e1a:	1f 91       	pop	r17
     e1c:	08 95       	ret

00000e1e <PWM_Timer0_Start>:
#include "PWM/pwm.h"

void PWM_Timer0_Start(uint8 duty_cycle){
     e1e:	df 93       	push	r29
     e20:	cf 93       	push	r28
     e22:	0f 92       	push	r0
     e24:	cd b7       	in	r28, 0x3d	; 61
     e26:	de b7       	in	r29, 0x3e	; 62
     e28:	89 83       	std	Y+1, r24	; 0x01
    DDRB |= (1<<PB3);
     e2a:	a7 e3       	ldi	r26, 0x37	; 55
     e2c:	b0 e0       	ldi	r27, 0x00	; 0
     e2e:	e7 e3       	ldi	r30, 0x37	; 55
     e30:	f0 e0       	ldi	r31, 0x00	; 0
     e32:	80 81       	ld	r24, Z
     e34:	88 60       	ori	r24, 0x08	; 8
     e36:	8c 93       	st	X, r24
    TCNT0 = 0;
     e38:	e2 e5       	ldi	r30, 0x52	; 82
     e3a:	f0 e0       	ldi	r31, 0x00	; 0
     e3c:	10 82       	st	Z, r1
    OCR0 = (uint8)((duty_cycle*255)/100);
     e3e:	ec e5       	ldi	r30, 0x5C	; 92
     e40:	f0 e0       	ldi	r31, 0x00	; 0
     e42:	89 81       	ldd	r24, Y+1	; 0x01
     e44:	48 2f       	mov	r20, r24
     e46:	50 e0       	ldi	r21, 0x00	; 0
     e48:	ca 01       	movw	r24, r20
     e4a:	9c 01       	movw	r18, r24
     e4c:	22 0f       	add	r18, r18
     e4e:	33 1f       	adc	r19, r19
     e50:	c9 01       	movw	r24, r18
     e52:	96 95       	lsr	r25
     e54:	98 2f       	mov	r25, r24
     e56:	88 27       	eor	r24, r24
     e58:	97 95       	ror	r25
     e5a:	87 95       	ror	r24
     e5c:	82 1b       	sub	r24, r18
     e5e:	93 0b       	sbc	r25, r19
     e60:	84 0f       	add	r24, r20
     e62:	95 1f       	adc	r25, r21
     e64:	24 e6       	ldi	r18, 0x64	; 100
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	b9 01       	movw	r22, r18
     e6a:	0e 94 4f 10 	call	0x209e	; 0x209e <__divmodhi4>
     e6e:	cb 01       	movw	r24, r22
     e70:	80 83       	st	Z, r24
    TCCR0 = (1<<WGM00)|(1<<WGM01)|(1<<COM01)|(1<<CS02)|(1<<CS00);
     e72:	e3 e5       	ldi	r30, 0x53	; 83
     e74:	f0 e0       	ldi	r31, 0x00	; 0
     e76:	8d e6       	ldi	r24, 0x6D	; 109
     e78:	80 83       	st	Z, r24
}
     e7a:	0f 90       	pop	r0
     e7c:	cf 91       	pop	r28
     e7e:	df 91       	pop	r29
     e80:	08 95       	ret

00000e82 <GPIO_setupPinDirection>:
#include "GPIO/gpio.h"

void GPIO_setupPinDirection(uint8 port_num, uint8 pin_num, uint8 direction){
     e82:	df 93       	push	r29
     e84:	cf 93       	push	r28
     e86:	00 d0       	rcall	.+0      	; 0xe88 <GPIO_setupPinDirection+0x6>
     e88:	00 d0       	rcall	.+0      	; 0xe8a <GPIO_setupPinDirection+0x8>
     e8a:	0f 92       	push	r0
     e8c:	cd b7       	in	r28, 0x3d	; 61
     e8e:	de b7       	in	r29, 0x3e	; 62
     e90:	89 83       	std	Y+1, r24	; 0x01
     e92:	6a 83       	std	Y+2, r22	; 0x02
     e94:	4b 83       	std	Y+3, r20	; 0x03
    switch(port_num){
     e96:	89 81       	ldd	r24, Y+1	; 0x01
     e98:	28 2f       	mov	r18, r24
     e9a:	30 e0       	ldi	r19, 0x00	; 0
     e9c:	3d 83       	std	Y+5, r19	; 0x05
     e9e:	2c 83       	std	Y+4, r18	; 0x04
     ea0:	8c 81       	ldd	r24, Y+4	; 0x04
     ea2:	9d 81       	ldd	r25, Y+5	; 0x05
     ea4:	82 34       	cpi	r24, 0x42	; 66
     ea6:	91 05       	cpc	r25, r1
     ea8:	09 f4       	brne	.+2      	; 0xeac <GPIO_setupPinDirection+0x2a>
     eaa:	44 c0       	rjmp	.+136    	; 0xf34 <GPIO_setupPinDirection+0xb2>
     eac:	2c 81       	ldd	r18, Y+4	; 0x04
     eae:	3d 81       	ldd	r19, Y+5	; 0x05
     eb0:	23 34       	cpi	r18, 0x43	; 67
     eb2:	31 05       	cpc	r19, r1
     eb4:	34 f4       	brge	.+12     	; 0xec2 <GPIO_setupPinDirection+0x40>
     eb6:	8c 81       	ldd	r24, Y+4	; 0x04
     eb8:	9d 81       	ldd	r25, Y+5	; 0x05
     eba:	81 34       	cpi	r24, 0x41	; 65
     ebc:	91 05       	cpc	r25, r1
     ebe:	71 f0       	breq	.+28     	; 0xedc <GPIO_setupPinDirection+0x5a>
     ec0:	bc c0       	rjmp	.+376    	; 0x103a <GPIO_setupPinDirection+0x1b8>
     ec2:	2c 81       	ldd	r18, Y+4	; 0x04
     ec4:	3d 81       	ldd	r19, Y+5	; 0x05
     ec6:	23 34       	cpi	r18, 0x43	; 67
     ec8:	31 05       	cpc	r19, r1
     eca:	09 f4       	brne	.+2      	; 0xece <GPIO_setupPinDirection+0x4c>
     ecc:	5f c0       	rjmp	.+190    	; 0xf8c <GPIO_setupPinDirection+0x10a>
     ece:	8c 81       	ldd	r24, Y+4	; 0x04
     ed0:	9d 81       	ldd	r25, Y+5	; 0x05
     ed2:	84 34       	cpi	r24, 0x44	; 68
     ed4:	91 05       	cpc	r25, r1
     ed6:	09 f4       	brne	.+2      	; 0xeda <GPIO_setupPinDirection+0x58>
     ed8:	85 c0       	rjmp	.+266    	; 0xfe4 <GPIO_setupPinDirection+0x162>
     eda:	af c0       	rjmp	.+350    	; 0x103a <GPIO_setupPinDirection+0x1b8>
        case 'A': if(direction) DDRA |= (1<<pin_num); else DDRA &= ~(1<<pin_num); break;
     edc:	8b 81       	ldd	r24, Y+3	; 0x03
     ede:	88 23       	and	r24, r24
     ee0:	a1 f0       	breq	.+40     	; 0xf0a <GPIO_setupPinDirection+0x88>
     ee2:	aa e3       	ldi	r26, 0x3A	; 58
     ee4:	b0 e0       	ldi	r27, 0x00	; 0
     ee6:	ea e3       	ldi	r30, 0x3A	; 58
     ee8:	f0 e0       	ldi	r31, 0x00	; 0
     eea:	80 81       	ld	r24, Z
     eec:	48 2f       	mov	r20, r24
     eee:	8a 81       	ldd	r24, Y+2	; 0x02
     ef0:	28 2f       	mov	r18, r24
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	81 e0       	ldi	r24, 0x01	; 1
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	02 2e       	mov	r0, r18
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <GPIO_setupPinDirection+0x7e>
     efc:	88 0f       	add	r24, r24
     efe:	99 1f       	adc	r25, r25
     f00:	0a 94       	dec	r0
     f02:	e2 f7       	brpl	.-8      	; 0xefc <GPIO_setupPinDirection+0x7a>
     f04:	84 2b       	or	r24, r20
     f06:	8c 93       	st	X, r24
     f08:	98 c0       	rjmp	.+304    	; 0x103a <GPIO_setupPinDirection+0x1b8>
     f0a:	aa e3       	ldi	r26, 0x3A	; 58
     f0c:	b0 e0       	ldi	r27, 0x00	; 0
     f0e:	ea e3       	ldi	r30, 0x3A	; 58
     f10:	f0 e0       	ldi	r31, 0x00	; 0
     f12:	80 81       	ld	r24, Z
     f14:	48 2f       	mov	r20, r24
     f16:	8a 81       	ldd	r24, Y+2	; 0x02
     f18:	28 2f       	mov	r18, r24
     f1a:	30 e0       	ldi	r19, 0x00	; 0
     f1c:	81 e0       	ldi	r24, 0x01	; 1
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	02 2e       	mov	r0, r18
     f22:	02 c0       	rjmp	.+4      	; 0xf28 <GPIO_setupPinDirection+0xa6>
     f24:	88 0f       	add	r24, r24
     f26:	99 1f       	adc	r25, r25
     f28:	0a 94       	dec	r0
     f2a:	e2 f7       	brpl	.-8      	; 0xf24 <GPIO_setupPinDirection+0xa2>
     f2c:	80 95       	com	r24
     f2e:	84 23       	and	r24, r20
     f30:	8c 93       	st	X, r24
     f32:	83 c0       	rjmp	.+262    	; 0x103a <GPIO_setupPinDirection+0x1b8>
        case 'B': if(direction) DDRB |= (1<<pin_num); else DDRB &= ~(1<<pin_num); break;
     f34:	8b 81       	ldd	r24, Y+3	; 0x03
     f36:	88 23       	and	r24, r24
     f38:	a1 f0       	breq	.+40     	; 0xf62 <GPIO_setupPinDirection+0xe0>
     f3a:	a7 e3       	ldi	r26, 0x37	; 55
     f3c:	b0 e0       	ldi	r27, 0x00	; 0
     f3e:	e7 e3       	ldi	r30, 0x37	; 55
     f40:	f0 e0       	ldi	r31, 0x00	; 0
     f42:	80 81       	ld	r24, Z
     f44:	48 2f       	mov	r20, r24
     f46:	8a 81       	ldd	r24, Y+2	; 0x02
     f48:	28 2f       	mov	r18, r24
     f4a:	30 e0       	ldi	r19, 0x00	; 0
     f4c:	81 e0       	ldi	r24, 0x01	; 1
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	02 2e       	mov	r0, r18
     f52:	02 c0       	rjmp	.+4      	; 0xf58 <GPIO_setupPinDirection+0xd6>
     f54:	88 0f       	add	r24, r24
     f56:	99 1f       	adc	r25, r25
     f58:	0a 94       	dec	r0
     f5a:	e2 f7       	brpl	.-8      	; 0xf54 <GPIO_setupPinDirection+0xd2>
     f5c:	84 2b       	or	r24, r20
     f5e:	8c 93       	st	X, r24
     f60:	6c c0       	rjmp	.+216    	; 0x103a <GPIO_setupPinDirection+0x1b8>
     f62:	a7 e3       	ldi	r26, 0x37	; 55
     f64:	b0 e0       	ldi	r27, 0x00	; 0
     f66:	e7 e3       	ldi	r30, 0x37	; 55
     f68:	f0 e0       	ldi	r31, 0x00	; 0
     f6a:	80 81       	ld	r24, Z
     f6c:	48 2f       	mov	r20, r24
     f6e:	8a 81       	ldd	r24, Y+2	; 0x02
     f70:	28 2f       	mov	r18, r24
     f72:	30 e0       	ldi	r19, 0x00	; 0
     f74:	81 e0       	ldi	r24, 0x01	; 1
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	02 2e       	mov	r0, r18
     f7a:	02 c0       	rjmp	.+4      	; 0xf80 <GPIO_setupPinDirection+0xfe>
     f7c:	88 0f       	add	r24, r24
     f7e:	99 1f       	adc	r25, r25
     f80:	0a 94       	dec	r0
     f82:	e2 f7       	brpl	.-8      	; 0xf7c <GPIO_setupPinDirection+0xfa>
     f84:	80 95       	com	r24
     f86:	84 23       	and	r24, r20
     f88:	8c 93       	st	X, r24
     f8a:	57 c0       	rjmp	.+174    	; 0x103a <GPIO_setupPinDirection+0x1b8>
        case 'C': if(direction) DDRC |= (1<<pin_num); else DDRC &= ~(1<<pin_num); break;
     f8c:	8b 81       	ldd	r24, Y+3	; 0x03
     f8e:	88 23       	and	r24, r24
     f90:	a1 f0       	breq	.+40     	; 0xfba <GPIO_setupPinDirection+0x138>
     f92:	a4 e3       	ldi	r26, 0x34	; 52
     f94:	b0 e0       	ldi	r27, 0x00	; 0
     f96:	e4 e3       	ldi	r30, 0x34	; 52
     f98:	f0 e0       	ldi	r31, 0x00	; 0
     f9a:	80 81       	ld	r24, Z
     f9c:	48 2f       	mov	r20, r24
     f9e:	8a 81       	ldd	r24, Y+2	; 0x02
     fa0:	28 2f       	mov	r18, r24
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	81 e0       	ldi	r24, 0x01	; 1
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	02 2e       	mov	r0, r18
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <GPIO_setupPinDirection+0x12e>
     fac:	88 0f       	add	r24, r24
     fae:	99 1f       	adc	r25, r25
     fb0:	0a 94       	dec	r0
     fb2:	e2 f7       	brpl	.-8      	; 0xfac <GPIO_setupPinDirection+0x12a>
     fb4:	84 2b       	or	r24, r20
     fb6:	8c 93       	st	X, r24
     fb8:	40 c0       	rjmp	.+128    	; 0x103a <GPIO_setupPinDirection+0x1b8>
     fba:	a4 e3       	ldi	r26, 0x34	; 52
     fbc:	b0 e0       	ldi	r27, 0x00	; 0
     fbe:	e4 e3       	ldi	r30, 0x34	; 52
     fc0:	f0 e0       	ldi	r31, 0x00	; 0
     fc2:	80 81       	ld	r24, Z
     fc4:	48 2f       	mov	r20, r24
     fc6:	8a 81       	ldd	r24, Y+2	; 0x02
     fc8:	28 2f       	mov	r18, r24
     fca:	30 e0       	ldi	r19, 0x00	; 0
     fcc:	81 e0       	ldi	r24, 0x01	; 1
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	02 2e       	mov	r0, r18
     fd2:	02 c0       	rjmp	.+4      	; 0xfd8 <GPIO_setupPinDirection+0x156>
     fd4:	88 0f       	add	r24, r24
     fd6:	99 1f       	adc	r25, r25
     fd8:	0a 94       	dec	r0
     fda:	e2 f7       	brpl	.-8      	; 0xfd4 <GPIO_setupPinDirection+0x152>
     fdc:	80 95       	com	r24
     fde:	84 23       	and	r24, r20
     fe0:	8c 93       	st	X, r24
     fe2:	2b c0       	rjmp	.+86     	; 0x103a <GPIO_setupPinDirection+0x1b8>
        case 'D': if(direction) DDRD |= (1<<pin_num); else DDRD &= ~(1<<pin_num); break;
     fe4:	8b 81       	ldd	r24, Y+3	; 0x03
     fe6:	88 23       	and	r24, r24
     fe8:	a1 f0       	breq	.+40     	; 0x1012 <GPIO_setupPinDirection+0x190>
     fea:	a1 e3       	ldi	r26, 0x31	; 49
     fec:	b0 e0       	ldi	r27, 0x00	; 0
     fee:	e1 e3       	ldi	r30, 0x31	; 49
     ff0:	f0 e0       	ldi	r31, 0x00	; 0
     ff2:	80 81       	ld	r24, Z
     ff4:	48 2f       	mov	r20, r24
     ff6:	8a 81       	ldd	r24, Y+2	; 0x02
     ff8:	28 2f       	mov	r18, r24
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	81 e0       	ldi	r24, 0x01	; 1
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	02 2e       	mov	r0, r18
    1002:	02 c0       	rjmp	.+4      	; 0x1008 <GPIO_setupPinDirection+0x186>
    1004:	88 0f       	add	r24, r24
    1006:	99 1f       	adc	r25, r25
    1008:	0a 94       	dec	r0
    100a:	e2 f7       	brpl	.-8      	; 0x1004 <GPIO_setupPinDirection+0x182>
    100c:	84 2b       	or	r24, r20
    100e:	8c 93       	st	X, r24
    1010:	14 c0       	rjmp	.+40     	; 0x103a <GPIO_setupPinDirection+0x1b8>
    1012:	a1 e3       	ldi	r26, 0x31	; 49
    1014:	b0 e0       	ldi	r27, 0x00	; 0
    1016:	e1 e3       	ldi	r30, 0x31	; 49
    1018:	f0 e0       	ldi	r31, 0x00	; 0
    101a:	80 81       	ld	r24, Z
    101c:	48 2f       	mov	r20, r24
    101e:	8a 81       	ldd	r24, Y+2	; 0x02
    1020:	28 2f       	mov	r18, r24
    1022:	30 e0       	ldi	r19, 0x00	; 0
    1024:	81 e0       	ldi	r24, 0x01	; 1
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	02 2e       	mov	r0, r18
    102a:	02 c0       	rjmp	.+4      	; 0x1030 <GPIO_setupPinDirection+0x1ae>
    102c:	88 0f       	add	r24, r24
    102e:	99 1f       	adc	r25, r25
    1030:	0a 94       	dec	r0
    1032:	e2 f7       	brpl	.-8      	; 0x102c <GPIO_setupPinDirection+0x1aa>
    1034:	80 95       	com	r24
    1036:	84 23       	and	r24, r20
    1038:	8c 93       	st	X, r24
    }
}
    103a:	0f 90       	pop	r0
    103c:	0f 90       	pop	r0
    103e:	0f 90       	pop	r0
    1040:	0f 90       	pop	r0
    1042:	0f 90       	pop	r0
    1044:	cf 91       	pop	r28
    1046:	df 91       	pop	r29
    1048:	08 95       	ret

0000104a <GPIO_writePin>:

void GPIO_writePin(uint8 port_num, uint8 pin_num, uint8 value){
    104a:	df 93       	push	r29
    104c:	cf 93       	push	r28
    104e:	00 d0       	rcall	.+0      	; 0x1050 <GPIO_writePin+0x6>
    1050:	00 d0       	rcall	.+0      	; 0x1052 <GPIO_writePin+0x8>
    1052:	0f 92       	push	r0
    1054:	cd b7       	in	r28, 0x3d	; 61
    1056:	de b7       	in	r29, 0x3e	; 62
    1058:	89 83       	std	Y+1, r24	; 0x01
    105a:	6a 83       	std	Y+2, r22	; 0x02
    105c:	4b 83       	std	Y+3, r20	; 0x03
    switch(port_num){
    105e:	89 81       	ldd	r24, Y+1	; 0x01
    1060:	28 2f       	mov	r18, r24
    1062:	30 e0       	ldi	r19, 0x00	; 0
    1064:	3d 83       	std	Y+5, r19	; 0x05
    1066:	2c 83       	std	Y+4, r18	; 0x04
    1068:	8c 81       	ldd	r24, Y+4	; 0x04
    106a:	9d 81       	ldd	r25, Y+5	; 0x05
    106c:	82 34       	cpi	r24, 0x42	; 66
    106e:	91 05       	cpc	r25, r1
    1070:	09 f4       	brne	.+2      	; 0x1074 <GPIO_writePin+0x2a>
    1072:	44 c0       	rjmp	.+136    	; 0x10fc <GPIO_writePin+0xb2>
    1074:	2c 81       	ldd	r18, Y+4	; 0x04
    1076:	3d 81       	ldd	r19, Y+5	; 0x05
    1078:	23 34       	cpi	r18, 0x43	; 67
    107a:	31 05       	cpc	r19, r1
    107c:	34 f4       	brge	.+12     	; 0x108a <GPIO_writePin+0x40>
    107e:	8c 81       	ldd	r24, Y+4	; 0x04
    1080:	9d 81       	ldd	r25, Y+5	; 0x05
    1082:	81 34       	cpi	r24, 0x41	; 65
    1084:	91 05       	cpc	r25, r1
    1086:	71 f0       	breq	.+28     	; 0x10a4 <GPIO_writePin+0x5a>
    1088:	bc c0       	rjmp	.+376    	; 0x1202 <GPIO_writePin+0x1b8>
    108a:	2c 81       	ldd	r18, Y+4	; 0x04
    108c:	3d 81       	ldd	r19, Y+5	; 0x05
    108e:	23 34       	cpi	r18, 0x43	; 67
    1090:	31 05       	cpc	r19, r1
    1092:	09 f4       	brne	.+2      	; 0x1096 <GPIO_writePin+0x4c>
    1094:	5f c0       	rjmp	.+190    	; 0x1154 <GPIO_writePin+0x10a>
    1096:	8c 81       	ldd	r24, Y+4	; 0x04
    1098:	9d 81       	ldd	r25, Y+5	; 0x05
    109a:	84 34       	cpi	r24, 0x44	; 68
    109c:	91 05       	cpc	r25, r1
    109e:	09 f4       	brne	.+2      	; 0x10a2 <GPIO_writePin+0x58>
    10a0:	85 c0       	rjmp	.+266    	; 0x11ac <GPIO_writePin+0x162>
    10a2:	af c0       	rjmp	.+350    	; 0x1202 <GPIO_writePin+0x1b8>
        case 'A': if(value) PORTA |= (1<<pin_num); else PORTA &= ~(1<<pin_num); break;
    10a4:	8b 81       	ldd	r24, Y+3	; 0x03
    10a6:	88 23       	and	r24, r24
    10a8:	a1 f0       	breq	.+40     	; 0x10d2 <GPIO_writePin+0x88>
    10aa:	ab e3       	ldi	r26, 0x3B	; 59
    10ac:	b0 e0       	ldi	r27, 0x00	; 0
    10ae:	eb e3       	ldi	r30, 0x3B	; 59
    10b0:	f0 e0       	ldi	r31, 0x00	; 0
    10b2:	80 81       	ld	r24, Z
    10b4:	48 2f       	mov	r20, r24
    10b6:	8a 81       	ldd	r24, Y+2	; 0x02
    10b8:	28 2f       	mov	r18, r24
    10ba:	30 e0       	ldi	r19, 0x00	; 0
    10bc:	81 e0       	ldi	r24, 0x01	; 1
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	02 2e       	mov	r0, r18
    10c2:	02 c0       	rjmp	.+4      	; 0x10c8 <GPIO_writePin+0x7e>
    10c4:	88 0f       	add	r24, r24
    10c6:	99 1f       	adc	r25, r25
    10c8:	0a 94       	dec	r0
    10ca:	e2 f7       	brpl	.-8      	; 0x10c4 <GPIO_writePin+0x7a>
    10cc:	84 2b       	or	r24, r20
    10ce:	8c 93       	st	X, r24
    10d0:	98 c0       	rjmp	.+304    	; 0x1202 <GPIO_writePin+0x1b8>
    10d2:	ab e3       	ldi	r26, 0x3B	; 59
    10d4:	b0 e0       	ldi	r27, 0x00	; 0
    10d6:	eb e3       	ldi	r30, 0x3B	; 59
    10d8:	f0 e0       	ldi	r31, 0x00	; 0
    10da:	80 81       	ld	r24, Z
    10dc:	48 2f       	mov	r20, r24
    10de:	8a 81       	ldd	r24, Y+2	; 0x02
    10e0:	28 2f       	mov	r18, r24
    10e2:	30 e0       	ldi	r19, 0x00	; 0
    10e4:	81 e0       	ldi	r24, 0x01	; 1
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	02 2e       	mov	r0, r18
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <GPIO_writePin+0xa6>
    10ec:	88 0f       	add	r24, r24
    10ee:	99 1f       	adc	r25, r25
    10f0:	0a 94       	dec	r0
    10f2:	e2 f7       	brpl	.-8      	; 0x10ec <GPIO_writePin+0xa2>
    10f4:	80 95       	com	r24
    10f6:	84 23       	and	r24, r20
    10f8:	8c 93       	st	X, r24
    10fa:	83 c0       	rjmp	.+262    	; 0x1202 <GPIO_writePin+0x1b8>
        case 'B': if(value) PORTB |= (1<<pin_num); else PORTB &= ~(1<<pin_num); break;
    10fc:	8b 81       	ldd	r24, Y+3	; 0x03
    10fe:	88 23       	and	r24, r24
    1100:	a1 f0       	breq	.+40     	; 0x112a <GPIO_writePin+0xe0>
    1102:	a8 e3       	ldi	r26, 0x38	; 56
    1104:	b0 e0       	ldi	r27, 0x00	; 0
    1106:	e8 e3       	ldi	r30, 0x38	; 56
    1108:	f0 e0       	ldi	r31, 0x00	; 0
    110a:	80 81       	ld	r24, Z
    110c:	48 2f       	mov	r20, r24
    110e:	8a 81       	ldd	r24, Y+2	; 0x02
    1110:	28 2f       	mov	r18, r24
    1112:	30 e0       	ldi	r19, 0x00	; 0
    1114:	81 e0       	ldi	r24, 0x01	; 1
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	02 2e       	mov	r0, r18
    111a:	02 c0       	rjmp	.+4      	; 0x1120 <GPIO_writePin+0xd6>
    111c:	88 0f       	add	r24, r24
    111e:	99 1f       	adc	r25, r25
    1120:	0a 94       	dec	r0
    1122:	e2 f7       	brpl	.-8      	; 0x111c <GPIO_writePin+0xd2>
    1124:	84 2b       	or	r24, r20
    1126:	8c 93       	st	X, r24
    1128:	6c c0       	rjmp	.+216    	; 0x1202 <GPIO_writePin+0x1b8>
    112a:	a8 e3       	ldi	r26, 0x38	; 56
    112c:	b0 e0       	ldi	r27, 0x00	; 0
    112e:	e8 e3       	ldi	r30, 0x38	; 56
    1130:	f0 e0       	ldi	r31, 0x00	; 0
    1132:	80 81       	ld	r24, Z
    1134:	48 2f       	mov	r20, r24
    1136:	8a 81       	ldd	r24, Y+2	; 0x02
    1138:	28 2f       	mov	r18, r24
    113a:	30 e0       	ldi	r19, 0x00	; 0
    113c:	81 e0       	ldi	r24, 0x01	; 1
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	02 2e       	mov	r0, r18
    1142:	02 c0       	rjmp	.+4      	; 0x1148 <GPIO_writePin+0xfe>
    1144:	88 0f       	add	r24, r24
    1146:	99 1f       	adc	r25, r25
    1148:	0a 94       	dec	r0
    114a:	e2 f7       	brpl	.-8      	; 0x1144 <GPIO_writePin+0xfa>
    114c:	80 95       	com	r24
    114e:	84 23       	and	r24, r20
    1150:	8c 93       	st	X, r24
    1152:	57 c0       	rjmp	.+174    	; 0x1202 <GPIO_writePin+0x1b8>
        case 'C': if(value) PORTC |= (1<<pin_num); else PORTC &= ~(1<<pin_num); break;
    1154:	8b 81       	ldd	r24, Y+3	; 0x03
    1156:	88 23       	and	r24, r24
    1158:	a1 f0       	breq	.+40     	; 0x1182 <GPIO_writePin+0x138>
    115a:	a5 e3       	ldi	r26, 0x35	; 53
    115c:	b0 e0       	ldi	r27, 0x00	; 0
    115e:	e5 e3       	ldi	r30, 0x35	; 53
    1160:	f0 e0       	ldi	r31, 0x00	; 0
    1162:	80 81       	ld	r24, Z
    1164:	48 2f       	mov	r20, r24
    1166:	8a 81       	ldd	r24, Y+2	; 0x02
    1168:	28 2f       	mov	r18, r24
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	81 e0       	ldi	r24, 0x01	; 1
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	02 2e       	mov	r0, r18
    1172:	02 c0       	rjmp	.+4      	; 0x1178 <GPIO_writePin+0x12e>
    1174:	88 0f       	add	r24, r24
    1176:	99 1f       	adc	r25, r25
    1178:	0a 94       	dec	r0
    117a:	e2 f7       	brpl	.-8      	; 0x1174 <GPIO_writePin+0x12a>
    117c:	84 2b       	or	r24, r20
    117e:	8c 93       	st	X, r24
    1180:	40 c0       	rjmp	.+128    	; 0x1202 <GPIO_writePin+0x1b8>
    1182:	a5 e3       	ldi	r26, 0x35	; 53
    1184:	b0 e0       	ldi	r27, 0x00	; 0
    1186:	e5 e3       	ldi	r30, 0x35	; 53
    1188:	f0 e0       	ldi	r31, 0x00	; 0
    118a:	80 81       	ld	r24, Z
    118c:	48 2f       	mov	r20, r24
    118e:	8a 81       	ldd	r24, Y+2	; 0x02
    1190:	28 2f       	mov	r18, r24
    1192:	30 e0       	ldi	r19, 0x00	; 0
    1194:	81 e0       	ldi	r24, 0x01	; 1
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	02 2e       	mov	r0, r18
    119a:	02 c0       	rjmp	.+4      	; 0x11a0 <GPIO_writePin+0x156>
    119c:	88 0f       	add	r24, r24
    119e:	99 1f       	adc	r25, r25
    11a0:	0a 94       	dec	r0
    11a2:	e2 f7       	brpl	.-8      	; 0x119c <GPIO_writePin+0x152>
    11a4:	80 95       	com	r24
    11a6:	84 23       	and	r24, r20
    11a8:	8c 93       	st	X, r24
    11aa:	2b c0       	rjmp	.+86     	; 0x1202 <GPIO_writePin+0x1b8>
        case 'D': if(value) PORTD |= (1<<pin_num); else PORTD &= ~(1<<pin_num); break;
    11ac:	8b 81       	ldd	r24, Y+3	; 0x03
    11ae:	88 23       	and	r24, r24
    11b0:	a1 f0       	breq	.+40     	; 0x11da <GPIO_writePin+0x190>
    11b2:	a2 e3       	ldi	r26, 0x32	; 50
    11b4:	b0 e0       	ldi	r27, 0x00	; 0
    11b6:	e2 e3       	ldi	r30, 0x32	; 50
    11b8:	f0 e0       	ldi	r31, 0x00	; 0
    11ba:	80 81       	ld	r24, Z
    11bc:	48 2f       	mov	r20, r24
    11be:	8a 81       	ldd	r24, Y+2	; 0x02
    11c0:	28 2f       	mov	r18, r24
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	81 e0       	ldi	r24, 0x01	; 1
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	02 2e       	mov	r0, r18
    11ca:	02 c0       	rjmp	.+4      	; 0x11d0 <GPIO_writePin+0x186>
    11cc:	88 0f       	add	r24, r24
    11ce:	99 1f       	adc	r25, r25
    11d0:	0a 94       	dec	r0
    11d2:	e2 f7       	brpl	.-8      	; 0x11cc <GPIO_writePin+0x182>
    11d4:	84 2b       	or	r24, r20
    11d6:	8c 93       	st	X, r24
    11d8:	14 c0       	rjmp	.+40     	; 0x1202 <GPIO_writePin+0x1b8>
    11da:	a2 e3       	ldi	r26, 0x32	; 50
    11dc:	b0 e0       	ldi	r27, 0x00	; 0
    11de:	e2 e3       	ldi	r30, 0x32	; 50
    11e0:	f0 e0       	ldi	r31, 0x00	; 0
    11e2:	80 81       	ld	r24, Z
    11e4:	48 2f       	mov	r20, r24
    11e6:	8a 81       	ldd	r24, Y+2	; 0x02
    11e8:	28 2f       	mov	r18, r24
    11ea:	30 e0       	ldi	r19, 0x00	; 0
    11ec:	81 e0       	ldi	r24, 0x01	; 1
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	02 2e       	mov	r0, r18
    11f2:	02 c0       	rjmp	.+4      	; 0x11f8 <GPIO_writePin+0x1ae>
    11f4:	88 0f       	add	r24, r24
    11f6:	99 1f       	adc	r25, r25
    11f8:	0a 94       	dec	r0
    11fa:	e2 f7       	brpl	.-8      	; 0x11f4 <GPIO_writePin+0x1aa>
    11fc:	80 95       	com	r24
    11fe:	84 23       	and	r24, r20
    1200:	8c 93       	st	X, r24
    }
}
    1202:	0f 90       	pop	r0
    1204:	0f 90       	pop	r0
    1206:	0f 90       	pop	r0
    1208:	0f 90       	pop	r0
    120a:	0f 90       	pop	r0
    120c:	cf 91       	pop	r28
    120e:	df 91       	pop	r29
    1210:	08 95       	ret

00001212 <GPIO_readPin>:

uint8 GPIO_readPin(uint8 port_num, uint8 pin_num){
    1212:	df 93       	push	r29
    1214:	cf 93       	push	r28
    1216:	00 d0       	rcall	.+0      	; 0x1218 <GPIO_readPin+0x6>
    1218:	00 d0       	rcall	.+0      	; 0x121a <GPIO_readPin+0x8>
    121a:	0f 92       	push	r0
    121c:	cd b7       	in	r28, 0x3d	; 61
    121e:	de b7       	in	r29, 0x3e	; 62
    1220:	89 83       	std	Y+1, r24	; 0x01
    1222:	6a 83       	std	Y+2, r22	; 0x02
    switch(port_num){
    1224:	89 81       	ldd	r24, Y+1	; 0x01
    1226:	28 2f       	mov	r18, r24
    1228:	30 e0       	ldi	r19, 0x00	; 0
    122a:	3d 83       	std	Y+5, r19	; 0x05
    122c:	2c 83       	std	Y+4, r18	; 0x04
    122e:	4c 81       	ldd	r20, Y+4	; 0x04
    1230:	5d 81       	ldd	r21, Y+5	; 0x05
    1232:	42 34       	cpi	r20, 0x42	; 66
    1234:	51 05       	cpc	r21, r1
    1236:	49 f1       	breq	.+82     	; 0x128a <GPIO_readPin+0x78>
    1238:	8c 81       	ldd	r24, Y+4	; 0x04
    123a:	9d 81       	ldd	r25, Y+5	; 0x05
    123c:	83 34       	cpi	r24, 0x43	; 67
    123e:	91 05       	cpc	r25, r1
    1240:	34 f4       	brge	.+12     	; 0x124e <GPIO_readPin+0x3c>
    1242:	2c 81       	ldd	r18, Y+4	; 0x04
    1244:	3d 81       	ldd	r19, Y+5	; 0x05
    1246:	21 34       	cpi	r18, 0x41	; 65
    1248:	31 05       	cpc	r19, r1
    124a:	61 f0       	breq	.+24     	; 0x1264 <GPIO_readPin+0x52>
    124c:	57 c0       	rjmp	.+174    	; 0x12fc <GPIO_readPin+0xea>
    124e:	4c 81       	ldd	r20, Y+4	; 0x04
    1250:	5d 81       	ldd	r21, Y+5	; 0x05
    1252:	43 34       	cpi	r20, 0x43	; 67
    1254:	51 05       	cpc	r21, r1
    1256:	61 f1       	breq	.+88     	; 0x12b0 <GPIO_readPin+0x9e>
    1258:	8c 81       	ldd	r24, Y+4	; 0x04
    125a:	9d 81       	ldd	r25, Y+5	; 0x05
    125c:	84 34       	cpi	r24, 0x44	; 68
    125e:	91 05       	cpc	r25, r1
    1260:	d1 f1       	breq	.+116    	; 0x12d6 <GPIO_readPin+0xc4>
    1262:	4c c0       	rjmp	.+152    	; 0x12fc <GPIO_readPin+0xea>
        case 'A': return (PINA & (1<<pin_num))?1:0;
    1264:	e9 e3       	ldi	r30, 0x39	; 57
    1266:	f0 e0       	ldi	r31, 0x00	; 0
    1268:	80 81       	ld	r24, Z
    126a:	28 2f       	mov	r18, r24
    126c:	30 e0       	ldi	r19, 0x00	; 0
    126e:	8a 81       	ldd	r24, Y+2	; 0x02
    1270:	88 2f       	mov	r24, r24
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	a9 01       	movw	r20, r18
    1276:	02 c0       	rjmp	.+4      	; 0x127c <GPIO_readPin+0x6a>
    1278:	55 95       	asr	r21
    127a:	47 95       	ror	r20
    127c:	8a 95       	dec	r24
    127e:	e2 f7       	brpl	.-8      	; 0x1278 <GPIO_readPin+0x66>
    1280:	ca 01       	movw	r24, r20
    1282:	58 2f       	mov	r21, r24
    1284:	51 70       	andi	r21, 0x01	; 1
    1286:	5b 83       	std	Y+3, r21	; 0x03
    1288:	3a c0       	rjmp	.+116    	; 0x12fe <GPIO_readPin+0xec>
        case 'B': return (PINB & (1<<pin_num))?1:0;
    128a:	e6 e3       	ldi	r30, 0x36	; 54
    128c:	f0 e0       	ldi	r31, 0x00	; 0
    128e:	80 81       	ld	r24, Z
    1290:	28 2f       	mov	r18, r24
    1292:	30 e0       	ldi	r19, 0x00	; 0
    1294:	8a 81       	ldd	r24, Y+2	; 0x02
    1296:	88 2f       	mov	r24, r24
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	a9 01       	movw	r20, r18
    129c:	02 c0       	rjmp	.+4      	; 0x12a2 <GPIO_readPin+0x90>
    129e:	55 95       	asr	r21
    12a0:	47 95       	ror	r20
    12a2:	8a 95       	dec	r24
    12a4:	e2 f7       	brpl	.-8      	; 0x129e <GPIO_readPin+0x8c>
    12a6:	ca 01       	movw	r24, r20
    12a8:	58 2f       	mov	r21, r24
    12aa:	51 70       	andi	r21, 0x01	; 1
    12ac:	5b 83       	std	Y+3, r21	; 0x03
    12ae:	27 c0       	rjmp	.+78     	; 0x12fe <GPIO_readPin+0xec>
        case 'C': return (PINC & (1<<pin_num))?1:0;
    12b0:	e3 e3       	ldi	r30, 0x33	; 51
    12b2:	f0 e0       	ldi	r31, 0x00	; 0
    12b4:	80 81       	ld	r24, Z
    12b6:	28 2f       	mov	r18, r24
    12b8:	30 e0       	ldi	r19, 0x00	; 0
    12ba:	8a 81       	ldd	r24, Y+2	; 0x02
    12bc:	88 2f       	mov	r24, r24
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	a9 01       	movw	r20, r18
    12c2:	02 c0       	rjmp	.+4      	; 0x12c8 <GPIO_readPin+0xb6>
    12c4:	55 95       	asr	r21
    12c6:	47 95       	ror	r20
    12c8:	8a 95       	dec	r24
    12ca:	e2 f7       	brpl	.-8      	; 0x12c4 <GPIO_readPin+0xb2>
    12cc:	ca 01       	movw	r24, r20
    12ce:	58 2f       	mov	r21, r24
    12d0:	51 70       	andi	r21, 0x01	; 1
    12d2:	5b 83       	std	Y+3, r21	; 0x03
    12d4:	14 c0       	rjmp	.+40     	; 0x12fe <GPIO_readPin+0xec>
        case 'D': return (PIND & (1<<pin_num))?1:0;
    12d6:	e0 e3       	ldi	r30, 0x30	; 48
    12d8:	f0 e0       	ldi	r31, 0x00	; 0
    12da:	80 81       	ld	r24, Z
    12dc:	28 2f       	mov	r18, r24
    12de:	30 e0       	ldi	r19, 0x00	; 0
    12e0:	8a 81       	ldd	r24, Y+2	; 0x02
    12e2:	88 2f       	mov	r24, r24
    12e4:	90 e0       	ldi	r25, 0x00	; 0
    12e6:	a9 01       	movw	r20, r18
    12e8:	02 c0       	rjmp	.+4      	; 0x12ee <GPIO_readPin+0xdc>
    12ea:	55 95       	asr	r21
    12ec:	47 95       	ror	r20
    12ee:	8a 95       	dec	r24
    12f0:	e2 f7       	brpl	.-8      	; 0x12ea <GPIO_readPin+0xd8>
    12f2:	ca 01       	movw	r24, r20
    12f4:	58 2f       	mov	r21, r24
    12f6:	51 70       	andi	r21, 0x01	; 1
    12f8:	5b 83       	std	Y+3, r21	; 0x03
    12fa:	01 c0       	rjmp	.+2      	; 0x12fe <GPIO_readPin+0xec>
    }
    return 0;
    12fc:	1b 82       	std	Y+3, r1	; 0x03
    12fe:	8b 81       	ldd	r24, Y+3	; 0x03
}
    1300:	0f 90       	pop	r0
    1302:	0f 90       	pop	r0
    1304:	0f 90       	pop	r0
    1306:	0f 90       	pop	r0
    1308:	0f 90       	pop	r0
    130a:	cf 91       	pop	r28
    130c:	df 91       	pop	r29
    130e:	08 95       	ret

00001310 <ADC_init>:
#include "ADC/adc.h"

void ADC_init(void){
    1310:	df 93       	push	r29
    1312:	cf 93       	push	r28
    1314:	cd b7       	in	r28, 0x3d	; 61
    1316:	de b7       	in	r29, 0x3e	; 62
    ADMUX = (1<<REFS1)|(1<<REFS0);
    1318:	e7 e2       	ldi	r30, 0x27	; 39
    131a:	f0 e0       	ldi	r31, 0x00	; 0
    131c:	80 ec       	ldi	r24, 0xC0	; 192
    131e:	80 83       	st	Z, r24
    ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
    1320:	e6 e2       	ldi	r30, 0x26	; 38
    1322:	f0 e0       	ldi	r31, 0x00	; 0
    1324:	87 e8       	ldi	r24, 0x87	; 135
    1326:	80 83       	st	Z, r24
}
    1328:	cf 91       	pop	r28
    132a:	df 91       	pop	r29
    132c:	08 95       	ret

0000132e <ADC_readChannel>:

uint16 ADC_readChannel(uint8 channel_num){
    132e:	df 93       	push	r29
    1330:	cf 93       	push	r28
    1332:	0f 92       	push	r0
    1334:	cd b7       	in	r28, 0x3d	; 61
    1336:	de b7       	in	r29, 0x3e	; 62
    1338:	89 83       	std	Y+1, r24	; 0x01
    ADMUX = (ADMUX & 0xF0) | (channel_num & 0x0F);
    133a:	a7 e2       	ldi	r26, 0x27	; 39
    133c:	b0 e0       	ldi	r27, 0x00	; 0
    133e:	e7 e2       	ldi	r30, 0x27	; 39
    1340:	f0 e0       	ldi	r31, 0x00	; 0
    1342:	80 81       	ld	r24, Z
    1344:	98 2f       	mov	r25, r24
    1346:	90 7f       	andi	r25, 0xF0	; 240
    1348:	89 81       	ldd	r24, Y+1	; 0x01
    134a:	8f 70       	andi	r24, 0x0F	; 15
    134c:	89 2b       	or	r24, r25
    134e:	8c 93       	st	X, r24
    ADCSRA |= (1<<ADSC);
    1350:	a6 e2       	ldi	r26, 0x26	; 38
    1352:	b0 e0       	ldi	r27, 0x00	; 0
    1354:	e6 e2       	ldi	r30, 0x26	; 38
    1356:	f0 e0       	ldi	r31, 0x00	; 0
    1358:	80 81       	ld	r24, Z
    135a:	80 64       	ori	r24, 0x40	; 64
    135c:	8c 93       	st	X, r24
    while(ADCSRA & (1<<ADSC));
    135e:	e6 e2       	ldi	r30, 0x26	; 38
    1360:	f0 e0       	ldi	r31, 0x00	; 0
    1362:	80 81       	ld	r24, Z
    1364:	88 2f       	mov	r24, r24
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	80 74       	andi	r24, 0x40	; 64
    136a:	90 70       	andi	r25, 0x00	; 0
    136c:	00 97       	sbiw	r24, 0x00	; 0
    136e:	b9 f7       	brne	.-18     	; 0x135e <ADC_readChannel+0x30>
    return ADC;
    1370:	e4 e2       	ldi	r30, 0x24	; 36
    1372:	f0 e0       	ldi	r31, 0x00	; 0
    1374:	80 81       	ld	r24, Z
    1376:	91 81       	ldd	r25, Z+1	; 0x01
}
    1378:	0f 90       	pop	r0
    137a:	cf 91       	pop	r28
    137c:	df 91       	pop	r29
    137e:	08 95       	ret

00001380 <DcMotor_Init>:
#include <avr/io.h>

#define IN1 PB0
#define IN2 PB1

void DcMotor_Init(void){
    1380:	df 93       	push	r29
    1382:	cf 93       	push	r28
    1384:	cd b7       	in	r28, 0x3d	; 61
    1386:	de b7       	in	r29, 0x3e	; 62
    DDRB |= (1<<IN1)|(1<<IN2);
    1388:	a7 e3       	ldi	r26, 0x37	; 55
    138a:	b0 e0       	ldi	r27, 0x00	; 0
    138c:	e7 e3       	ldi	r30, 0x37	; 55
    138e:	f0 e0       	ldi	r31, 0x00	; 0
    1390:	80 81       	ld	r24, Z
    1392:	83 60       	ori	r24, 0x03	; 3
    1394:	8c 93       	st	X, r24
    PORTB &= ~((1<<IN1)|(1<<IN2));
    1396:	a8 e3       	ldi	r26, 0x38	; 56
    1398:	b0 e0       	ldi	r27, 0x00	; 0
    139a:	e8 e3       	ldi	r30, 0x38	; 56
    139c:	f0 e0       	ldi	r31, 0x00	; 0
    139e:	80 81       	ld	r24, Z
    13a0:	8c 7f       	andi	r24, 0xFC	; 252
    13a2:	8c 93       	st	X, r24
}
    13a4:	cf 91       	pop	r28
    13a6:	df 91       	pop	r29
    13a8:	08 95       	ret

000013aa <DcMotor_Rotate>:

void DcMotor_Rotate(DcMotor_State state,uint8 speed){
    13aa:	df 93       	push	r29
    13ac:	cf 93       	push	r28
    13ae:	00 d0       	rcall	.+0      	; 0x13b0 <DcMotor_Rotate+0x6>
    13b0:	00 d0       	rcall	.+0      	; 0x13b2 <DcMotor_Rotate+0x8>
    13b2:	cd b7       	in	r28, 0x3d	; 61
    13b4:	de b7       	in	r29, 0x3e	; 62
    13b6:	89 83       	std	Y+1, r24	; 0x01
    13b8:	6a 83       	std	Y+2, r22	; 0x02
    switch(state){
    13ba:	89 81       	ldd	r24, Y+1	; 0x01
    13bc:	28 2f       	mov	r18, r24
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	3c 83       	std	Y+4, r19	; 0x04
    13c2:	2b 83       	std	Y+3, r18	; 0x03
    13c4:	8b 81       	ldd	r24, Y+3	; 0x03
    13c6:	9c 81       	ldd	r25, Y+4	; 0x04
    13c8:	81 30       	cpi	r24, 0x01	; 1
    13ca:	91 05       	cpc	r25, r1
    13cc:	89 f0       	breq	.+34     	; 0x13f0 <DcMotor_Rotate+0x46>
    13ce:	2b 81       	ldd	r18, Y+3	; 0x03
    13d0:	3c 81       	ldd	r19, Y+4	; 0x04
    13d2:	22 30       	cpi	r18, 0x02	; 2
    13d4:	31 05       	cpc	r19, r1
    13d6:	d9 f0       	breq	.+54     	; 0x140e <DcMotor_Rotate+0x64>
    13d8:	8b 81       	ldd	r24, Y+3	; 0x03
    13da:	9c 81       	ldd	r25, Y+4	; 0x04
    13dc:	00 97       	sbiw	r24, 0x00	; 0
    13de:	29 f5       	brne	.+74     	; 0x142a <DcMotor_Rotate+0x80>
        case STOP: PORTB &= ~((1<<IN1)|(1<<IN2)); break;
    13e0:	a8 e3       	ldi	r26, 0x38	; 56
    13e2:	b0 e0       	ldi	r27, 0x00	; 0
    13e4:	e8 e3       	ldi	r30, 0x38	; 56
    13e6:	f0 e0       	ldi	r31, 0x00	; 0
    13e8:	80 81       	ld	r24, Z
    13ea:	8c 7f       	andi	r24, 0xFC	; 252
    13ec:	8c 93       	st	X, r24
    13ee:	1d c0       	rjmp	.+58     	; 0x142a <DcMotor_Rotate+0x80>
        case CW: PORTB |= (1<<IN1); PORTB &= ~(1<<IN2); break;
    13f0:	a8 e3       	ldi	r26, 0x38	; 56
    13f2:	b0 e0       	ldi	r27, 0x00	; 0
    13f4:	e8 e3       	ldi	r30, 0x38	; 56
    13f6:	f0 e0       	ldi	r31, 0x00	; 0
    13f8:	80 81       	ld	r24, Z
    13fa:	81 60       	ori	r24, 0x01	; 1
    13fc:	8c 93       	st	X, r24
    13fe:	a8 e3       	ldi	r26, 0x38	; 56
    1400:	b0 e0       	ldi	r27, 0x00	; 0
    1402:	e8 e3       	ldi	r30, 0x38	; 56
    1404:	f0 e0       	ldi	r31, 0x00	; 0
    1406:	80 81       	ld	r24, Z
    1408:	8d 7f       	andi	r24, 0xFD	; 253
    140a:	8c 93       	st	X, r24
    140c:	0e c0       	rjmp	.+28     	; 0x142a <DcMotor_Rotate+0x80>
        case ACW: PORTB |= (1<<IN2); PORTB &= ~(1<<IN1); break;
    140e:	a8 e3       	ldi	r26, 0x38	; 56
    1410:	b0 e0       	ldi	r27, 0x00	; 0
    1412:	e8 e3       	ldi	r30, 0x38	; 56
    1414:	f0 e0       	ldi	r31, 0x00	; 0
    1416:	80 81       	ld	r24, Z
    1418:	82 60       	ori	r24, 0x02	; 2
    141a:	8c 93       	st	X, r24
    141c:	a8 e3       	ldi	r26, 0x38	; 56
    141e:	b0 e0       	ldi	r27, 0x00	; 0
    1420:	e8 e3       	ldi	r30, 0x38	; 56
    1422:	f0 e0       	ldi	r31, 0x00	; 0
    1424:	80 81       	ld	r24, Z
    1426:	8e 7f       	andi	r24, 0xFE	; 254
    1428:	8c 93       	st	X, r24
    }
    PWM_Timer0_Start(speed);
    142a:	8a 81       	ldd	r24, Y+2	; 0x02
    142c:	0e 94 0f 07 	call	0xe1e	; 0xe1e <PWM_Timer0_Start>
}
    1430:	0f 90       	pop	r0
    1432:	0f 90       	pop	r0
    1434:	0f 90       	pop	r0
    1436:	0f 90       	pop	r0
    1438:	cf 91       	pop	r28
    143a:	df 91       	pop	r29
    143c:	08 95       	ret

0000143e <LM35_getTemperature>:
#include "LM35/lm35.h"
#include "ADC/adc.h"

uint16 LM35_getTemperature(void){
    143e:	df 93       	push	r29
    1440:	cf 93       	push	r28
    1442:	00 d0       	rcall	.+0      	; 0x1444 <LM35_getTemperature+0x6>
    1444:	cd b7       	in	r28, 0x3d	; 61
    1446:	de b7       	in	r29, 0x3e	; 62
    uint16 adc_value = ADC_readChannel(1);
    1448:	81 e0       	ldi	r24, 0x01	; 1
    144a:	0e 94 97 09 	call	0x132e	; 0x132e <ADC_readChannel>
    144e:	9a 83       	std	Y+2, r25	; 0x02
    1450:	89 83       	std	Y+1, r24	; 0x01
    return (uint16)((adc_value * 2.56 * 100.0) / 1023.0);
    1452:	89 81       	ldd	r24, Y+1	; 0x01
    1454:	9a 81       	ldd	r25, Y+2	; 0x02
    1456:	cc 01       	movw	r24, r24
    1458:	a0 e0       	ldi	r26, 0x00	; 0
    145a:	b0 e0       	ldi	r27, 0x00	; 0
    145c:	bc 01       	movw	r22, r24
    145e:	cd 01       	movw	r24, r26
    1460:	0e 94 a1 04 	call	0x942	; 0x942 <__floatunsisf>
    1464:	dc 01       	movw	r26, r24
    1466:	cb 01       	movw	r24, r22
    1468:	bc 01       	movw	r22, r24
    146a:	cd 01       	movw	r24, r26
    146c:	2a e0       	ldi	r18, 0x0A	; 10
    146e:	37 ed       	ldi	r19, 0xD7	; 215
    1470:	43 e2       	ldi	r20, 0x23	; 35
    1472:	50 e4       	ldi	r21, 0x40	; 64
    1474:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1478:	dc 01       	movw	r26, r24
    147a:	cb 01       	movw	r24, r22
    147c:	bc 01       	movw	r22, r24
    147e:	cd 01       	movw	r24, r26
    1480:	20 e0       	ldi	r18, 0x00	; 0
    1482:	30 e0       	ldi	r19, 0x00	; 0
    1484:	48 ec       	ldi	r20, 0xC8	; 200
    1486:	52 e4       	ldi	r21, 0x42	; 66
    1488:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    148c:	dc 01       	movw	r26, r24
    148e:	cb 01       	movw	r24, r22
    1490:	bc 01       	movw	r22, r24
    1492:	cd 01       	movw	r24, r26
    1494:	20 e0       	ldi	r18, 0x00	; 0
    1496:	30 ec       	ldi	r19, 0xC0	; 192
    1498:	4f e7       	ldi	r20, 0x7F	; 127
    149a:	54 e4       	ldi	r21, 0x44	; 68
    149c:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    14a0:	dc 01       	movw	r26, r24
    14a2:	cb 01       	movw	r24, r22
    14a4:	bc 01       	movw	r22, r24
    14a6:	cd 01       	movw	r24, r26
    14a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14ac:	dc 01       	movw	r26, r24
    14ae:	cb 01       	movw	r24, r22
}
    14b0:	0f 90       	pop	r0
    14b2:	0f 90       	pop	r0
    14b4:	cf 91       	pop	r28
    14b6:	df 91       	pop	r29
    14b8:	08 95       	ret

000014ba <LEDS_init>:
#include "LED/led.h"
#include <avr/io.h>

void LEDS_init(void){
    14ba:	df 93       	push	r29
    14bc:	cf 93       	push	r28
    14be:	cd b7       	in	r28, 0x3d	; 61
    14c0:	de b7       	in	r29, 0x3e	; 62
    DDRB |= (1<<RED_LED)|(1<<GREEN_LED)|(1<<BLUE_LED);
    14c2:	a7 e3       	ldi	r26, 0x37	; 55
    14c4:	b0 e0       	ldi	r27, 0x00	; 0
    14c6:	e7 e3       	ldi	r30, 0x37	; 55
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	80 81       	ld	r24, Z
    14cc:	80 6e       	ori	r24, 0xE0	; 224
    14ce:	8c 93       	st	X, r24
    PORTB &= ~((1<<RED_LED)|(1<<GREEN_LED)|(1<<BLUE_LED));
    14d0:	a8 e3       	ldi	r26, 0x38	; 56
    14d2:	b0 e0       	ldi	r27, 0x00	; 0
    14d4:	e8 e3       	ldi	r30, 0x38	; 56
    14d6:	f0 e0       	ldi	r31, 0x00	; 0
    14d8:	80 81       	ld	r24, Z
    14da:	8f 71       	andi	r24, 0x1F	; 31
    14dc:	8c 93       	st	X, r24
}
    14de:	cf 91       	pop	r28
    14e0:	df 91       	pop	r29
    14e2:	08 95       	ret

000014e4 <LED_on>:

void LED_on(LED_ID id){ PORTB |= (1<<id); }
    14e4:	df 93       	push	r29
    14e6:	cf 93       	push	r28
    14e8:	0f 92       	push	r0
    14ea:	cd b7       	in	r28, 0x3d	; 61
    14ec:	de b7       	in	r29, 0x3e	; 62
    14ee:	89 83       	std	Y+1, r24	; 0x01
    14f0:	a8 e3       	ldi	r26, 0x38	; 56
    14f2:	b0 e0       	ldi	r27, 0x00	; 0
    14f4:	e8 e3       	ldi	r30, 0x38	; 56
    14f6:	f0 e0       	ldi	r31, 0x00	; 0
    14f8:	80 81       	ld	r24, Z
    14fa:	48 2f       	mov	r20, r24
    14fc:	89 81       	ldd	r24, Y+1	; 0x01
    14fe:	28 2f       	mov	r18, r24
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	02 2e       	mov	r0, r18
    1508:	02 c0       	rjmp	.+4      	; 0x150e <LED_on+0x2a>
    150a:	88 0f       	add	r24, r24
    150c:	99 1f       	adc	r25, r25
    150e:	0a 94       	dec	r0
    1510:	e2 f7       	brpl	.-8      	; 0x150a <LED_on+0x26>
    1512:	84 2b       	or	r24, r20
    1514:	8c 93       	st	X, r24
    1516:	0f 90       	pop	r0
    1518:	cf 91       	pop	r28
    151a:	df 91       	pop	r29
    151c:	08 95       	ret

0000151e <LED_off>:
void LED_off(LED_ID id){ PORTB &= ~(1<<id); }
    151e:	df 93       	push	r29
    1520:	cf 93       	push	r28
    1522:	0f 92       	push	r0
    1524:	cd b7       	in	r28, 0x3d	; 61
    1526:	de b7       	in	r29, 0x3e	; 62
    1528:	89 83       	std	Y+1, r24	; 0x01
    152a:	a8 e3       	ldi	r26, 0x38	; 56
    152c:	b0 e0       	ldi	r27, 0x00	; 0
    152e:	e8 e3       	ldi	r30, 0x38	; 56
    1530:	f0 e0       	ldi	r31, 0x00	; 0
    1532:	80 81       	ld	r24, Z
    1534:	48 2f       	mov	r20, r24
    1536:	89 81       	ldd	r24, Y+1	; 0x01
    1538:	28 2f       	mov	r18, r24
    153a:	30 e0       	ldi	r19, 0x00	; 0
    153c:	81 e0       	ldi	r24, 0x01	; 1
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	02 2e       	mov	r0, r18
    1542:	02 c0       	rjmp	.+4      	; 0x1548 <LED_off+0x2a>
    1544:	88 0f       	add	r24, r24
    1546:	99 1f       	adc	r25, r25
    1548:	0a 94       	dec	r0
    154a:	e2 f7       	brpl	.-8      	; 0x1544 <LED_off+0x26>
    154c:	80 95       	com	r24
    154e:	84 23       	and	r24, r20
    1550:	8c 93       	st	X, r24
    1552:	0f 90       	pop	r0
    1554:	cf 91       	pop	r28
    1556:	df 91       	pop	r29
    1558:	08 95       	ret

0000155a <LDR_getLightIntensity>:
#include "LDR/ldr.h"
#include "ADC/adc.h"

uint16 LDR_getLightIntensity(void){
    155a:	df 93       	push	r29
    155c:	cf 93       	push	r28
    155e:	00 d0       	rcall	.+0      	; 0x1560 <LDR_getLightIntensity+0x6>
    1560:	cd b7       	in	r28, 0x3d	; 61
    1562:	de b7       	in	r29, 0x3e	; 62
    uint16 adc_value = ADC_readChannel(0);
    1564:	80 e0       	ldi	r24, 0x00	; 0
    1566:	0e 94 97 09 	call	0x132e	; 0x132e <ADC_readChannel>
    156a:	9a 83       	std	Y+2, r25	; 0x02
    156c:	89 83       	std	Y+1, r24	; 0x01
    return (uint16)((adc_value*100UL)/1023UL);
    156e:	89 81       	ldd	r24, Y+1	; 0x01
    1570:	9a 81       	ldd	r25, Y+2	; 0x02
    1572:	cc 01       	movw	r24, r24
    1574:	a0 e0       	ldi	r26, 0x00	; 0
    1576:	b0 e0       	ldi	r27, 0x00	; 0
    1578:	24 e6       	ldi	r18, 0x64	; 100
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	40 e0       	ldi	r20, 0x00	; 0
    157e:	50 e0       	ldi	r21, 0x00	; 0
    1580:	bc 01       	movw	r22, r24
    1582:	cd 01       	movw	r24, r26
    1584:	0e 94 30 10 	call	0x2060	; 0x2060 <__mulsi3>
    1588:	dc 01       	movw	r26, r24
    158a:	cb 01       	movw	r24, r22
    158c:	2f ef       	ldi	r18, 0xFF	; 255
    158e:	33 e0       	ldi	r19, 0x03	; 3
    1590:	40 e0       	ldi	r20, 0x00	; 0
    1592:	50 e0       	ldi	r21, 0x00	; 0
    1594:	bc 01       	movw	r22, r24
    1596:	cd 01       	movw	r24, r26
    1598:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__udivmodsi4>
    159c:	da 01       	movw	r26, r20
    159e:	c9 01       	movw	r24, r18
}
    15a0:	0f 90       	pop	r0
    15a2:	0f 90       	pop	r0
    15a4:	cf 91       	pop	r28
    15a6:	df 91       	pop	r29
    15a8:	08 95       	ret

000015aa <LCD_sendCommand>:
#define LCD_CTRL_PORT PORTD
#define LCD_CTRL_DDR  DDRD
#define RS PD0
#define E  PD1

void LCD_sendCommand(uint8 cmd){
    15aa:	df 93       	push	r29
    15ac:	cf 93       	push	r28
    15ae:	cd b7       	in	r28, 0x3d	; 61
    15b0:	de b7       	in	r29, 0x3e	; 62
    15b2:	a7 97       	sbiw	r28, 0x27	; 39
    15b4:	0f b6       	in	r0, 0x3f	; 63
    15b6:	f8 94       	cli
    15b8:	de bf       	out	0x3e, r29	; 62
    15ba:	0f be       	out	0x3f, r0	; 63
    15bc:	cd bf       	out	0x3d, r28	; 61
    15be:	8f a3       	std	Y+39, r24	; 0x27
    PORTC = cmd;
    15c0:	e5 e3       	ldi	r30, 0x35	; 53
    15c2:	f0 e0       	ldi	r31, 0x00	; 0
    15c4:	8f a1       	ldd	r24, Y+39	; 0x27
    15c6:	80 83       	st	Z, r24
    LCD_CTRL_PORT &= ~(1<<RS);
    15c8:	a2 e3       	ldi	r26, 0x32	; 50
    15ca:	b0 e0       	ldi	r27, 0x00	; 0
    15cc:	e2 e3       	ldi	r30, 0x32	; 50
    15ce:	f0 e0       	ldi	r31, 0x00	; 0
    15d0:	80 81       	ld	r24, Z
    15d2:	8e 7f       	andi	r24, 0xFE	; 254
    15d4:	8c 93       	st	X, r24
    LCD_CTRL_PORT |= (1<<E);
    15d6:	a2 e3       	ldi	r26, 0x32	; 50
    15d8:	b0 e0       	ldi	r27, 0x00	; 0
    15da:	e2 e3       	ldi	r30, 0x32	; 50
    15dc:	f0 e0       	ldi	r31, 0x00	; 0
    15de:	80 81       	ld	r24, Z
    15e0:	82 60       	ori	r24, 0x02	; 2
    15e2:	8c 93       	st	X, r24
    15e4:	80 e0       	ldi	r24, 0x00	; 0
    15e6:	90 e0       	ldi	r25, 0x00	; 0
    15e8:	a0 e8       	ldi	r26, 0x80	; 128
    15ea:	bf e3       	ldi	r27, 0x3F	; 63
    15ec:	8b a3       	std	Y+35, r24	; 0x23
    15ee:	9c a3       	std	Y+36, r25	; 0x24
    15f0:	ad a3       	std	Y+37, r26	; 0x25
    15f2:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    15f4:	6b a1       	ldd	r22, Y+35	; 0x23
    15f6:	7c a1       	ldd	r23, Y+36	; 0x24
    15f8:	8d a1       	ldd	r24, Y+37	; 0x25
    15fa:	9e a1       	ldd	r25, Y+38	; 0x26
    15fc:	2b ea       	ldi	r18, 0xAB	; 171
    15fe:	3a ea       	ldi	r19, 0xAA	; 170
    1600:	4a ea       	ldi	r20, 0xAA	; 170
    1602:	50 e4       	ldi	r21, 0x40	; 64
    1604:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1608:	dc 01       	movw	r26, r24
    160a:	cb 01       	movw	r24, r22
    160c:	8f 8f       	std	Y+31, r24	; 0x1f
    160e:	98 a3       	std	Y+32, r25	; 0x20
    1610:	a9 a3       	std	Y+33, r26	; 0x21
    1612:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    1614:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1616:	78 a1       	ldd	r23, Y+32	; 0x20
    1618:	89 a1       	ldd	r24, Y+33	; 0x21
    161a:	9a a1       	ldd	r25, Y+34	; 0x22
    161c:	20 e0       	ldi	r18, 0x00	; 0
    161e:	30 e0       	ldi	r19, 0x00	; 0
    1620:	40 e8       	ldi	r20, 0x80	; 128
    1622:	5f e3       	ldi	r21, 0x3F	; 63
    1624:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1628:	88 23       	and	r24, r24
    162a:	1c f4       	brge	.+6      	; 0x1632 <LCD_sendCommand+0x88>
		__ticks = 1;
    162c:	81 e0       	ldi	r24, 0x01	; 1
    162e:	8e 8f       	std	Y+30, r24	; 0x1e
    1630:	91 c0       	rjmp	.+290    	; 0x1754 <LCD_sendCommand+0x1aa>
	else if (__tmp > 255)
    1632:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1634:	78 a1       	ldd	r23, Y+32	; 0x20
    1636:	89 a1       	ldd	r24, Y+33	; 0x21
    1638:	9a a1       	ldd	r25, Y+34	; 0x22
    163a:	20 e0       	ldi	r18, 0x00	; 0
    163c:	30 e0       	ldi	r19, 0x00	; 0
    163e:	4f e7       	ldi	r20, 0x7F	; 127
    1640:	53 e4       	ldi	r21, 0x43	; 67
    1642:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1646:	18 16       	cp	r1, r24
    1648:	0c f0       	brlt	.+2      	; 0x164c <LCD_sendCommand+0xa2>
    164a:	7b c0       	rjmp	.+246    	; 0x1742 <LCD_sendCommand+0x198>
	{
		_delay_ms(__us / 1000.0);
    164c:	6b a1       	ldd	r22, Y+35	; 0x23
    164e:	7c a1       	ldd	r23, Y+36	; 0x24
    1650:	8d a1       	ldd	r24, Y+37	; 0x25
    1652:	9e a1       	ldd	r25, Y+38	; 0x26
    1654:	20 e0       	ldi	r18, 0x00	; 0
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	4a e7       	ldi	r20, 0x7A	; 122
    165a:	54 e4       	ldi	r21, 0x44	; 68
    165c:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1660:	dc 01       	movw	r26, r24
    1662:	cb 01       	movw	r24, r22
    1664:	8a 8f       	std	Y+26, r24	; 0x1a
    1666:	9b 8f       	std	Y+27, r25	; 0x1b
    1668:	ac 8f       	std	Y+28, r26	; 0x1c
    166a:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    166c:	6a 8d       	ldd	r22, Y+26	; 0x1a
    166e:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1670:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1672:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1674:	20 e0       	ldi	r18, 0x00	; 0
    1676:	30 e0       	ldi	r19, 0x00	; 0
    1678:	4a e7       	ldi	r20, 0x7A	; 122
    167a:	55 e4       	ldi	r21, 0x45	; 69
    167c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1680:	dc 01       	movw	r26, r24
    1682:	cb 01       	movw	r24, r22
    1684:	8e 8b       	std	Y+22, r24	; 0x16
    1686:	9f 8b       	std	Y+23, r25	; 0x17
    1688:	a8 8f       	std	Y+24, r26	; 0x18
    168a:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    168c:	6e 89       	ldd	r22, Y+22	; 0x16
    168e:	7f 89       	ldd	r23, Y+23	; 0x17
    1690:	88 8d       	ldd	r24, Y+24	; 0x18
    1692:	99 8d       	ldd	r25, Y+25	; 0x19
    1694:	20 e0       	ldi	r18, 0x00	; 0
    1696:	30 e0       	ldi	r19, 0x00	; 0
    1698:	40 e8       	ldi	r20, 0x80	; 128
    169a:	5f e3       	ldi	r21, 0x3F	; 63
    169c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    16a0:	88 23       	and	r24, r24
    16a2:	2c f4       	brge	.+10     	; 0x16ae <LCD_sendCommand+0x104>
		__ticks = 1;
    16a4:	81 e0       	ldi	r24, 0x01	; 1
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	9d 8b       	std	Y+21, r25	; 0x15
    16aa:	8c 8b       	std	Y+20, r24	; 0x14
    16ac:	3f c0       	rjmp	.+126    	; 0x172c <LCD_sendCommand+0x182>
	else if (__tmp > 65535)
    16ae:	6e 89       	ldd	r22, Y+22	; 0x16
    16b0:	7f 89       	ldd	r23, Y+23	; 0x17
    16b2:	88 8d       	ldd	r24, Y+24	; 0x18
    16b4:	99 8d       	ldd	r25, Y+25	; 0x19
    16b6:	20 e0       	ldi	r18, 0x00	; 0
    16b8:	3f ef       	ldi	r19, 0xFF	; 255
    16ba:	4f e7       	ldi	r20, 0x7F	; 127
    16bc:	57 e4       	ldi	r21, 0x47	; 71
    16be:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    16c2:	18 16       	cp	r1, r24
    16c4:	4c f5       	brge	.+82     	; 0x1718 <LCD_sendCommand+0x16e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16c6:	6a 8d       	ldd	r22, Y+26	; 0x1a
    16c8:	7b 8d       	ldd	r23, Y+27	; 0x1b
    16ca:	8c 8d       	ldd	r24, Y+28	; 0x1c
    16cc:	9d 8d       	ldd	r25, Y+29	; 0x1d
    16ce:	20 e0       	ldi	r18, 0x00	; 0
    16d0:	30 e0       	ldi	r19, 0x00	; 0
    16d2:	40 e2       	ldi	r20, 0x20	; 32
    16d4:	51 e4       	ldi	r21, 0x41	; 65
    16d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16da:	dc 01       	movw	r26, r24
    16dc:	cb 01       	movw	r24, r22
    16de:	bc 01       	movw	r22, r24
    16e0:	cd 01       	movw	r24, r26
    16e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16e6:	dc 01       	movw	r26, r24
    16e8:	cb 01       	movw	r24, r22
    16ea:	9d 8b       	std	Y+21, r25	; 0x15
    16ec:	8c 8b       	std	Y+20, r24	; 0x14
    16ee:	0f c0       	rjmp	.+30     	; 0x170e <LCD_sendCommand+0x164>
    16f0:	80 e9       	ldi	r24, 0x90	; 144
    16f2:	91 e0       	ldi	r25, 0x01	; 1
    16f4:	9b 8b       	std	Y+19, r25	; 0x13
    16f6:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    16f8:	8a 89       	ldd	r24, Y+18	; 0x12
    16fa:	9b 89       	ldd	r25, Y+19	; 0x13
    16fc:	01 97       	sbiw	r24, 0x01	; 1
    16fe:	f1 f7       	brne	.-4      	; 0x16fc <LCD_sendCommand+0x152>
    1700:	9b 8b       	std	Y+19, r25	; 0x13
    1702:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1704:	8c 89       	ldd	r24, Y+20	; 0x14
    1706:	9d 89       	ldd	r25, Y+21	; 0x15
    1708:	01 97       	sbiw	r24, 0x01	; 1
    170a:	9d 8b       	std	Y+21, r25	; 0x15
    170c:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    170e:	8c 89       	ldd	r24, Y+20	; 0x14
    1710:	9d 89       	ldd	r25, Y+21	; 0x15
    1712:	00 97       	sbiw	r24, 0x00	; 0
    1714:	69 f7       	brne	.-38     	; 0x16f0 <LCD_sendCommand+0x146>
    1716:	24 c0       	rjmp	.+72     	; 0x1760 <LCD_sendCommand+0x1b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1718:	6e 89       	ldd	r22, Y+22	; 0x16
    171a:	7f 89       	ldd	r23, Y+23	; 0x17
    171c:	88 8d       	ldd	r24, Y+24	; 0x18
    171e:	99 8d       	ldd	r25, Y+25	; 0x19
    1720:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1724:	dc 01       	movw	r26, r24
    1726:	cb 01       	movw	r24, r22
    1728:	9d 8b       	std	Y+21, r25	; 0x15
    172a:	8c 8b       	std	Y+20, r24	; 0x14
    172c:	8c 89       	ldd	r24, Y+20	; 0x14
    172e:	9d 89       	ldd	r25, Y+21	; 0x15
    1730:	99 8b       	std	Y+17, r25	; 0x11
    1732:	88 8b       	std	Y+16, r24	; 0x10
    1734:	88 89       	ldd	r24, Y+16	; 0x10
    1736:	99 89       	ldd	r25, Y+17	; 0x11
    1738:	01 97       	sbiw	r24, 0x01	; 1
    173a:	f1 f7       	brne	.-4      	; 0x1738 <LCD_sendCommand+0x18e>
    173c:	99 8b       	std	Y+17, r25	; 0x11
    173e:	88 8b       	std	Y+16, r24	; 0x10
    1740:	0f c0       	rjmp	.+30     	; 0x1760 <LCD_sendCommand+0x1b6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1742:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1744:	78 a1       	ldd	r23, Y+32	; 0x20
    1746:	89 a1       	ldd	r24, Y+33	; 0x21
    1748:	9a a1       	ldd	r25, Y+34	; 0x22
    174a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    174e:	dc 01       	movw	r26, r24
    1750:	cb 01       	movw	r24, r22
    1752:	8e 8f       	std	Y+30, r24	; 0x1e
    1754:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1756:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1758:	8f 85       	ldd	r24, Y+15	; 0x0f
    175a:	8a 95       	dec	r24
    175c:	f1 f7       	brne	.-4      	; 0x175a <LCD_sendCommand+0x1b0>
    175e:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_us(1);
    LCD_CTRL_PORT &= ~(1<<E);
    1760:	a2 e3       	ldi	r26, 0x32	; 50
    1762:	b0 e0       	ldi	r27, 0x00	; 0
    1764:	e2 e3       	ldi	r30, 0x32	; 50
    1766:	f0 e0       	ldi	r31, 0x00	; 0
    1768:	80 81       	ld	r24, Z
    176a:	8d 7f       	andi	r24, 0xFD	; 253
    176c:	8c 93       	st	X, r24
    176e:	80 e0       	ldi	r24, 0x00	; 0
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	a0 e0       	ldi	r26, 0x00	; 0
    1774:	b0 e4       	ldi	r27, 0x40	; 64
    1776:	8b 87       	std	Y+11, r24	; 0x0b
    1778:	9c 87       	std	Y+12, r25	; 0x0c
    177a:	ad 87       	std	Y+13, r26	; 0x0d
    177c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    177e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1780:	7c 85       	ldd	r23, Y+12	; 0x0c
    1782:	8d 85       	ldd	r24, Y+13	; 0x0d
    1784:	9e 85       	ldd	r25, Y+14	; 0x0e
    1786:	20 e0       	ldi	r18, 0x00	; 0
    1788:	30 e0       	ldi	r19, 0x00	; 0
    178a:	4a e7       	ldi	r20, 0x7A	; 122
    178c:	55 e4       	ldi	r21, 0x45	; 69
    178e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1792:	dc 01       	movw	r26, r24
    1794:	cb 01       	movw	r24, r22
    1796:	8f 83       	std	Y+7, r24	; 0x07
    1798:	98 87       	std	Y+8, r25	; 0x08
    179a:	a9 87       	std	Y+9, r26	; 0x09
    179c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    179e:	6f 81       	ldd	r22, Y+7	; 0x07
    17a0:	78 85       	ldd	r23, Y+8	; 0x08
    17a2:	89 85       	ldd	r24, Y+9	; 0x09
    17a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    17a6:	20 e0       	ldi	r18, 0x00	; 0
    17a8:	30 e0       	ldi	r19, 0x00	; 0
    17aa:	40 e8       	ldi	r20, 0x80	; 128
    17ac:	5f e3       	ldi	r21, 0x3F	; 63
    17ae:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    17b2:	88 23       	and	r24, r24
    17b4:	2c f4       	brge	.+10     	; 0x17c0 <LCD_sendCommand+0x216>
		__ticks = 1;
    17b6:	81 e0       	ldi	r24, 0x01	; 1
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	9e 83       	std	Y+6, r25	; 0x06
    17bc:	8d 83       	std	Y+5, r24	; 0x05
    17be:	3f c0       	rjmp	.+126    	; 0x183e <LCD_sendCommand+0x294>
	else if (__tmp > 65535)
    17c0:	6f 81       	ldd	r22, Y+7	; 0x07
    17c2:	78 85       	ldd	r23, Y+8	; 0x08
    17c4:	89 85       	ldd	r24, Y+9	; 0x09
    17c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    17c8:	20 e0       	ldi	r18, 0x00	; 0
    17ca:	3f ef       	ldi	r19, 0xFF	; 255
    17cc:	4f e7       	ldi	r20, 0x7F	; 127
    17ce:	57 e4       	ldi	r21, 0x47	; 71
    17d0:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    17d4:	18 16       	cp	r1, r24
    17d6:	4c f5       	brge	.+82     	; 0x182a <LCD_sendCommand+0x280>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    17da:	7c 85       	ldd	r23, Y+12	; 0x0c
    17dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    17de:	9e 85       	ldd	r25, Y+14	; 0x0e
    17e0:	20 e0       	ldi	r18, 0x00	; 0
    17e2:	30 e0       	ldi	r19, 0x00	; 0
    17e4:	40 e2       	ldi	r20, 0x20	; 32
    17e6:	51 e4       	ldi	r21, 0x41	; 65
    17e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17ec:	dc 01       	movw	r26, r24
    17ee:	cb 01       	movw	r24, r22
    17f0:	bc 01       	movw	r22, r24
    17f2:	cd 01       	movw	r24, r26
    17f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17f8:	dc 01       	movw	r26, r24
    17fa:	cb 01       	movw	r24, r22
    17fc:	9e 83       	std	Y+6, r25	; 0x06
    17fe:	8d 83       	std	Y+5, r24	; 0x05
    1800:	0f c0       	rjmp	.+30     	; 0x1820 <LCD_sendCommand+0x276>
    1802:	80 e9       	ldi	r24, 0x90	; 144
    1804:	91 e0       	ldi	r25, 0x01	; 1
    1806:	9c 83       	std	Y+4, r25	; 0x04
    1808:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    180a:	8b 81       	ldd	r24, Y+3	; 0x03
    180c:	9c 81       	ldd	r25, Y+4	; 0x04
    180e:	01 97       	sbiw	r24, 0x01	; 1
    1810:	f1 f7       	brne	.-4      	; 0x180e <LCD_sendCommand+0x264>
    1812:	9c 83       	std	Y+4, r25	; 0x04
    1814:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1816:	8d 81       	ldd	r24, Y+5	; 0x05
    1818:	9e 81       	ldd	r25, Y+6	; 0x06
    181a:	01 97       	sbiw	r24, 0x01	; 1
    181c:	9e 83       	std	Y+6, r25	; 0x06
    181e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1820:	8d 81       	ldd	r24, Y+5	; 0x05
    1822:	9e 81       	ldd	r25, Y+6	; 0x06
    1824:	00 97       	sbiw	r24, 0x00	; 0
    1826:	69 f7       	brne	.-38     	; 0x1802 <LCD_sendCommand+0x258>
    1828:	14 c0       	rjmp	.+40     	; 0x1852 <LCD_sendCommand+0x2a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    182a:	6f 81       	ldd	r22, Y+7	; 0x07
    182c:	78 85       	ldd	r23, Y+8	; 0x08
    182e:	89 85       	ldd	r24, Y+9	; 0x09
    1830:	9a 85       	ldd	r25, Y+10	; 0x0a
    1832:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1836:	dc 01       	movw	r26, r24
    1838:	cb 01       	movw	r24, r22
    183a:	9e 83       	std	Y+6, r25	; 0x06
    183c:	8d 83       	std	Y+5, r24	; 0x05
    183e:	8d 81       	ldd	r24, Y+5	; 0x05
    1840:	9e 81       	ldd	r25, Y+6	; 0x06
    1842:	9a 83       	std	Y+2, r25	; 0x02
    1844:	89 83       	std	Y+1, r24	; 0x01
    1846:	89 81       	ldd	r24, Y+1	; 0x01
    1848:	9a 81       	ldd	r25, Y+2	; 0x02
    184a:	01 97       	sbiw	r24, 0x01	; 1
    184c:	f1 f7       	brne	.-4      	; 0x184a <LCD_sendCommand+0x2a0>
    184e:	9a 83       	std	Y+2, r25	; 0x02
    1850:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(2);
}
    1852:	a7 96       	adiw	r28, 0x27	; 39
    1854:	0f b6       	in	r0, 0x3f	; 63
    1856:	f8 94       	cli
    1858:	de bf       	out	0x3e, r29	; 62
    185a:	0f be       	out	0x3f, r0	; 63
    185c:	cd bf       	out	0x3d, r28	; 61
    185e:	cf 91       	pop	r28
    1860:	df 91       	pop	r29
    1862:	08 95       	ret

00001864 <LCD_displayChar>:

void LCD_displayChar(uint8 data){
    1864:	df 93       	push	r29
    1866:	cf 93       	push	r28
    1868:	cd b7       	in	r28, 0x3d	; 61
    186a:	de b7       	in	r29, 0x3e	; 62
    186c:	a7 97       	sbiw	r28, 0x27	; 39
    186e:	0f b6       	in	r0, 0x3f	; 63
    1870:	f8 94       	cli
    1872:	de bf       	out	0x3e, r29	; 62
    1874:	0f be       	out	0x3f, r0	; 63
    1876:	cd bf       	out	0x3d, r28	; 61
    1878:	8f a3       	std	Y+39, r24	; 0x27
    PORTC = data;
    187a:	e5 e3       	ldi	r30, 0x35	; 53
    187c:	f0 e0       	ldi	r31, 0x00	; 0
    187e:	8f a1       	ldd	r24, Y+39	; 0x27
    1880:	80 83       	st	Z, r24
    LCD_CTRL_PORT |= (1<<RS);
    1882:	a2 e3       	ldi	r26, 0x32	; 50
    1884:	b0 e0       	ldi	r27, 0x00	; 0
    1886:	e2 e3       	ldi	r30, 0x32	; 50
    1888:	f0 e0       	ldi	r31, 0x00	; 0
    188a:	80 81       	ld	r24, Z
    188c:	81 60       	ori	r24, 0x01	; 1
    188e:	8c 93       	st	X, r24
    LCD_CTRL_PORT |= (1<<E);
    1890:	a2 e3       	ldi	r26, 0x32	; 50
    1892:	b0 e0       	ldi	r27, 0x00	; 0
    1894:	e2 e3       	ldi	r30, 0x32	; 50
    1896:	f0 e0       	ldi	r31, 0x00	; 0
    1898:	80 81       	ld	r24, Z
    189a:	82 60       	ori	r24, 0x02	; 2
    189c:	8c 93       	st	X, r24
    189e:	80 e0       	ldi	r24, 0x00	; 0
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	a0 e8       	ldi	r26, 0x80	; 128
    18a4:	bf e3       	ldi	r27, 0x3F	; 63
    18a6:	8b a3       	std	Y+35, r24	; 0x23
    18a8:	9c a3       	std	Y+36, r25	; 0x24
    18aa:	ad a3       	std	Y+37, r26	; 0x25
    18ac:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    18ae:	6b a1       	ldd	r22, Y+35	; 0x23
    18b0:	7c a1       	ldd	r23, Y+36	; 0x24
    18b2:	8d a1       	ldd	r24, Y+37	; 0x25
    18b4:	9e a1       	ldd	r25, Y+38	; 0x26
    18b6:	2b ea       	ldi	r18, 0xAB	; 171
    18b8:	3a ea       	ldi	r19, 0xAA	; 170
    18ba:	4a ea       	ldi	r20, 0xAA	; 170
    18bc:	50 e4       	ldi	r21, 0x40	; 64
    18be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18c2:	dc 01       	movw	r26, r24
    18c4:	cb 01       	movw	r24, r22
    18c6:	8f 8f       	std	Y+31, r24	; 0x1f
    18c8:	98 a3       	std	Y+32, r25	; 0x20
    18ca:	a9 a3       	std	Y+33, r26	; 0x21
    18cc:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    18ce:	6f 8d       	ldd	r22, Y+31	; 0x1f
    18d0:	78 a1       	ldd	r23, Y+32	; 0x20
    18d2:	89 a1       	ldd	r24, Y+33	; 0x21
    18d4:	9a a1       	ldd	r25, Y+34	; 0x22
    18d6:	20 e0       	ldi	r18, 0x00	; 0
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	40 e8       	ldi	r20, 0x80	; 128
    18dc:	5f e3       	ldi	r21, 0x3F	; 63
    18de:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    18e2:	88 23       	and	r24, r24
    18e4:	1c f4       	brge	.+6      	; 0x18ec <LCD_displayChar+0x88>
		__ticks = 1;
    18e6:	81 e0       	ldi	r24, 0x01	; 1
    18e8:	8e 8f       	std	Y+30, r24	; 0x1e
    18ea:	91 c0       	rjmp	.+290    	; 0x1a0e <LCD_displayChar+0x1aa>
	else if (__tmp > 255)
    18ec:	6f 8d       	ldd	r22, Y+31	; 0x1f
    18ee:	78 a1       	ldd	r23, Y+32	; 0x20
    18f0:	89 a1       	ldd	r24, Y+33	; 0x21
    18f2:	9a a1       	ldd	r25, Y+34	; 0x22
    18f4:	20 e0       	ldi	r18, 0x00	; 0
    18f6:	30 e0       	ldi	r19, 0x00	; 0
    18f8:	4f e7       	ldi	r20, 0x7F	; 127
    18fa:	53 e4       	ldi	r21, 0x43	; 67
    18fc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1900:	18 16       	cp	r1, r24
    1902:	0c f0       	brlt	.+2      	; 0x1906 <LCD_displayChar+0xa2>
    1904:	7b c0       	rjmp	.+246    	; 0x19fc <LCD_displayChar+0x198>
	{
		_delay_ms(__us / 1000.0);
    1906:	6b a1       	ldd	r22, Y+35	; 0x23
    1908:	7c a1       	ldd	r23, Y+36	; 0x24
    190a:	8d a1       	ldd	r24, Y+37	; 0x25
    190c:	9e a1       	ldd	r25, Y+38	; 0x26
    190e:	20 e0       	ldi	r18, 0x00	; 0
    1910:	30 e0       	ldi	r19, 0x00	; 0
    1912:	4a e7       	ldi	r20, 0x7A	; 122
    1914:	54 e4       	ldi	r21, 0x44	; 68
    1916:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    191a:	dc 01       	movw	r26, r24
    191c:	cb 01       	movw	r24, r22
    191e:	8a 8f       	std	Y+26, r24	; 0x1a
    1920:	9b 8f       	std	Y+27, r25	; 0x1b
    1922:	ac 8f       	std	Y+28, r26	; 0x1c
    1924:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1926:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1928:	7b 8d       	ldd	r23, Y+27	; 0x1b
    192a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    192c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    192e:	20 e0       	ldi	r18, 0x00	; 0
    1930:	30 e0       	ldi	r19, 0x00	; 0
    1932:	4a e7       	ldi	r20, 0x7A	; 122
    1934:	55 e4       	ldi	r21, 0x45	; 69
    1936:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    193a:	dc 01       	movw	r26, r24
    193c:	cb 01       	movw	r24, r22
    193e:	8e 8b       	std	Y+22, r24	; 0x16
    1940:	9f 8b       	std	Y+23, r25	; 0x17
    1942:	a8 8f       	std	Y+24, r26	; 0x18
    1944:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    1946:	6e 89       	ldd	r22, Y+22	; 0x16
    1948:	7f 89       	ldd	r23, Y+23	; 0x17
    194a:	88 8d       	ldd	r24, Y+24	; 0x18
    194c:	99 8d       	ldd	r25, Y+25	; 0x19
    194e:	20 e0       	ldi	r18, 0x00	; 0
    1950:	30 e0       	ldi	r19, 0x00	; 0
    1952:	40 e8       	ldi	r20, 0x80	; 128
    1954:	5f e3       	ldi	r21, 0x3F	; 63
    1956:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    195a:	88 23       	and	r24, r24
    195c:	2c f4       	brge	.+10     	; 0x1968 <LCD_displayChar+0x104>
		__ticks = 1;
    195e:	81 e0       	ldi	r24, 0x01	; 1
    1960:	90 e0       	ldi	r25, 0x00	; 0
    1962:	9d 8b       	std	Y+21, r25	; 0x15
    1964:	8c 8b       	std	Y+20, r24	; 0x14
    1966:	3f c0       	rjmp	.+126    	; 0x19e6 <LCD_displayChar+0x182>
	else if (__tmp > 65535)
    1968:	6e 89       	ldd	r22, Y+22	; 0x16
    196a:	7f 89       	ldd	r23, Y+23	; 0x17
    196c:	88 8d       	ldd	r24, Y+24	; 0x18
    196e:	99 8d       	ldd	r25, Y+25	; 0x19
    1970:	20 e0       	ldi	r18, 0x00	; 0
    1972:	3f ef       	ldi	r19, 0xFF	; 255
    1974:	4f e7       	ldi	r20, 0x7F	; 127
    1976:	57 e4       	ldi	r21, 0x47	; 71
    1978:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    197c:	18 16       	cp	r1, r24
    197e:	4c f5       	brge	.+82     	; 0x19d2 <LCD_displayChar+0x16e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1980:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1982:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1984:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1986:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1988:	20 e0       	ldi	r18, 0x00	; 0
    198a:	30 e0       	ldi	r19, 0x00	; 0
    198c:	40 e2       	ldi	r20, 0x20	; 32
    198e:	51 e4       	ldi	r21, 0x41	; 65
    1990:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1994:	dc 01       	movw	r26, r24
    1996:	cb 01       	movw	r24, r22
    1998:	bc 01       	movw	r22, r24
    199a:	cd 01       	movw	r24, r26
    199c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19a0:	dc 01       	movw	r26, r24
    19a2:	cb 01       	movw	r24, r22
    19a4:	9d 8b       	std	Y+21, r25	; 0x15
    19a6:	8c 8b       	std	Y+20, r24	; 0x14
    19a8:	0f c0       	rjmp	.+30     	; 0x19c8 <LCD_displayChar+0x164>
    19aa:	80 e9       	ldi	r24, 0x90	; 144
    19ac:	91 e0       	ldi	r25, 0x01	; 1
    19ae:	9b 8b       	std	Y+19, r25	; 0x13
    19b0:	8a 8b       	std	Y+18, r24	; 0x12
    19b2:	8a 89       	ldd	r24, Y+18	; 0x12
    19b4:	9b 89       	ldd	r25, Y+19	; 0x13
    19b6:	01 97       	sbiw	r24, 0x01	; 1
    19b8:	f1 f7       	brne	.-4      	; 0x19b6 <LCD_displayChar+0x152>
    19ba:	9b 8b       	std	Y+19, r25	; 0x13
    19bc:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19be:	8c 89       	ldd	r24, Y+20	; 0x14
    19c0:	9d 89       	ldd	r25, Y+21	; 0x15
    19c2:	01 97       	sbiw	r24, 0x01	; 1
    19c4:	9d 8b       	std	Y+21, r25	; 0x15
    19c6:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c8:	8c 89       	ldd	r24, Y+20	; 0x14
    19ca:	9d 89       	ldd	r25, Y+21	; 0x15
    19cc:	00 97       	sbiw	r24, 0x00	; 0
    19ce:	69 f7       	brne	.-38     	; 0x19aa <LCD_displayChar+0x146>
    19d0:	24 c0       	rjmp	.+72     	; 0x1a1a <LCD_displayChar+0x1b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19d2:	6e 89       	ldd	r22, Y+22	; 0x16
    19d4:	7f 89       	ldd	r23, Y+23	; 0x17
    19d6:	88 8d       	ldd	r24, Y+24	; 0x18
    19d8:	99 8d       	ldd	r25, Y+25	; 0x19
    19da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19de:	dc 01       	movw	r26, r24
    19e0:	cb 01       	movw	r24, r22
    19e2:	9d 8b       	std	Y+21, r25	; 0x15
    19e4:	8c 8b       	std	Y+20, r24	; 0x14
    19e6:	8c 89       	ldd	r24, Y+20	; 0x14
    19e8:	9d 89       	ldd	r25, Y+21	; 0x15
    19ea:	99 8b       	std	Y+17, r25	; 0x11
    19ec:	88 8b       	std	Y+16, r24	; 0x10
    19ee:	88 89       	ldd	r24, Y+16	; 0x10
    19f0:	99 89       	ldd	r25, Y+17	; 0x11
    19f2:	01 97       	sbiw	r24, 0x01	; 1
    19f4:	f1 f7       	brne	.-4      	; 0x19f2 <LCD_displayChar+0x18e>
    19f6:	99 8b       	std	Y+17, r25	; 0x11
    19f8:	88 8b       	std	Y+16, r24	; 0x10
    19fa:	0f c0       	rjmp	.+30     	; 0x1a1a <LCD_displayChar+0x1b6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    19fc:	6f 8d       	ldd	r22, Y+31	; 0x1f
    19fe:	78 a1       	ldd	r23, Y+32	; 0x20
    1a00:	89 a1       	ldd	r24, Y+33	; 0x21
    1a02:	9a a1       	ldd	r25, Y+34	; 0x22
    1a04:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a08:	dc 01       	movw	r26, r24
    1a0a:	cb 01       	movw	r24, r22
    1a0c:	8e 8f       	std	Y+30, r24	; 0x1e
    1a0e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a10:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1a12:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a14:	8a 95       	dec	r24
    1a16:	f1 f7       	brne	.-4      	; 0x1a14 <LCD_displayChar+0x1b0>
    1a18:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_us(1);
    LCD_CTRL_PORT &= ~(1<<E);
    1a1a:	a2 e3       	ldi	r26, 0x32	; 50
    1a1c:	b0 e0       	ldi	r27, 0x00	; 0
    1a1e:	e2 e3       	ldi	r30, 0x32	; 50
    1a20:	f0 e0       	ldi	r31, 0x00	; 0
    1a22:	80 81       	ld	r24, Z
    1a24:	8d 7f       	andi	r24, 0xFD	; 253
    1a26:	8c 93       	st	X, r24
    1a28:	80 e0       	ldi	r24, 0x00	; 0
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	a0 e0       	ldi	r26, 0x00	; 0
    1a2e:	b0 e4       	ldi	r27, 0x40	; 64
    1a30:	8b 87       	std	Y+11, r24	; 0x0b
    1a32:	9c 87       	std	Y+12, r25	; 0x0c
    1a34:	ad 87       	std	Y+13, r26	; 0x0d
    1a36:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a38:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a3a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a3c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a3e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a40:	20 e0       	ldi	r18, 0x00	; 0
    1a42:	30 e0       	ldi	r19, 0x00	; 0
    1a44:	4a e7       	ldi	r20, 0x7A	; 122
    1a46:	55 e4       	ldi	r21, 0x45	; 69
    1a48:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a4c:	dc 01       	movw	r26, r24
    1a4e:	cb 01       	movw	r24, r22
    1a50:	8f 83       	std	Y+7, r24	; 0x07
    1a52:	98 87       	std	Y+8, r25	; 0x08
    1a54:	a9 87       	std	Y+9, r26	; 0x09
    1a56:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a58:	6f 81       	ldd	r22, Y+7	; 0x07
    1a5a:	78 85       	ldd	r23, Y+8	; 0x08
    1a5c:	89 85       	ldd	r24, Y+9	; 0x09
    1a5e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a60:	20 e0       	ldi	r18, 0x00	; 0
    1a62:	30 e0       	ldi	r19, 0x00	; 0
    1a64:	40 e8       	ldi	r20, 0x80	; 128
    1a66:	5f e3       	ldi	r21, 0x3F	; 63
    1a68:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1a6c:	88 23       	and	r24, r24
    1a6e:	2c f4       	brge	.+10     	; 0x1a7a <LCD_displayChar+0x216>
		__ticks = 1;
    1a70:	81 e0       	ldi	r24, 0x01	; 1
    1a72:	90 e0       	ldi	r25, 0x00	; 0
    1a74:	9e 83       	std	Y+6, r25	; 0x06
    1a76:	8d 83       	std	Y+5, r24	; 0x05
    1a78:	3f c0       	rjmp	.+126    	; 0x1af8 <LCD_displayChar+0x294>
	else if (__tmp > 65535)
    1a7a:	6f 81       	ldd	r22, Y+7	; 0x07
    1a7c:	78 85       	ldd	r23, Y+8	; 0x08
    1a7e:	89 85       	ldd	r24, Y+9	; 0x09
    1a80:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a82:	20 e0       	ldi	r18, 0x00	; 0
    1a84:	3f ef       	ldi	r19, 0xFF	; 255
    1a86:	4f e7       	ldi	r20, 0x7F	; 127
    1a88:	57 e4       	ldi	r21, 0x47	; 71
    1a8a:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1a8e:	18 16       	cp	r1, r24
    1a90:	4c f5       	brge	.+82     	; 0x1ae4 <LCD_displayChar+0x280>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a92:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a94:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a96:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a98:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a9a:	20 e0       	ldi	r18, 0x00	; 0
    1a9c:	30 e0       	ldi	r19, 0x00	; 0
    1a9e:	40 e2       	ldi	r20, 0x20	; 32
    1aa0:	51 e4       	ldi	r21, 0x41	; 65
    1aa2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1aa6:	dc 01       	movw	r26, r24
    1aa8:	cb 01       	movw	r24, r22
    1aaa:	bc 01       	movw	r22, r24
    1aac:	cd 01       	movw	r24, r26
    1aae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ab2:	dc 01       	movw	r26, r24
    1ab4:	cb 01       	movw	r24, r22
    1ab6:	9e 83       	std	Y+6, r25	; 0x06
    1ab8:	8d 83       	std	Y+5, r24	; 0x05
    1aba:	0f c0       	rjmp	.+30     	; 0x1ada <LCD_displayChar+0x276>
    1abc:	80 e9       	ldi	r24, 0x90	; 144
    1abe:	91 e0       	ldi	r25, 0x01	; 1
    1ac0:	9c 83       	std	Y+4, r25	; 0x04
    1ac2:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1ac4:	8b 81       	ldd	r24, Y+3	; 0x03
    1ac6:	9c 81       	ldd	r25, Y+4	; 0x04
    1ac8:	01 97       	sbiw	r24, 0x01	; 1
    1aca:	f1 f7       	brne	.-4      	; 0x1ac8 <LCD_displayChar+0x264>
    1acc:	9c 83       	std	Y+4, r25	; 0x04
    1ace:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ad0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ad2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ad4:	01 97       	sbiw	r24, 0x01	; 1
    1ad6:	9e 83       	std	Y+6, r25	; 0x06
    1ad8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ada:	8d 81       	ldd	r24, Y+5	; 0x05
    1adc:	9e 81       	ldd	r25, Y+6	; 0x06
    1ade:	00 97       	sbiw	r24, 0x00	; 0
    1ae0:	69 f7       	brne	.-38     	; 0x1abc <LCD_displayChar+0x258>
    1ae2:	14 c0       	rjmp	.+40     	; 0x1b0c <LCD_displayChar+0x2a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ae4:	6f 81       	ldd	r22, Y+7	; 0x07
    1ae6:	78 85       	ldd	r23, Y+8	; 0x08
    1ae8:	89 85       	ldd	r24, Y+9	; 0x09
    1aea:	9a 85       	ldd	r25, Y+10	; 0x0a
    1aec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1af0:	dc 01       	movw	r26, r24
    1af2:	cb 01       	movw	r24, r22
    1af4:	9e 83       	std	Y+6, r25	; 0x06
    1af6:	8d 83       	std	Y+5, r24	; 0x05
    1af8:	8d 81       	ldd	r24, Y+5	; 0x05
    1afa:	9e 81       	ldd	r25, Y+6	; 0x06
    1afc:	9a 83       	std	Y+2, r25	; 0x02
    1afe:	89 83       	std	Y+1, r24	; 0x01
    1b00:	89 81       	ldd	r24, Y+1	; 0x01
    1b02:	9a 81       	ldd	r25, Y+2	; 0x02
    1b04:	01 97       	sbiw	r24, 0x01	; 1
    1b06:	f1 f7       	brne	.-4      	; 0x1b04 <LCD_displayChar+0x2a0>
    1b08:	9a 83       	std	Y+2, r25	; 0x02
    1b0a:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(2);
}
    1b0c:	a7 96       	adiw	r28, 0x27	; 39
    1b0e:	0f b6       	in	r0, 0x3f	; 63
    1b10:	f8 94       	cli
    1b12:	de bf       	out	0x3e, r29	; 62
    1b14:	0f be       	out	0x3f, r0	; 63
    1b16:	cd bf       	out	0x3d, r28	; 61
    1b18:	cf 91       	pop	r28
    1b1a:	df 91       	pop	r29
    1b1c:	08 95       	ret

00001b1e <LCD_init>:

void LCD_init(void){
    1b1e:	df 93       	push	r29
    1b20:	cf 93       	push	r28
    1b22:	cd b7       	in	r28, 0x3d	; 61
    1b24:	de b7       	in	r29, 0x3e	; 62
    1b26:	2e 97       	sbiw	r28, 0x0e	; 14
    1b28:	0f b6       	in	r0, 0x3f	; 63
    1b2a:	f8 94       	cli
    1b2c:	de bf       	out	0x3e, r29	; 62
    1b2e:	0f be       	out	0x3f, r0	; 63
    1b30:	cd bf       	out	0x3d, r28	; 61
    LCD_CTRL_DDR |= (1<<RS)|(1<<E);
    1b32:	a1 e3       	ldi	r26, 0x31	; 49
    1b34:	b0 e0       	ldi	r27, 0x00	; 0
    1b36:	e1 e3       	ldi	r30, 0x31	; 49
    1b38:	f0 e0       	ldi	r31, 0x00	; 0
    1b3a:	80 81       	ld	r24, Z
    1b3c:	83 60       	ori	r24, 0x03	; 3
    1b3e:	8c 93       	st	X, r24
    DDRC = 0xFF;
    1b40:	e4 e3       	ldi	r30, 0x34	; 52
    1b42:	f0 e0       	ldi	r31, 0x00	; 0
    1b44:	8f ef       	ldi	r24, 0xFF	; 255
    1b46:	80 83       	st	Z, r24
    1b48:	80 e0       	ldi	r24, 0x00	; 0
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	a0 ea       	ldi	r26, 0xA0	; 160
    1b4e:	b1 e4       	ldi	r27, 0x41	; 65
    1b50:	8b 87       	std	Y+11, r24	; 0x0b
    1b52:	9c 87       	std	Y+12, r25	; 0x0c
    1b54:	ad 87       	std	Y+13, r26	; 0x0d
    1b56:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b58:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b5a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b5c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b5e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b60:	20 e0       	ldi	r18, 0x00	; 0
    1b62:	30 e0       	ldi	r19, 0x00	; 0
    1b64:	4a e7       	ldi	r20, 0x7A	; 122
    1b66:	55 e4       	ldi	r21, 0x45	; 69
    1b68:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b6c:	dc 01       	movw	r26, r24
    1b6e:	cb 01       	movw	r24, r22
    1b70:	8f 83       	std	Y+7, r24	; 0x07
    1b72:	98 87       	std	Y+8, r25	; 0x08
    1b74:	a9 87       	std	Y+9, r26	; 0x09
    1b76:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b78:	6f 81       	ldd	r22, Y+7	; 0x07
    1b7a:	78 85       	ldd	r23, Y+8	; 0x08
    1b7c:	89 85       	ldd	r24, Y+9	; 0x09
    1b7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b80:	20 e0       	ldi	r18, 0x00	; 0
    1b82:	30 e0       	ldi	r19, 0x00	; 0
    1b84:	40 e8       	ldi	r20, 0x80	; 128
    1b86:	5f e3       	ldi	r21, 0x3F	; 63
    1b88:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1b8c:	88 23       	and	r24, r24
    1b8e:	2c f4       	brge	.+10     	; 0x1b9a <LCD_init+0x7c>
		__ticks = 1;
    1b90:	81 e0       	ldi	r24, 0x01	; 1
    1b92:	90 e0       	ldi	r25, 0x00	; 0
    1b94:	9e 83       	std	Y+6, r25	; 0x06
    1b96:	8d 83       	std	Y+5, r24	; 0x05
    1b98:	3f c0       	rjmp	.+126    	; 0x1c18 <LCD_init+0xfa>
	else if (__tmp > 65535)
    1b9a:	6f 81       	ldd	r22, Y+7	; 0x07
    1b9c:	78 85       	ldd	r23, Y+8	; 0x08
    1b9e:	89 85       	ldd	r24, Y+9	; 0x09
    1ba0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ba2:	20 e0       	ldi	r18, 0x00	; 0
    1ba4:	3f ef       	ldi	r19, 0xFF	; 255
    1ba6:	4f e7       	ldi	r20, 0x7F	; 127
    1ba8:	57 e4       	ldi	r21, 0x47	; 71
    1baa:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1bae:	18 16       	cp	r1, r24
    1bb0:	4c f5       	brge	.+82     	; 0x1c04 <LCD_init+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1bb2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1bb4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1bb6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bb8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1bba:	20 e0       	ldi	r18, 0x00	; 0
    1bbc:	30 e0       	ldi	r19, 0x00	; 0
    1bbe:	40 e2       	ldi	r20, 0x20	; 32
    1bc0:	51 e4       	ldi	r21, 0x41	; 65
    1bc2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bc6:	dc 01       	movw	r26, r24
    1bc8:	cb 01       	movw	r24, r22
    1bca:	bc 01       	movw	r22, r24
    1bcc:	cd 01       	movw	r24, r26
    1bce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bd2:	dc 01       	movw	r26, r24
    1bd4:	cb 01       	movw	r24, r22
    1bd6:	9e 83       	std	Y+6, r25	; 0x06
    1bd8:	8d 83       	std	Y+5, r24	; 0x05
    1bda:	0f c0       	rjmp	.+30     	; 0x1bfa <LCD_init+0xdc>
    1bdc:	80 e9       	ldi	r24, 0x90	; 144
    1bde:	91 e0       	ldi	r25, 0x01	; 1
    1be0:	9c 83       	std	Y+4, r25	; 0x04
    1be2:	8b 83       	std	Y+3, r24	; 0x03
    1be4:	8b 81       	ldd	r24, Y+3	; 0x03
    1be6:	9c 81       	ldd	r25, Y+4	; 0x04
    1be8:	01 97       	sbiw	r24, 0x01	; 1
    1bea:	f1 f7       	brne	.-4      	; 0x1be8 <LCD_init+0xca>
    1bec:	9c 83       	std	Y+4, r25	; 0x04
    1bee:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bf0:	8d 81       	ldd	r24, Y+5	; 0x05
    1bf2:	9e 81       	ldd	r25, Y+6	; 0x06
    1bf4:	01 97       	sbiw	r24, 0x01	; 1
    1bf6:	9e 83       	std	Y+6, r25	; 0x06
    1bf8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bfa:	8d 81       	ldd	r24, Y+5	; 0x05
    1bfc:	9e 81       	ldd	r25, Y+6	; 0x06
    1bfe:	00 97       	sbiw	r24, 0x00	; 0
    1c00:	69 f7       	brne	.-38     	; 0x1bdc <LCD_init+0xbe>
    1c02:	14 c0       	rjmp	.+40     	; 0x1c2c <LCD_init+0x10e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c04:	6f 81       	ldd	r22, Y+7	; 0x07
    1c06:	78 85       	ldd	r23, Y+8	; 0x08
    1c08:	89 85       	ldd	r24, Y+9	; 0x09
    1c0a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c10:	dc 01       	movw	r26, r24
    1c12:	cb 01       	movw	r24, r22
    1c14:	9e 83       	std	Y+6, r25	; 0x06
    1c16:	8d 83       	std	Y+5, r24	; 0x05
    1c18:	8d 81       	ldd	r24, Y+5	; 0x05
    1c1a:	9e 81       	ldd	r25, Y+6	; 0x06
    1c1c:	9a 83       	std	Y+2, r25	; 0x02
    1c1e:	89 83       	std	Y+1, r24	; 0x01
    1c20:	89 81       	ldd	r24, Y+1	; 0x01
    1c22:	9a 81       	ldd	r25, Y+2	; 0x02
    1c24:	01 97       	sbiw	r24, 0x01	; 1
    1c26:	f1 f7       	brne	.-4      	; 0x1c24 <LCD_init+0x106>
    1c28:	9a 83       	std	Y+2, r25	; 0x02
    1c2a:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(20);
    LCD_sendCommand(0x38);
    1c2c:	88 e3       	ldi	r24, 0x38	; 56
    1c2e:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <LCD_sendCommand>
    LCD_sendCommand(0x0C);
    1c32:	8c e0       	ldi	r24, 0x0C	; 12
    1c34:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <LCD_sendCommand>
    LCD_sendCommand(0x01);
    1c38:	81 e0       	ldi	r24, 0x01	; 1
    1c3a:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <LCD_sendCommand>
}
    1c3e:	2e 96       	adiw	r28, 0x0e	; 14
    1c40:	0f b6       	in	r0, 0x3f	; 63
    1c42:	f8 94       	cli
    1c44:	de bf       	out	0x3e, r29	; 62
    1c46:	0f be       	out	0x3f, r0	; 63
    1c48:	cd bf       	out	0x3d, r28	; 61
    1c4a:	cf 91       	pop	r28
    1c4c:	df 91       	pop	r29
    1c4e:	08 95       	ret

00001c50 <LCD_displayString>:

void LCD_displayString(const char *Str){
    1c50:	df 93       	push	r29
    1c52:	cf 93       	push	r28
    1c54:	00 d0       	rcall	.+0      	; 0x1c56 <LCD_displayString+0x6>
    1c56:	cd b7       	in	r28, 0x3d	; 61
    1c58:	de b7       	in	r29, 0x3e	; 62
    1c5a:	9a 83       	std	Y+2, r25	; 0x02
    1c5c:	89 83       	std	Y+1, r24	; 0x01
    1c5e:	0a c0       	rjmp	.+20     	; 0x1c74 <LCD_displayString+0x24>
    while((*Str)!='
    1c60:	e9 81       	ldd	r30, Y+1	; 0x01
    1c62:	fa 81       	ldd	r31, Y+2	; 0x02
    1c64:	80 81       	ld	r24, Z
    1c66:	0e 94 32 0c 	call	0x1864	; 0x1864 <LCD_displayChar>
    1c6a:	89 81       	ldd	r24, Y+1	; 0x01
    1c6c:	9a 81       	ldd	r25, Y+2	; 0x02
    1c6e:	01 96       	adiw	r24, 0x01	; 1
    1c70:	9a 83       	std	Y+2, r25	; 0x02
    1c72:	89 83       	std	Y+1, r24	; 0x01
    1c74:	e9 81       	ldd	r30, Y+1	; 0x01
    1c76:	fa 81       	ldd	r31, Y+2	; 0x02
    1c78:	80 81       	ld	r24, Z
    1c7a:	88 23       	and	r24, r24
    1c7c:	89 f7       	brne	.-30     	; 0x1c60 <LCD_displayString+0x10>
}
    1c7e:	0f 90       	pop	r0
    1c80:	0f 90       	pop	r0
    1c82:	cf 91       	pop	r28
    1c84:	df 91       	pop	r29
    1c86:	08 95       	ret

00001c88 <LCD_goToRowColumn>:

void LCD_goToRowColumn(uint8 row,uint8 col){
    1c88:	df 93       	push	r29
    1c8a:	cf 93       	push	r28
    1c8c:	00 d0       	rcall	.+0      	; 0x1c8e <LCD_goToRowColumn+0x6>
    1c8e:	00 d0       	rcall	.+0      	; 0x1c90 <LCD_goToRowColumn+0x8>
    1c90:	0f 92       	push	r0
    1c92:	cd b7       	in	r28, 0x3d	; 61
    1c94:	de b7       	in	r29, 0x3e	; 62
    1c96:	8a 83       	std	Y+2, r24	; 0x02
    1c98:	6b 83       	std	Y+3, r22	; 0x03
    uint8 Address;
    switch(row){
    1c9a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c9c:	28 2f       	mov	r18, r24
    1c9e:	30 e0       	ldi	r19, 0x00	; 0
    1ca0:	3d 83       	std	Y+5, r19	; 0x05
    1ca2:	2c 83       	std	Y+4, r18	; 0x04
    1ca4:	8c 81       	ldd	r24, Y+4	; 0x04
    1ca6:	9d 81       	ldd	r25, Y+5	; 0x05
    1ca8:	00 97       	sbiw	r24, 0x00	; 0
    1caa:	31 f0       	breq	.+12     	; 0x1cb8 <LCD_goToRowColumn+0x30>
    1cac:	2c 81       	ldd	r18, Y+4	; 0x04
    1cae:	3d 81       	ldd	r19, Y+5	; 0x05
    1cb0:	21 30       	cpi	r18, 0x01	; 1
    1cb2:	31 05       	cpc	r19, r1
    1cb4:	21 f0       	breq	.+8      	; 0x1cbe <LCD_goToRowColumn+0x36>
    1cb6:	06 c0       	rjmp	.+12     	; 0x1cc4 <LCD_goToRowColumn+0x3c>
        case 0: Address=col; break;
    1cb8:	8b 81       	ldd	r24, Y+3	; 0x03
    1cba:	89 83       	std	Y+1, r24	; 0x01
    1cbc:	03 c0       	rjmp	.+6      	; 0x1cc4 <LCD_goToRowColumn+0x3c>
        case 1: Address=col+0x40; break;
    1cbe:	8b 81       	ldd	r24, Y+3	; 0x03
    1cc0:	80 5c       	subi	r24, 0xC0	; 192
    1cc2:	89 83       	std	Y+1, r24	; 0x01
    }
    LCD_sendCommand(Address | 0x80);
    1cc4:	89 81       	ldd	r24, Y+1	; 0x01
    1cc6:	80 68       	ori	r24, 0x80	; 128
    1cc8:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <LCD_sendCommand>
}
    1ccc:	0f 90       	pop	r0
    1cce:	0f 90       	pop	r0
    1cd0:	0f 90       	pop	r0
    1cd2:	0f 90       	pop	r0
    1cd4:	0f 90       	pop	r0
    1cd6:	cf 91       	pop	r28
    1cd8:	df 91       	pop	r29
    1cda:	08 95       	ret

00001cdc <LCD_displayStringRowColumn>:

void LCD_displayStringRowColumn(uint8 row,uint8 col,const char *Str){
    1cdc:	df 93       	push	r29
    1cde:	cf 93       	push	r28
    1ce0:	00 d0       	rcall	.+0      	; 0x1ce2 <LCD_displayStringRowColumn+0x6>
    1ce2:	00 d0       	rcall	.+0      	; 0x1ce4 <LCD_displayStringRowColumn+0x8>
    1ce4:	cd b7       	in	r28, 0x3d	; 61
    1ce6:	de b7       	in	r29, 0x3e	; 62
    1ce8:	89 83       	std	Y+1, r24	; 0x01
    1cea:	6a 83       	std	Y+2, r22	; 0x02
    1cec:	5c 83       	std	Y+4, r21	; 0x04
    1cee:	4b 83       	std	Y+3, r20	; 0x03
    LCD_goToRowColumn(row,col);
    1cf0:	89 81       	ldd	r24, Y+1	; 0x01
    1cf2:	6a 81       	ldd	r22, Y+2	; 0x02
    1cf4:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <LCD_goToRowColumn>
    LCD_displayString(Str);
    1cf8:	8b 81       	ldd	r24, Y+3	; 0x03
    1cfa:	9c 81       	ldd	r25, Y+4	; 0x04
    1cfc:	0e 94 28 0e 	call	0x1c50	; 0x1c50 <LCD_displayString>
}
    1d00:	0f 90       	pop	r0
    1d02:	0f 90       	pop	r0
    1d04:	0f 90       	pop	r0
    1d06:	0f 90       	pop	r0
    1d08:	cf 91       	pop	r28
    1d0a:	df 91       	pop	r29
    1d0c:	08 95       	ret

00001d0e <LCD_clearScreen>:

void LCD_clearScreen(void){
    1d0e:	df 93       	push	r29
    1d10:	cf 93       	push	r28
    1d12:	cd b7       	in	r28, 0x3d	; 61
    1d14:	de b7       	in	r29, 0x3e	; 62
    LCD_sendCommand(0x01);
    1d16:	81 e0       	ldi	r24, 0x01	; 1
    1d18:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <LCD_sendCommand>
}
    1d1c:	cf 91       	pop	r28
    1d1e:	df 91       	pop	r29
    1d20:	08 95       	ret

00001d22 <FlameSensor_init>:
#include "Flame/flame.h"
#include <avr/io.h>

#define FLAME PD2

void FlameSensor_init(void){ DDRD &= ~(1<<FLAME); }
    1d22:	df 93       	push	r29
    1d24:	cf 93       	push	r28
    1d26:	cd b7       	in	r28, 0x3d	; 61
    1d28:	de b7       	in	r29, 0x3e	; 62
    1d2a:	a1 e3       	ldi	r26, 0x31	; 49
    1d2c:	b0 e0       	ldi	r27, 0x00	; 0
    1d2e:	e1 e3       	ldi	r30, 0x31	; 49
    1d30:	f0 e0       	ldi	r31, 0x00	; 0
    1d32:	80 81       	ld	r24, Z
    1d34:	8b 7f       	andi	r24, 0xFB	; 251
    1d36:	8c 93       	st	X, r24
    1d38:	cf 91       	pop	r28
    1d3a:	df 91       	pop	r29
    1d3c:	08 95       	ret

00001d3e <FlameSensor_getValue>:
uint8 FlameSensor_getValue(void){ return (PIND & (1<<FLAME))?1:0; }
    1d3e:	df 93       	push	r29
    1d40:	cf 93       	push	r28
    1d42:	0f 92       	push	r0
    1d44:	cd b7       	in	r28, 0x3d	; 61
    1d46:	de b7       	in	r29, 0x3e	; 62
    1d48:	e0 e3       	ldi	r30, 0x30	; 48
    1d4a:	f0 e0       	ldi	r31, 0x00	; 0
    1d4c:	80 81       	ld	r24, Z
    1d4e:	88 2f       	mov	r24, r24
    1d50:	90 e0       	ldi	r25, 0x00	; 0
    1d52:	84 70       	andi	r24, 0x04	; 4
    1d54:	90 70       	andi	r25, 0x00	; 0
    1d56:	19 82       	std	Y+1, r1	; 0x01
    1d58:	00 97       	sbiw	r24, 0x00	; 0
    1d5a:	11 f0       	breq	.+4      	; 0x1d60 <FlameSensor_getValue+0x22>
    1d5c:	81 e0       	ldi	r24, 0x01	; 1
    1d5e:	89 83       	std	Y+1, r24	; 0x01
    1d60:	89 81       	ldd	r24, Y+1	; 0x01
    1d62:	0f 90       	pop	r0
    1d64:	cf 91       	pop	r28
    1d66:	df 91       	pop	r29
    1d68:	08 95       	ret

00001d6a <Buzzer_init>:
#include "Buzzer/buzzer.h"
#include <avr/io.h>

#define BUZZER PD3

void Buzzer_init(void){
    1d6a:	df 93       	push	r29
    1d6c:	cf 93       	push	r28
    1d6e:	cd b7       	in	r28, 0x3d	; 61
    1d70:	de b7       	in	r29, 0x3e	; 62
    DDRD |= (1<<BUZZER);
    1d72:	a1 e3       	ldi	r26, 0x31	; 49
    1d74:	b0 e0       	ldi	r27, 0x00	; 0
    1d76:	e1 e3       	ldi	r30, 0x31	; 49
    1d78:	f0 e0       	ldi	r31, 0x00	; 0
    1d7a:	80 81       	ld	r24, Z
    1d7c:	88 60       	ori	r24, 0x08	; 8
    1d7e:	8c 93       	st	X, r24
    PORTD &= ~(1<<BUZZER);
    1d80:	a2 e3       	ldi	r26, 0x32	; 50
    1d82:	b0 e0       	ldi	r27, 0x00	; 0
    1d84:	e2 e3       	ldi	r30, 0x32	; 50
    1d86:	f0 e0       	ldi	r31, 0x00	; 0
    1d88:	80 81       	ld	r24, Z
    1d8a:	87 7f       	andi	r24, 0xF7	; 247
    1d8c:	8c 93       	st	X, r24
}
    1d8e:	cf 91       	pop	r28
    1d90:	df 91       	pop	r29
    1d92:	08 95       	ret

00001d94 <Buzzer_on>:

void Buzzer_on(void){ PORTD |= (1<<BUZZER); }
    1d94:	df 93       	push	r29
    1d96:	cf 93       	push	r28
    1d98:	cd b7       	in	r28, 0x3d	; 61
    1d9a:	de b7       	in	r29, 0x3e	; 62
    1d9c:	a2 e3       	ldi	r26, 0x32	; 50
    1d9e:	b0 e0       	ldi	r27, 0x00	; 0
    1da0:	e2 e3       	ldi	r30, 0x32	; 50
    1da2:	f0 e0       	ldi	r31, 0x00	; 0
    1da4:	80 81       	ld	r24, Z
    1da6:	88 60       	ori	r24, 0x08	; 8
    1da8:	8c 93       	st	X, r24
    1daa:	cf 91       	pop	r28
    1dac:	df 91       	pop	r29
    1dae:	08 95       	ret

00001db0 <Buzzer_off>:
void Buzzer_off(void){ PORTD &= ~(1<<BUZZER); }
    1db0:	df 93       	push	r29
    1db2:	cf 93       	push	r28
    1db4:	cd b7       	in	r28, 0x3d	; 61
    1db6:	de b7       	in	r29, 0x3e	; 62
    1db8:	a2 e3       	ldi	r26, 0x32	; 50
    1dba:	b0 e0       	ldi	r27, 0x00	; 0
    1dbc:	e2 e3       	ldi	r30, 0x32	; 50
    1dbe:	f0 e0       	ldi	r31, 0x00	; 0
    1dc0:	80 81       	ld	r24, Z
    1dc2:	87 7f       	andi	r24, 0xF7	; 247
    1dc4:	8c 93       	st	X, r24
    1dc6:	cf 91       	pop	r28
    1dc8:	df 91       	pop	r29
    1dca:	08 95       	ret

00001dcc <main>:
#include "Buzzer/buzzer.h"
#include "Flame/flame.h"
#include "LDR/ldr.h"
#include "LM35/lm35.h"

int main(void){
    1dcc:	df 93       	push	r29
    1dce:	cf 93       	push	r28
    1dd0:	cd b7       	in	r28, 0x3d	; 61
    1dd2:	de b7       	in	r29, 0x3e	; 62
    1dd4:	a3 97       	sbiw	r28, 0x23	; 35
    1dd6:	0f b6       	in	r0, 0x3f	; 63
    1dd8:	f8 94       	cli
    1dda:	de bf       	out	0x3e, r29	; 62
    1ddc:	0f be       	out	0x3f, r0	; 63
    1dde:	cd bf       	out	0x3d, r28	; 61
    char buffer[16];
    ADC_init();
    1de0:	0e 94 88 09 	call	0x1310	; 0x1310 <ADC_init>
    LCD_init();
    1de4:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <LCD_init>
    LEDS_init();
    1de8:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <LEDS_init>
    DcMotor_Init();
    1dec:	0e 94 c0 09 	call	0x1380	; 0x1380 <DcMotor_Init>
    Buzzer_init();
    1df0:	0e 94 b5 0e 	call	0x1d6a	; 0x1d6a <Buzzer_init>
    FlameSensor_init();
    1df4:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <FlameSensor_init>

    while(1){
        uint16 temp = LM35_getTemperature();
    1df8:	0e 94 1f 0a 	call	0x143e	; 0x143e <LM35_getTemperature>
    1dfc:	9b 8b       	std	Y+19, r25	; 0x13
    1dfe:	8a 8b       	std	Y+18, r24	; 0x12
        uint16 ldr  = LDR_getLightIntensity();
    1e00:	0e 94 ad 0a 	call	0x155a	; 0x155a <LDR_getLightIntensity>
    1e04:	99 8b       	std	Y+17, r25	; 0x11
    1e06:	88 8b       	std	Y+16, r24	; 0x10
        uint8 flame = FlameSensor_getValue();
    1e08:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <FlameSensor_getValue>
    1e0c:	8f 87       	std	Y+15, r24	; 0x0f

        if(temp>=40) DcMotor_Rotate(CW,100);
    1e0e:	8a 89       	ldd	r24, Y+18	; 0x12
    1e10:	9b 89       	ldd	r25, Y+19	; 0x13
    1e12:	88 32       	cpi	r24, 0x28	; 40
    1e14:	91 05       	cpc	r25, r1
    1e16:	28 f0       	brcs	.+10     	; 0x1e22 <main+0x56>
    1e18:	81 e0       	ldi	r24, 0x01	; 1
    1e1a:	64 e6       	ldi	r22, 0x64	; 100
    1e1c:	0e 94 d5 09 	call	0x13aa	; 0x13aa <DcMotor_Rotate>
    1e20:	22 c0       	rjmp	.+68     	; 0x1e66 <main+0x9a>
        else if(temp>=35) DcMotor_Rotate(CW,75);
    1e22:	8a 89       	ldd	r24, Y+18	; 0x12
    1e24:	9b 89       	ldd	r25, Y+19	; 0x13
    1e26:	83 32       	cpi	r24, 0x23	; 35
    1e28:	91 05       	cpc	r25, r1
    1e2a:	28 f0       	brcs	.+10     	; 0x1e36 <main+0x6a>
    1e2c:	81 e0       	ldi	r24, 0x01	; 1
    1e2e:	6b e4       	ldi	r22, 0x4B	; 75
    1e30:	0e 94 d5 09 	call	0x13aa	; 0x13aa <DcMotor_Rotate>
    1e34:	18 c0       	rjmp	.+48     	; 0x1e66 <main+0x9a>
        else if(temp>=30) DcMotor_Rotate(CW,50);
    1e36:	8a 89       	ldd	r24, Y+18	; 0x12
    1e38:	9b 89       	ldd	r25, Y+19	; 0x13
    1e3a:	8e 31       	cpi	r24, 0x1E	; 30
    1e3c:	91 05       	cpc	r25, r1
    1e3e:	28 f0       	brcs	.+10     	; 0x1e4a <main+0x7e>
    1e40:	81 e0       	ldi	r24, 0x01	; 1
    1e42:	62 e3       	ldi	r22, 0x32	; 50
    1e44:	0e 94 d5 09 	call	0x13aa	; 0x13aa <DcMotor_Rotate>
    1e48:	0e c0       	rjmp	.+28     	; 0x1e66 <main+0x9a>
        else if(temp>=25) DcMotor_Rotate(CW,25);
    1e4a:	8a 89       	ldd	r24, Y+18	; 0x12
    1e4c:	9b 89       	ldd	r25, Y+19	; 0x13
    1e4e:	89 31       	cpi	r24, 0x19	; 25
    1e50:	91 05       	cpc	r25, r1
    1e52:	28 f0       	brcs	.+10     	; 0x1e5e <main+0x92>
    1e54:	81 e0       	ldi	r24, 0x01	; 1
    1e56:	69 e1       	ldi	r22, 0x19	; 25
    1e58:	0e 94 d5 09 	call	0x13aa	; 0x13aa <DcMotor_Rotate>
    1e5c:	04 c0       	rjmp	.+8      	; 0x1e66 <main+0x9a>
        else DcMotor_Rotate(STOP,0);
    1e5e:	80 e0       	ldi	r24, 0x00	; 0
    1e60:	60 e0       	ldi	r22, 0x00	; 0
    1e62:	0e 94 d5 09 	call	0x13aa	; 0x13aa <DcMotor_Rotate>

        if(ldr<15){ LED_on(RED_LED); LED_on(GREEN_LED); LED_on(BLUE_LED); }
    1e66:	88 89       	ldd	r24, Y+16	; 0x10
    1e68:	99 89       	ldd	r25, Y+17	; 0x11
    1e6a:	8f 30       	cpi	r24, 0x0F	; 15
    1e6c:	91 05       	cpc	r25, r1
    1e6e:	50 f4       	brcc	.+20     	; 0x1e84 <main+0xb8>
    1e70:	85 e0       	ldi	r24, 0x05	; 5
    1e72:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <LED_on>
    1e76:	86 e0       	ldi	r24, 0x06	; 6
    1e78:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <LED_on>
    1e7c:	87 e0       	ldi	r24, 0x07	; 7
    1e7e:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <LED_on>
    1e82:	27 c0       	rjmp	.+78     	; 0x1ed2 <main+0x106>
        else if(ldr<=50){ LED_on(RED_LED); LED_on(GREEN_LED); LED_off(BLUE_LED); }
    1e84:	88 89       	ldd	r24, Y+16	; 0x10
    1e86:	99 89       	ldd	r25, Y+17	; 0x11
    1e88:	83 33       	cpi	r24, 0x33	; 51
    1e8a:	91 05       	cpc	r25, r1
    1e8c:	50 f4       	brcc	.+20     	; 0x1ea2 <main+0xd6>
    1e8e:	85 e0       	ldi	r24, 0x05	; 5
    1e90:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <LED_on>
    1e94:	86 e0       	ldi	r24, 0x06	; 6
    1e96:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <LED_on>
    1e9a:	87 e0       	ldi	r24, 0x07	; 7
    1e9c:	0e 94 8f 0a 	call	0x151e	; 0x151e <LED_off>
    1ea0:	18 c0       	rjmp	.+48     	; 0x1ed2 <main+0x106>
        else if(ldr<=70){ LED_on(RED_LED); LED_off(GREEN_LED); LED_off(BLUE_LED); }
    1ea2:	88 89       	ldd	r24, Y+16	; 0x10
    1ea4:	99 89       	ldd	r25, Y+17	; 0x11
    1ea6:	87 34       	cpi	r24, 0x47	; 71
    1ea8:	91 05       	cpc	r25, r1
    1eaa:	50 f4       	brcc	.+20     	; 0x1ec0 <main+0xf4>
    1eac:	85 e0       	ldi	r24, 0x05	; 5
    1eae:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <LED_on>
    1eb2:	86 e0       	ldi	r24, 0x06	; 6
    1eb4:	0e 94 8f 0a 	call	0x151e	; 0x151e <LED_off>
    1eb8:	87 e0       	ldi	r24, 0x07	; 7
    1eba:	0e 94 8f 0a 	call	0x151e	; 0x151e <LED_off>
    1ebe:	09 c0       	rjmp	.+18     	; 0x1ed2 <main+0x106>
        else { LED_off(RED_LED); LED_off(GREEN_LED); LED_off(BLUE_LED); }
    1ec0:	85 e0       	ldi	r24, 0x05	; 5
    1ec2:	0e 94 8f 0a 	call	0x151e	; 0x151e <LED_off>
    1ec6:	86 e0       	ldi	r24, 0x06	; 6
    1ec8:	0e 94 8f 0a 	call	0x151e	; 0x151e <LED_off>
    1ecc:	87 e0       	ldi	r24, 0x07	; 7
    1ece:	0e 94 8f 0a 	call	0x151e	; 0x151e <LED_off>

        LCD_clearScreen();
    1ed2:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <LCD_clearScreen>
        if(temp>=25) LCD_displayStringRowColumn(0,0,"FAN is ON");
    1ed6:	8a 89       	ldd	r24, Y+18	; 0x12
    1ed8:	9b 89       	ldd	r25, Y+19	; 0x13
    1eda:	89 31       	cpi	r24, 0x19	; 25
    1edc:	91 05       	cpc	r25, r1
    1ede:	40 f0       	brcs	.+16     	; 0x1ef0 <main+0x124>
    1ee0:	20 e6       	ldi	r18, 0x60	; 96
    1ee2:	30 e0       	ldi	r19, 0x00	; 0
    1ee4:	80 e0       	ldi	r24, 0x00	; 0
    1ee6:	60 e0       	ldi	r22, 0x00	; 0
    1ee8:	a9 01       	movw	r20, r18
    1eea:	0e 94 6e 0e 	call	0x1cdc	; 0x1cdc <LCD_displayStringRowColumn>
    1eee:	07 c0       	rjmp	.+14     	; 0x1efe <main+0x132>
        else LCD_displayStringRowColumn(0,0,"FAN is OFF");
    1ef0:	2a e6       	ldi	r18, 0x6A	; 106
    1ef2:	30 e0       	ldi	r19, 0x00	; 0
    1ef4:	80 e0       	ldi	r24, 0x00	; 0
    1ef6:	60 e0       	ldi	r22, 0x00	; 0
    1ef8:	a9 01       	movw	r20, r18
    1efa:	0e 94 6e 0e 	call	0x1cdc	; 0x1cdc <LCD_displayStringRowColumn>
        sprintf(buffer,"Temp=%uC LDR=%u%%",temp,ldr);
    1efe:	8d b7       	in	r24, 0x3d	; 61
    1f00:	9e b7       	in	r25, 0x3e	; 62
    1f02:	08 97       	sbiw	r24, 0x08	; 8
    1f04:	0f b6       	in	r0, 0x3f	; 63
    1f06:	f8 94       	cli
    1f08:	9e bf       	out	0x3e, r25	; 62
    1f0a:	0f be       	out	0x3f, r0	; 63
    1f0c:	8d bf       	out	0x3d, r24	; 61
    1f0e:	ed b7       	in	r30, 0x3d	; 61
    1f10:	fe b7       	in	r31, 0x3e	; 62
    1f12:	31 96       	adiw	r30, 0x01	; 1
    1f14:	ce 01       	movw	r24, r28
    1f16:	44 96       	adiw	r24, 0x14	; 20
    1f18:	91 83       	std	Z+1, r25	; 0x01
    1f1a:	80 83       	st	Z, r24
    1f1c:	85 e7       	ldi	r24, 0x75	; 117
    1f1e:	90 e0       	ldi	r25, 0x00	; 0
    1f20:	93 83       	std	Z+3, r25	; 0x03
    1f22:	82 83       	std	Z+2, r24	; 0x02
    1f24:	8a 89       	ldd	r24, Y+18	; 0x12
    1f26:	9b 89       	ldd	r25, Y+19	; 0x13
    1f28:	95 83       	std	Z+5, r25	; 0x05
    1f2a:	84 83       	std	Z+4, r24	; 0x04
    1f2c:	88 89       	ldd	r24, Y+16	; 0x10
    1f2e:	99 89       	ldd	r25, Y+17	; 0x11
    1f30:	97 83       	std	Z+7, r25	; 0x07
    1f32:	86 83       	std	Z+6, r24	; 0x06
    1f34:	0e 94 cf 10 	call	0x219e	; 0x219e <sprintf>
    1f38:	8d b7       	in	r24, 0x3d	; 61
    1f3a:	9e b7       	in	r25, 0x3e	; 62
    1f3c:	08 96       	adiw	r24, 0x08	; 8
    1f3e:	0f b6       	in	r0, 0x3f	; 63
    1f40:	f8 94       	cli
    1f42:	9e bf       	out	0x3e, r25	; 62
    1f44:	0f be       	out	0x3f, r0	; 63
    1f46:	8d bf       	out	0x3d, r24	; 61
        LCD_displayStringRowColumn(1,0,buffer);
    1f48:	9e 01       	movw	r18, r28
    1f4a:	2c 5e       	subi	r18, 0xEC	; 236
    1f4c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f4e:	81 e0       	ldi	r24, 0x01	; 1
    1f50:	60 e0       	ldi	r22, 0x00	; 0
    1f52:	a9 01       	movw	r20, r18
    1f54:	0e 94 6e 0e 	call	0x1cdc	; 0x1cdc <LCD_displayStringRowColumn>

        if(flame == 1) {
    1f58:	8f 85       	ldd	r24, Y+15	; 0x0f
    1f5a:	81 30       	cpi	r24, 0x01	; 1
    1f5c:	61 f4       	brne	.+24     	; 0x1f76 <main+0x1aa>
            Buzzer_on();
    1f5e:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <Buzzer_on>
            LCD_clearScreen();
    1f62:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <LCD_clearScreen>
            LCD_displayStringRowColumn(0,0,"Critical alert!");
    1f66:	27 e8       	ldi	r18, 0x87	; 135
    1f68:	30 e0       	ldi	r19, 0x00	; 0
    1f6a:	80 e0       	ldi	r24, 0x00	; 0
    1f6c:	60 e0       	ldi	r22, 0x00	; 0
    1f6e:	a9 01       	movw	r20, r18
    1f70:	0e 94 6e 0e 	call	0x1cdc	; 0x1cdc <LCD_displayStringRowColumn>
    1f74:	02 c0       	rjmp	.+4      	; 0x1f7a <main+0x1ae>
        } else {
            Buzzer_off();
    1f76:	0e 94 d8 0e 	call	0x1db0	; 0x1db0 <Buzzer_off>
    1f7a:	80 e0       	ldi	r24, 0x00	; 0
    1f7c:	90 e0       	ldi	r25, 0x00	; 0
    1f7e:	aa ef       	ldi	r26, 0xFA	; 250
    1f80:	b3 e4       	ldi	r27, 0x43	; 67
    1f82:	8b 87       	std	Y+11, r24	; 0x0b
    1f84:	9c 87       	std	Y+12, r25	; 0x0c
    1f86:	ad 87       	std	Y+13, r26	; 0x0d
    1f88:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f8a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f8c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f8e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f90:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f92:	20 e0       	ldi	r18, 0x00	; 0
    1f94:	30 e0       	ldi	r19, 0x00	; 0
    1f96:	4a e7       	ldi	r20, 0x7A	; 122
    1f98:	55 e4       	ldi	r21, 0x45	; 69
    1f9a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f9e:	dc 01       	movw	r26, r24
    1fa0:	cb 01       	movw	r24, r22
    1fa2:	8f 83       	std	Y+7, r24	; 0x07
    1fa4:	98 87       	std	Y+8, r25	; 0x08
    1fa6:	a9 87       	std	Y+9, r26	; 0x09
    1fa8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1faa:	6f 81       	ldd	r22, Y+7	; 0x07
    1fac:	78 85       	ldd	r23, Y+8	; 0x08
    1fae:	89 85       	ldd	r24, Y+9	; 0x09
    1fb0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fb2:	20 e0       	ldi	r18, 0x00	; 0
    1fb4:	30 e0       	ldi	r19, 0x00	; 0
    1fb6:	40 e8       	ldi	r20, 0x80	; 128
    1fb8:	5f e3       	ldi	r21, 0x3F	; 63
    1fba:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1fbe:	88 23       	and	r24, r24
    1fc0:	2c f4       	brge	.+10     	; 0x1fcc <main+0x200>
		__ticks = 1;
    1fc2:	81 e0       	ldi	r24, 0x01	; 1
    1fc4:	90 e0       	ldi	r25, 0x00	; 0
    1fc6:	9e 83       	std	Y+6, r25	; 0x06
    1fc8:	8d 83       	std	Y+5, r24	; 0x05
    1fca:	3f c0       	rjmp	.+126    	; 0x204a <main+0x27e>
	else if (__tmp > 65535)
    1fcc:	6f 81       	ldd	r22, Y+7	; 0x07
    1fce:	78 85       	ldd	r23, Y+8	; 0x08
    1fd0:	89 85       	ldd	r24, Y+9	; 0x09
    1fd2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fd4:	20 e0       	ldi	r18, 0x00	; 0
    1fd6:	3f ef       	ldi	r19, 0xFF	; 255
    1fd8:	4f e7       	ldi	r20, 0x7F	; 127
    1fda:	57 e4       	ldi	r21, 0x47	; 71
    1fdc:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1fe0:	18 16       	cp	r1, r24
    1fe2:	4c f5       	brge	.+82     	; 0x2036 <main+0x26a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fe4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1fe6:	7c 85       	ldd	r23, Y+12	; 0x0c
    1fe8:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fea:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fec:	20 e0       	ldi	r18, 0x00	; 0
    1fee:	30 e0       	ldi	r19, 0x00	; 0
    1ff0:	40 e2       	ldi	r20, 0x20	; 32
    1ff2:	51 e4       	ldi	r21, 0x41	; 65
    1ff4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ff8:	dc 01       	movw	r26, r24
    1ffa:	cb 01       	movw	r24, r22
    1ffc:	bc 01       	movw	r22, r24
    1ffe:	cd 01       	movw	r24, r26
    2000:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2004:	dc 01       	movw	r26, r24
    2006:	cb 01       	movw	r24, r22
    2008:	9e 83       	std	Y+6, r25	; 0x06
    200a:	8d 83       	std	Y+5, r24	; 0x05
    200c:	0f c0       	rjmp	.+30     	; 0x202c <main+0x260>
    200e:	80 e9       	ldi	r24, 0x90	; 144
    2010:	91 e0       	ldi	r25, 0x01	; 1
    2012:	9c 83       	std	Y+4, r25	; 0x04
    2014:	8b 83       	std	Y+3, r24	; 0x03
    2016:	8b 81       	ldd	r24, Y+3	; 0x03
    2018:	9c 81       	ldd	r25, Y+4	; 0x04
    201a:	01 97       	sbiw	r24, 0x01	; 1
    201c:	f1 f7       	brne	.-4      	; 0x201a <main+0x24e>
    201e:	9c 83       	std	Y+4, r25	; 0x04
    2020:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2022:	8d 81       	ldd	r24, Y+5	; 0x05
    2024:	9e 81       	ldd	r25, Y+6	; 0x06
    2026:	01 97       	sbiw	r24, 0x01	; 1
    2028:	9e 83       	std	Y+6, r25	; 0x06
    202a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    202c:	8d 81       	ldd	r24, Y+5	; 0x05
    202e:	9e 81       	ldd	r25, Y+6	; 0x06
    2030:	00 97       	sbiw	r24, 0x00	; 0
    2032:	69 f7       	brne	.-38     	; 0x200e <main+0x242>
    2034:	e1 ce       	rjmp	.-574    	; 0x1df8 <main+0x2c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2036:	6f 81       	ldd	r22, Y+7	; 0x07
    2038:	78 85       	ldd	r23, Y+8	; 0x08
    203a:	89 85       	ldd	r24, Y+9	; 0x09
    203c:	9a 85       	ldd	r25, Y+10	; 0x0a
    203e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2042:	dc 01       	movw	r26, r24
    2044:	cb 01       	movw	r24, r22
    2046:	9e 83       	std	Y+6, r25	; 0x06
    2048:	8d 83       	std	Y+5, r24	; 0x05
    204a:	8d 81       	ldd	r24, Y+5	; 0x05
    204c:	9e 81       	ldd	r25, Y+6	; 0x06
    204e:	9a 83       	std	Y+2, r25	; 0x02
    2050:	89 83       	std	Y+1, r24	; 0x01
    2052:	89 81       	ldd	r24, Y+1	; 0x01
    2054:	9a 81       	ldd	r25, Y+2	; 0x02
    2056:	01 97       	sbiw	r24, 0x01	; 1
    2058:	f1 f7       	brne	.-4      	; 0x2056 <main+0x28a>
    205a:	9a 83       	std	Y+2, r25	; 0x02
    205c:	89 83       	std	Y+1, r24	; 0x01
    205e:	cc ce       	rjmp	.-616    	; 0x1df8 <main+0x2c>

00002060 <__mulsi3>:
    2060:	62 9f       	mul	r22, r18
    2062:	d0 01       	movw	r26, r0
    2064:	73 9f       	mul	r23, r19
    2066:	f0 01       	movw	r30, r0
    2068:	82 9f       	mul	r24, r18
    206a:	e0 0d       	add	r30, r0
    206c:	f1 1d       	adc	r31, r1
    206e:	64 9f       	mul	r22, r20
    2070:	e0 0d       	add	r30, r0
    2072:	f1 1d       	adc	r31, r1
    2074:	92 9f       	mul	r25, r18
    2076:	f0 0d       	add	r31, r0
    2078:	83 9f       	mul	r24, r19
    207a:	f0 0d       	add	r31, r0
    207c:	74 9f       	mul	r23, r20
    207e:	f0 0d       	add	r31, r0
    2080:	65 9f       	mul	r22, r21
    2082:	f0 0d       	add	r31, r0
    2084:	99 27       	eor	r25, r25
    2086:	72 9f       	mul	r23, r18
    2088:	b0 0d       	add	r27, r0
    208a:	e1 1d       	adc	r30, r1
    208c:	f9 1f       	adc	r31, r25
    208e:	63 9f       	mul	r22, r19
    2090:	b0 0d       	add	r27, r0
    2092:	e1 1d       	adc	r30, r1
    2094:	f9 1f       	adc	r31, r25
    2096:	bd 01       	movw	r22, r26
    2098:	cf 01       	movw	r24, r30
    209a:	11 24       	eor	r1, r1
    209c:	08 95       	ret

0000209e <__divmodhi4>:
    209e:	97 fb       	bst	r25, 7
    20a0:	09 2e       	mov	r0, r25
    20a2:	07 26       	eor	r0, r23
    20a4:	0a d0       	rcall	.+20     	; 0x20ba <__divmodhi4_neg1>
    20a6:	77 fd       	sbrc	r23, 7
    20a8:	04 d0       	rcall	.+8      	; 0x20b2 <__divmodhi4_neg2>
    20aa:	2e d0       	rcall	.+92     	; 0x2108 <__udivmodhi4>
    20ac:	06 d0       	rcall	.+12     	; 0x20ba <__divmodhi4_neg1>
    20ae:	00 20       	and	r0, r0
    20b0:	1a f4       	brpl	.+6      	; 0x20b8 <__divmodhi4_exit>

000020b2 <__divmodhi4_neg2>:
    20b2:	70 95       	com	r23
    20b4:	61 95       	neg	r22
    20b6:	7f 4f       	sbci	r23, 0xFF	; 255

000020b8 <__divmodhi4_exit>:
    20b8:	08 95       	ret

000020ba <__divmodhi4_neg1>:
    20ba:	f6 f7       	brtc	.-4      	; 0x20b8 <__divmodhi4_exit>
    20bc:	90 95       	com	r25
    20be:	81 95       	neg	r24
    20c0:	9f 4f       	sbci	r25, 0xFF	; 255
    20c2:	08 95       	ret

000020c4 <__udivmodsi4>:
    20c4:	a1 e2       	ldi	r26, 0x21	; 33
    20c6:	1a 2e       	mov	r1, r26
    20c8:	aa 1b       	sub	r26, r26
    20ca:	bb 1b       	sub	r27, r27
    20cc:	fd 01       	movw	r30, r26
    20ce:	0d c0       	rjmp	.+26     	; 0x20ea <__udivmodsi4_ep>

000020d0 <__udivmodsi4_loop>:
    20d0:	aa 1f       	adc	r26, r26
    20d2:	bb 1f       	adc	r27, r27
    20d4:	ee 1f       	adc	r30, r30
    20d6:	ff 1f       	adc	r31, r31
    20d8:	a2 17       	cp	r26, r18
    20da:	b3 07       	cpc	r27, r19
    20dc:	e4 07       	cpc	r30, r20
    20de:	f5 07       	cpc	r31, r21
    20e0:	20 f0       	brcs	.+8      	; 0x20ea <__udivmodsi4_ep>
    20e2:	a2 1b       	sub	r26, r18
    20e4:	b3 0b       	sbc	r27, r19
    20e6:	e4 0b       	sbc	r30, r20
    20e8:	f5 0b       	sbc	r31, r21

000020ea <__udivmodsi4_ep>:
    20ea:	66 1f       	adc	r22, r22
    20ec:	77 1f       	adc	r23, r23
    20ee:	88 1f       	adc	r24, r24
    20f0:	99 1f       	adc	r25, r25
    20f2:	1a 94       	dec	r1
    20f4:	69 f7       	brne	.-38     	; 0x20d0 <__udivmodsi4_loop>
    20f6:	60 95       	com	r22
    20f8:	70 95       	com	r23
    20fa:	80 95       	com	r24
    20fc:	90 95       	com	r25
    20fe:	9b 01       	movw	r18, r22
    2100:	ac 01       	movw	r20, r24
    2102:	bd 01       	movw	r22, r26
    2104:	cf 01       	movw	r24, r30
    2106:	08 95       	ret

00002108 <__udivmodhi4>:
    2108:	aa 1b       	sub	r26, r26
    210a:	bb 1b       	sub	r27, r27
    210c:	51 e1       	ldi	r21, 0x11	; 17
    210e:	07 c0       	rjmp	.+14     	; 0x211e <__udivmodhi4_ep>

00002110 <__udivmodhi4_loop>:
    2110:	aa 1f       	adc	r26, r26
    2112:	bb 1f       	adc	r27, r27
    2114:	a6 17       	cp	r26, r22
    2116:	b7 07       	cpc	r27, r23
    2118:	10 f0       	brcs	.+4      	; 0x211e <__udivmodhi4_ep>
    211a:	a6 1b       	sub	r26, r22
    211c:	b7 0b       	sbc	r27, r23

0000211e <__udivmodhi4_ep>:
    211e:	88 1f       	adc	r24, r24
    2120:	99 1f       	adc	r25, r25
    2122:	5a 95       	dec	r21
    2124:	a9 f7       	brne	.-22     	; 0x2110 <__udivmodhi4_loop>
    2126:	80 95       	com	r24
    2128:	90 95       	com	r25
    212a:	bc 01       	movw	r22, r24
    212c:	cd 01       	movw	r24, r26
    212e:	08 95       	ret

00002130 <__prologue_saves__>:
    2130:	2f 92       	push	r2
    2132:	3f 92       	push	r3
    2134:	4f 92       	push	r4
    2136:	5f 92       	push	r5
    2138:	6f 92       	push	r6
    213a:	7f 92       	push	r7
    213c:	8f 92       	push	r8
    213e:	9f 92       	push	r9
    2140:	af 92       	push	r10
    2142:	bf 92       	push	r11
    2144:	cf 92       	push	r12
    2146:	df 92       	push	r13
    2148:	ef 92       	push	r14
    214a:	ff 92       	push	r15
    214c:	0f 93       	push	r16
    214e:	1f 93       	push	r17
    2150:	cf 93       	push	r28
    2152:	df 93       	push	r29
    2154:	cd b7       	in	r28, 0x3d	; 61
    2156:	de b7       	in	r29, 0x3e	; 62
    2158:	ca 1b       	sub	r28, r26
    215a:	db 0b       	sbc	r29, r27
    215c:	0f b6       	in	r0, 0x3f	; 63
    215e:	f8 94       	cli
    2160:	de bf       	out	0x3e, r29	; 62
    2162:	0f be       	out	0x3f, r0	; 63
    2164:	cd bf       	out	0x3d, r28	; 61
    2166:	09 94       	ijmp

00002168 <__epilogue_restores__>:
    2168:	2a 88       	ldd	r2, Y+18	; 0x12
    216a:	39 88       	ldd	r3, Y+17	; 0x11
    216c:	48 88       	ldd	r4, Y+16	; 0x10
    216e:	5f 84       	ldd	r5, Y+15	; 0x0f
    2170:	6e 84       	ldd	r6, Y+14	; 0x0e
    2172:	7d 84       	ldd	r7, Y+13	; 0x0d
    2174:	8c 84       	ldd	r8, Y+12	; 0x0c
    2176:	9b 84       	ldd	r9, Y+11	; 0x0b
    2178:	aa 84       	ldd	r10, Y+10	; 0x0a
    217a:	b9 84       	ldd	r11, Y+9	; 0x09
    217c:	c8 84       	ldd	r12, Y+8	; 0x08
    217e:	df 80       	ldd	r13, Y+7	; 0x07
    2180:	ee 80       	ldd	r14, Y+6	; 0x06
    2182:	fd 80       	ldd	r15, Y+5	; 0x05
    2184:	0c 81       	ldd	r16, Y+4	; 0x04
    2186:	1b 81       	ldd	r17, Y+3	; 0x03
    2188:	aa 81       	ldd	r26, Y+2	; 0x02
    218a:	b9 81       	ldd	r27, Y+1	; 0x01
    218c:	ce 0f       	add	r28, r30
    218e:	d1 1d       	adc	r29, r1
    2190:	0f b6       	in	r0, 0x3f	; 63
    2192:	f8 94       	cli
    2194:	de bf       	out	0x3e, r29	; 62
    2196:	0f be       	out	0x3f, r0	; 63
    2198:	cd bf       	out	0x3d, r28	; 61
    219a:	ed 01       	movw	r28, r26
    219c:	08 95       	ret

0000219e <sprintf>:
    219e:	ae e0       	ldi	r26, 0x0E	; 14
    21a0:	b0 e0       	ldi	r27, 0x00	; 0
    21a2:	e5 ed       	ldi	r30, 0xD5	; 213
    21a4:	f0 e1       	ldi	r31, 0x10	; 16
    21a6:	0c 94 a6 10 	jmp	0x214c	; 0x214c <__prologue_saves__+0x1c>
    21aa:	0d 89       	ldd	r16, Y+21	; 0x15
    21ac:	1e 89       	ldd	r17, Y+22	; 0x16
    21ae:	86 e0       	ldi	r24, 0x06	; 6
    21b0:	8c 83       	std	Y+4, r24	; 0x04
    21b2:	1a 83       	std	Y+2, r17	; 0x02
    21b4:	09 83       	std	Y+1, r16	; 0x01
    21b6:	8f ef       	ldi	r24, 0xFF	; 255
    21b8:	9f e7       	ldi	r25, 0x7F	; 127
    21ba:	9e 83       	std	Y+6, r25	; 0x06
    21bc:	8d 83       	std	Y+5, r24	; 0x05
    21be:	9e 01       	movw	r18, r28
    21c0:	27 5e       	subi	r18, 0xE7	; 231
    21c2:	3f 4f       	sbci	r19, 0xFF	; 255
    21c4:	ce 01       	movw	r24, r28
    21c6:	01 96       	adiw	r24, 0x01	; 1
    21c8:	6f 89       	ldd	r22, Y+23	; 0x17
    21ca:	78 8d       	ldd	r23, Y+24	; 0x18
    21cc:	a9 01       	movw	r20, r18
    21ce:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <vfprintf>
    21d2:	2f 81       	ldd	r18, Y+7	; 0x07
    21d4:	38 85       	ldd	r19, Y+8	; 0x08
    21d6:	02 0f       	add	r16, r18
    21d8:	13 1f       	adc	r17, r19
    21da:	f8 01       	movw	r30, r16
    21dc:	10 82       	st	Z, r1
    21de:	2e 96       	adiw	r28, 0x0e	; 14
    21e0:	e4 e0       	ldi	r30, 0x04	; 4
    21e2:	0c 94 c2 10 	jmp	0x2184	; 0x2184 <__epilogue_restores__+0x1c>

000021e6 <vfprintf>:
    21e6:	ab e0       	ldi	r26, 0x0B	; 11
    21e8:	b0 e0       	ldi	r27, 0x00	; 0
    21ea:	e9 ef       	ldi	r30, 0xF9	; 249
    21ec:	f0 e1       	ldi	r31, 0x10	; 16
    21ee:	0c 94 98 10 	jmp	0x2130	; 0x2130 <__prologue_saves__>
    21f2:	3c 01       	movw	r6, r24
    21f4:	2b 01       	movw	r4, r22
    21f6:	5a 01       	movw	r10, r20
    21f8:	fc 01       	movw	r30, r24
    21fa:	17 82       	std	Z+7, r1	; 0x07
    21fc:	16 82       	std	Z+6, r1	; 0x06
    21fe:	83 81       	ldd	r24, Z+3	; 0x03
    2200:	81 fd       	sbrc	r24, 1
    2202:	03 c0       	rjmp	.+6      	; 0x220a <vfprintf+0x24>
    2204:	6f ef       	ldi	r22, 0xFF	; 255
    2206:	7f ef       	ldi	r23, 0xFF	; 255
    2208:	c6 c1       	rjmp	.+908    	; 0x2596 <vfprintf+0x3b0>
    220a:	9a e0       	ldi	r25, 0x0A	; 10
    220c:	89 2e       	mov	r8, r25
    220e:	1e 01       	movw	r2, r28
    2210:	08 94       	sec
    2212:	21 1c       	adc	r2, r1
    2214:	31 1c       	adc	r3, r1
    2216:	f3 01       	movw	r30, r6
    2218:	23 81       	ldd	r18, Z+3	; 0x03
    221a:	f2 01       	movw	r30, r4
    221c:	23 fd       	sbrc	r18, 3
    221e:	85 91       	lpm	r24, Z+
    2220:	23 ff       	sbrs	r18, 3
    2222:	81 91       	ld	r24, Z+
    2224:	2f 01       	movw	r4, r30
    2226:	88 23       	and	r24, r24
    2228:	09 f4       	brne	.+2      	; 0x222c <vfprintf+0x46>
    222a:	b2 c1       	rjmp	.+868    	; 0x2590 <vfprintf+0x3aa>
    222c:	85 32       	cpi	r24, 0x25	; 37
    222e:	39 f4       	brne	.+14     	; 0x223e <vfprintf+0x58>
    2230:	23 fd       	sbrc	r18, 3
    2232:	85 91       	lpm	r24, Z+
    2234:	23 ff       	sbrs	r18, 3
    2236:	81 91       	ld	r24, Z+
    2238:	2f 01       	movw	r4, r30
    223a:	85 32       	cpi	r24, 0x25	; 37
    223c:	29 f4       	brne	.+10     	; 0x2248 <vfprintf+0x62>
    223e:	90 e0       	ldi	r25, 0x00	; 0
    2240:	b3 01       	movw	r22, r6
    2242:	0e 94 e6 12 	call	0x25cc	; 0x25cc <fputc>
    2246:	e7 cf       	rjmp	.-50     	; 0x2216 <vfprintf+0x30>
    2248:	98 2f       	mov	r25, r24
    224a:	ff 24       	eor	r15, r15
    224c:	ee 24       	eor	r14, r14
    224e:	99 24       	eor	r9, r9
    2250:	ff e1       	ldi	r31, 0x1F	; 31
    2252:	ff 15       	cp	r31, r15
    2254:	d0 f0       	brcs	.+52     	; 0x228a <vfprintf+0xa4>
    2256:	9b 32       	cpi	r25, 0x2B	; 43
    2258:	69 f0       	breq	.+26     	; 0x2274 <vfprintf+0x8e>
    225a:	9c 32       	cpi	r25, 0x2C	; 44
    225c:	28 f4       	brcc	.+10     	; 0x2268 <vfprintf+0x82>
    225e:	90 32       	cpi	r25, 0x20	; 32
    2260:	59 f0       	breq	.+22     	; 0x2278 <vfprintf+0x92>
    2262:	93 32       	cpi	r25, 0x23	; 35
    2264:	91 f4       	brne	.+36     	; 0x228a <vfprintf+0xa4>
    2266:	0e c0       	rjmp	.+28     	; 0x2284 <vfprintf+0x9e>
    2268:	9d 32       	cpi	r25, 0x2D	; 45
    226a:	49 f0       	breq	.+18     	; 0x227e <vfprintf+0x98>
    226c:	90 33       	cpi	r25, 0x30	; 48
    226e:	69 f4       	brne	.+26     	; 0x228a <vfprintf+0xa4>
    2270:	41 e0       	ldi	r20, 0x01	; 1
    2272:	24 c0       	rjmp	.+72     	; 0x22bc <vfprintf+0xd6>
    2274:	52 e0       	ldi	r21, 0x02	; 2
    2276:	f5 2a       	or	r15, r21
    2278:	84 e0       	ldi	r24, 0x04	; 4
    227a:	f8 2a       	or	r15, r24
    227c:	28 c0       	rjmp	.+80     	; 0x22ce <vfprintf+0xe8>
    227e:	98 e0       	ldi	r25, 0x08	; 8
    2280:	f9 2a       	or	r15, r25
    2282:	25 c0       	rjmp	.+74     	; 0x22ce <vfprintf+0xe8>
    2284:	e0 e1       	ldi	r30, 0x10	; 16
    2286:	fe 2a       	or	r15, r30
    2288:	22 c0       	rjmp	.+68     	; 0x22ce <vfprintf+0xe8>
    228a:	f7 fc       	sbrc	r15, 7
    228c:	29 c0       	rjmp	.+82     	; 0x22e0 <vfprintf+0xfa>
    228e:	89 2f       	mov	r24, r25
    2290:	80 53       	subi	r24, 0x30	; 48
    2292:	8a 30       	cpi	r24, 0x0A	; 10
    2294:	70 f4       	brcc	.+28     	; 0x22b2 <vfprintf+0xcc>
    2296:	f6 fe       	sbrs	r15, 6
    2298:	05 c0       	rjmp	.+10     	; 0x22a4 <vfprintf+0xbe>
    229a:	98 9c       	mul	r9, r8
    229c:	90 2c       	mov	r9, r0
    229e:	11 24       	eor	r1, r1
    22a0:	98 0e       	add	r9, r24
    22a2:	15 c0       	rjmp	.+42     	; 0x22ce <vfprintf+0xe8>
    22a4:	e8 9c       	mul	r14, r8
    22a6:	e0 2c       	mov	r14, r0
    22a8:	11 24       	eor	r1, r1
    22aa:	e8 0e       	add	r14, r24
    22ac:	f0 e2       	ldi	r31, 0x20	; 32
    22ae:	ff 2a       	or	r15, r31
    22b0:	0e c0       	rjmp	.+28     	; 0x22ce <vfprintf+0xe8>
    22b2:	9e 32       	cpi	r25, 0x2E	; 46
    22b4:	29 f4       	brne	.+10     	; 0x22c0 <vfprintf+0xda>
    22b6:	f6 fc       	sbrc	r15, 6
    22b8:	6b c1       	rjmp	.+726    	; 0x2590 <vfprintf+0x3aa>
    22ba:	40 e4       	ldi	r20, 0x40	; 64
    22bc:	f4 2a       	or	r15, r20
    22be:	07 c0       	rjmp	.+14     	; 0x22ce <vfprintf+0xe8>
    22c0:	9c 36       	cpi	r25, 0x6C	; 108
    22c2:	19 f4       	brne	.+6      	; 0x22ca <vfprintf+0xe4>
    22c4:	50 e8       	ldi	r21, 0x80	; 128
    22c6:	f5 2a       	or	r15, r21
    22c8:	02 c0       	rjmp	.+4      	; 0x22ce <vfprintf+0xe8>
    22ca:	98 36       	cpi	r25, 0x68	; 104
    22cc:	49 f4       	brne	.+18     	; 0x22e0 <vfprintf+0xfa>
    22ce:	f2 01       	movw	r30, r4
    22d0:	23 fd       	sbrc	r18, 3
    22d2:	95 91       	lpm	r25, Z+
    22d4:	23 ff       	sbrs	r18, 3
    22d6:	91 91       	ld	r25, Z+
    22d8:	2f 01       	movw	r4, r30
    22da:	99 23       	and	r25, r25
    22dc:	09 f0       	breq	.+2      	; 0x22e0 <vfprintf+0xfa>
    22de:	b8 cf       	rjmp	.-144    	; 0x2250 <vfprintf+0x6a>
    22e0:	89 2f       	mov	r24, r25
    22e2:	85 54       	subi	r24, 0x45	; 69
    22e4:	83 30       	cpi	r24, 0x03	; 3
    22e6:	18 f0       	brcs	.+6      	; 0x22ee <vfprintf+0x108>
    22e8:	80 52       	subi	r24, 0x20	; 32
    22ea:	83 30       	cpi	r24, 0x03	; 3
    22ec:	38 f4       	brcc	.+14     	; 0x22fc <vfprintf+0x116>
    22ee:	44 e0       	ldi	r20, 0x04	; 4
    22f0:	50 e0       	ldi	r21, 0x00	; 0
    22f2:	a4 0e       	add	r10, r20
    22f4:	b5 1e       	adc	r11, r21
    22f6:	5f e3       	ldi	r21, 0x3F	; 63
    22f8:	59 83       	std	Y+1, r21	; 0x01
    22fa:	0f c0       	rjmp	.+30     	; 0x231a <vfprintf+0x134>
    22fc:	93 36       	cpi	r25, 0x63	; 99
    22fe:	31 f0       	breq	.+12     	; 0x230c <vfprintf+0x126>
    2300:	93 37       	cpi	r25, 0x73	; 115
    2302:	79 f0       	breq	.+30     	; 0x2322 <vfprintf+0x13c>
    2304:	93 35       	cpi	r25, 0x53	; 83
    2306:	09 f0       	breq	.+2      	; 0x230a <vfprintf+0x124>
    2308:	56 c0       	rjmp	.+172    	; 0x23b6 <vfprintf+0x1d0>
    230a:	20 c0       	rjmp	.+64     	; 0x234c <vfprintf+0x166>
    230c:	f5 01       	movw	r30, r10
    230e:	80 81       	ld	r24, Z
    2310:	89 83       	std	Y+1, r24	; 0x01
    2312:	42 e0       	ldi	r20, 0x02	; 2
    2314:	50 e0       	ldi	r21, 0x00	; 0
    2316:	a4 0e       	add	r10, r20
    2318:	b5 1e       	adc	r11, r21
    231a:	61 01       	movw	r12, r2
    231c:	01 e0       	ldi	r16, 0x01	; 1
    231e:	10 e0       	ldi	r17, 0x00	; 0
    2320:	12 c0       	rjmp	.+36     	; 0x2346 <vfprintf+0x160>
    2322:	f5 01       	movw	r30, r10
    2324:	c0 80       	ld	r12, Z
    2326:	d1 80       	ldd	r13, Z+1	; 0x01
    2328:	f6 fc       	sbrc	r15, 6
    232a:	03 c0       	rjmp	.+6      	; 0x2332 <vfprintf+0x14c>
    232c:	6f ef       	ldi	r22, 0xFF	; 255
    232e:	7f ef       	ldi	r23, 0xFF	; 255
    2330:	02 c0       	rjmp	.+4      	; 0x2336 <vfprintf+0x150>
    2332:	69 2d       	mov	r22, r9
    2334:	70 e0       	ldi	r23, 0x00	; 0
    2336:	42 e0       	ldi	r20, 0x02	; 2
    2338:	50 e0       	ldi	r21, 0x00	; 0
    233a:	a4 0e       	add	r10, r20
    233c:	b5 1e       	adc	r11, r21
    233e:	c6 01       	movw	r24, r12
    2340:	0e 94 db 12 	call	0x25b6	; 0x25b6 <strnlen>
    2344:	8c 01       	movw	r16, r24
    2346:	5f e7       	ldi	r21, 0x7F	; 127
    2348:	f5 22       	and	r15, r21
    234a:	14 c0       	rjmp	.+40     	; 0x2374 <vfprintf+0x18e>
    234c:	f5 01       	movw	r30, r10
    234e:	c0 80       	ld	r12, Z
    2350:	d1 80       	ldd	r13, Z+1	; 0x01
    2352:	f6 fc       	sbrc	r15, 6
    2354:	03 c0       	rjmp	.+6      	; 0x235c <vfprintf+0x176>
    2356:	6f ef       	ldi	r22, 0xFF	; 255
    2358:	7f ef       	ldi	r23, 0xFF	; 255
    235a:	02 c0       	rjmp	.+4      	; 0x2360 <vfprintf+0x17a>
    235c:	69 2d       	mov	r22, r9
    235e:	70 e0       	ldi	r23, 0x00	; 0
    2360:	42 e0       	ldi	r20, 0x02	; 2
    2362:	50 e0       	ldi	r21, 0x00	; 0
    2364:	a4 0e       	add	r10, r20
    2366:	b5 1e       	adc	r11, r21
    2368:	c6 01       	movw	r24, r12
    236a:	0e 94 d0 12 	call	0x25a0	; 0x25a0 <strnlen_P>
    236e:	8c 01       	movw	r16, r24
    2370:	50 e8       	ldi	r21, 0x80	; 128
    2372:	f5 2a       	or	r15, r21
    2374:	f3 fe       	sbrs	r15, 3
    2376:	07 c0       	rjmp	.+14     	; 0x2386 <vfprintf+0x1a0>
    2378:	1a c0       	rjmp	.+52     	; 0x23ae <vfprintf+0x1c8>
    237a:	80 e2       	ldi	r24, 0x20	; 32
    237c:	90 e0       	ldi	r25, 0x00	; 0
    237e:	b3 01       	movw	r22, r6
    2380:	0e 94 e6 12 	call	0x25cc	; 0x25cc <fputc>
    2384:	ea 94       	dec	r14
    2386:	8e 2d       	mov	r24, r14
    2388:	90 e0       	ldi	r25, 0x00	; 0
    238a:	08 17       	cp	r16, r24
    238c:	19 07       	cpc	r17, r25
    238e:	a8 f3       	brcs	.-22     	; 0x237a <vfprintf+0x194>
    2390:	0e c0       	rjmp	.+28     	; 0x23ae <vfprintf+0x1c8>
    2392:	f6 01       	movw	r30, r12
    2394:	f7 fc       	sbrc	r15, 7
    2396:	85 91       	lpm	r24, Z+
    2398:	f7 fe       	sbrs	r15, 7
    239a:	81 91       	ld	r24, Z+
    239c:	6f 01       	movw	r12, r30
    239e:	90 e0       	ldi	r25, 0x00	; 0
    23a0:	b3 01       	movw	r22, r6
    23a2:	0e 94 e6 12 	call	0x25cc	; 0x25cc <fputc>
    23a6:	e1 10       	cpse	r14, r1
    23a8:	ea 94       	dec	r14
    23aa:	01 50       	subi	r16, 0x01	; 1
    23ac:	10 40       	sbci	r17, 0x00	; 0
    23ae:	01 15       	cp	r16, r1
    23b0:	11 05       	cpc	r17, r1
    23b2:	79 f7       	brne	.-34     	; 0x2392 <vfprintf+0x1ac>
    23b4:	ea c0       	rjmp	.+468    	; 0x258a <vfprintf+0x3a4>
    23b6:	94 36       	cpi	r25, 0x64	; 100
    23b8:	11 f0       	breq	.+4      	; 0x23be <vfprintf+0x1d8>
    23ba:	99 36       	cpi	r25, 0x69	; 105
    23bc:	69 f5       	brne	.+90     	; 0x2418 <vfprintf+0x232>
    23be:	f7 fe       	sbrs	r15, 7
    23c0:	08 c0       	rjmp	.+16     	; 0x23d2 <vfprintf+0x1ec>
    23c2:	f5 01       	movw	r30, r10
    23c4:	20 81       	ld	r18, Z
    23c6:	31 81       	ldd	r19, Z+1	; 0x01
    23c8:	42 81       	ldd	r20, Z+2	; 0x02
    23ca:	53 81       	ldd	r21, Z+3	; 0x03
    23cc:	84 e0       	ldi	r24, 0x04	; 4
    23ce:	90 e0       	ldi	r25, 0x00	; 0
    23d0:	0a c0       	rjmp	.+20     	; 0x23e6 <vfprintf+0x200>
    23d2:	f5 01       	movw	r30, r10
    23d4:	80 81       	ld	r24, Z
    23d6:	91 81       	ldd	r25, Z+1	; 0x01
    23d8:	9c 01       	movw	r18, r24
    23da:	44 27       	eor	r20, r20
    23dc:	37 fd       	sbrc	r19, 7
    23de:	40 95       	com	r20
    23e0:	54 2f       	mov	r21, r20
    23e2:	82 e0       	ldi	r24, 0x02	; 2
    23e4:	90 e0       	ldi	r25, 0x00	; 0
    23e6:	a8 0e       	add	r10, r24
    23e8:	b9 1e       	adc	r11, r25
    23ea:	9f e6       	ldi	r25, 0x6F	; 111
    23ec:	f9 22       	and	r15, r25
    23ee:	57 ff       	sbrs	r21, 7
    23f0:	09 c0       	rjmp	.+18     	; 0x2404 <vfprintf+0x21e>
    23f2:	50 95       	com	r21
    23f4:	40 95       	com	r20
    23f6:	30 95       	com	r19
    23f8:	21 95       	neg	r18
    23fa:	3f 4f       	sbci	r19, 0xFF	; 255
    23fc:	4f 4f       	sbci	r20, 0xFF	; 255
    23fe:	5f 4f       	sbci	r21, 0xFF	; 255
    2400:	e0 e8       	ldi	r30, 0x80	; 128
    2402:	fe 2a       	or	r15, r30
    2404:	ca 01       	movw	r24, r20
    2406:	b9 01       	movw	r22, r18
    2408:	a1 01       	movw	r20, r2
    240a:	2a e0       	ldi	r18, 0x0A	; 10
    240c:	30 e0       	ldi	r19, 0x00	; 0
    240e:	0e 94 12 13 	call	0x2624	; 0x2624 <__ultoa_invert>
    2412:	d8 2e       	mov	r13, r24
    2414:	d2 18       	sub	r13, r2
    2416:	40 c0       	rjmp	.+128    	; 0x2498 <vfprintf+0x2b2>
    2418:	95 37       	cpi	r25, 0x75	; 117
    241a:	29 f4       	brne	.+10     	; 0x2426 <vfprintf+0x240>
    241c:	1f 2d       	mov	r17, r15
    241e:	1f 7e       	andi	r17, 0xEF	; 239
    2420:	2a e0       	ldi	r18, 0x0A	; 10
    2422:	30 e0       	ldi	r19, 0x00	; 0
    2424:	1d c0       	rjmp	.+58     	; 0x2460 <vfprintf+0x27a>
    2426:	1f 2d       	mov	r17, r15
    2428:	19 7f       	andi	r17, 0xF9	; 249
    242a:	9f 36       	cpi	r25, 0x6F	; 111
    242c:	61 f0       	breq	.+24     	; 0x2446 <vfprintf+0x260>
    242e:	90 37       	cpi	r25, 0x70	; 112
    2430:	20 f4       	brcc	.+8      	; 0x243a <vfprintf+0x254>
    2432:	98 35       	cpi	r25, 0x58	; 88
    2434:	09 f0       	breq	.+2      	; 0x2438 <vfprintf+0x252>
    2436:	ac c0       	rjmp	.+344    	; 0x2590 <vfprintf+0x3aa>
    2438:	0f c0       	rjmp	.+30     	; 0x2458 <vfprintf+0x272>
    243a:	90 37       	cpi	r25, 0x70	; 112
    243c:	39 f0       	breq	.+14     	; 0x244c <vfprintf+0x266>
    243e:	98 37       	cpi	r25, 0x78	; 120
    2440:	09 f0       	breq	.+2      	; 0x2444 <vfprintf+0x25e>
    2442:	a6 c0       	rjmp	.+332    	; 0x2590 <vfprintf+0x3aa>
    2444:	04 c0       	rjmp	.+8      	; 0x244e <vfprintf+0x268>
    2446:	28 e0       	ldi	r18, 0x08	; 8
    2448:	30 e0       	ldi	r19, 0x00	; 0
    244a:	0a c0       	rjmp	.+20     	; 0x2460 <vfprintf+0x27a>
    244c:	10 61       	ori	r17, 0x10	; 16
    244e:	14 fd       	sbrc	r17, 4
    2450:	14 60       	ori	r17, 0x04	; 4
    2452:	20 e1       	ldi	r18, 0x10	; 16
    2454:	30 e0       	ldi	r19, 0x00	; 0
    2456:	04 c0       	rjmp	.+8      	; 0x2460 <vfprintf+0x27a>
    2458:	14 fd       	sbrc	r17, 4
    245a:	16 60       	ori	r17, 0x06	; 6
    245c:	20 e1       	ldi	r18, 0x10	; 16
    245e:	32 e0       	ldi	r19, 0x02	; 2
    2460:	17 ff       	sbrs	r17, 7
    2462:	08 c0       	rjmp	.+16     	; 0x2474 <vfprintf+0x28e>
    2464:	f5 01       	movw	r30, r10
    2466:	60 81       	ld	r22, Z
    2468:	71 81       	ldd	r23, Z+1	; 0x01
    246a:	82 81       	ldd	r24, Z+2	; 0x02
    246c:	93 81       	ldd	r25, Z+3	; 0x03
    246e:	44 e0       	ldi	r20, 0x04	; 4
    2470:	50 e0       	ldi	r21, 0x00	; 0
    2472:	08 c0       	rjmp	.+16     	; 0x2484 <vfprintf+0x29e>
    2474:	f5 01       	movw	r30, r10
    2476:	80 81       	ld	r24, Z
    2478:	91 81       	ldd	r25, Z+1	; 0x01
    247a:	bc 01       	movw	r22, r24
    247c:	80 e0       	ldi	r24, 0x00	; 0
    247e:	90 e0       	ldi	r25, 0x00	; 0
    2480:	42 e0       	ldi	r20, 0x02	; 2
    2482:	50 e0       	ldi	r21, 0x00	; 0
    2484:	a4 0e       	add	r10, r20
    2486:	b5 1e       	adc	r11, r21
    2488:	a1 01       	movw	r20, r2
    248a:	0e 94 12 13 	call	0x2624	; 0x2624 <__ultoa_invert>
    248e:	d8 2e       	mov	r13, r24
    2490:	d2 18       	sub	r13, r2
    2492:	8f e7       	ldi	r24, 0x7F	; 127
    2494:	f8 2e       	mov	r15, r24
    2496:	f1 22       	and	r15, r17
    2498:	f6 fe       	sbrs	r15, 6
    249a:	0b c0       	rjmp	.+22     	; 0x24b2 <vfprintf+0x2cc>
    249c:	5e ef       	ldi	r21, 0xFE	; 254
    249e:	f5 22       	and	r15, r21
    24a0:	d9 14       	cp	r13, r9
    24a2:	38 f4       	brcc	.+14     	; 0x24b2 <vfprintf+0x2cc>
    24a4:	f4 fe       	sbrs	r15, 4
    24a6:	07 c0       	rjmp	.+14     	; 0x24b6 <vfprintf+0x2d0>
    24a8:	f2 fc       	sbrc	r15, 2
    24aa:	05 c0       	rjmp	.+10     	; 0x24b6 <vfprintf+0x2d0>
    24ac:	8f ee       	ldi	r24, 0xEF	; 239
    24ae:	f8 22       	and	r15, r24
    24b0:	02 c0       	rjmp	.+4      	; 0x24b6 <vfprintf+0x2d0>
    24b2:	1d 2d       	mov	r17, r13
    24b4:	01 c0       	rjmp	.+2      	; 0x24b8 <vfprintf+0x2d2>
    24b6:	19 2d       	mov	r17, r9
    24b8:	f4 fe       	sbrs	r15, 4
    24ba:	0d c0       	rjmp	.+26     	; 0x24d6 <vfprintf+0x2f0>
    24bc:	fe 01       	movw	r30, r28
    24be:	ed 0d       	add	r30, r13
    24c0:	f1 1d       	adc	r31, r1
    24c2:	80 81       	ld	r24, Z
    24c4:	80 33       	cpi	r24, 0x30	; 48
    24c6:	19 f4       	brne	.+6      	; 0x24ce <vfprintf+0x2e8>
    24c8:	99 ee       	ldi	r25, 0xE9	; 233
    24ca:	f9 22       	and	r15, r25
    24cc:	08 c0       	rjmp	.+16     	; 0x24de <vfprintf+0x2f8>
    24ce:	1f 5f       	subi	r17, 0xFF	; 255
    24d0:	f2 fe       	sbrs	r15, 2
    24d2:	05 c0       	rjmp	.+10     	; 0x24de <vfprintf+0x2f8>
    24d4:	03 c0       	rjmp	.+6      	; 0x24dc <vfprintf+0x2f6>
    24d6:	8f 2d       	mov	r24, r15
    24d8:	86 78       	andi	r24, 0x86	; 134
    24da:	09 f0       	breq	.+2      	; 0x24de <vfprintf+0x2f8>
    24dc:	1f 5f       	subi	r17, 0xFF	; 255
    24de:	0f 2d       	mov	r16, r15
    24e0:	f3 fc       	sbrc	r15, 3
    24e2:	14 c0       	rjmp	.+40     	; 0x250c <vfprintf+0x326>
    24e4:	f0 fe       	sbrs	r15, 0
    24e6:	0f c0       	rjmp	.+30     	; 0x2506 <vfprintf+0x320>
    24e8:	1e 15       	cp	r17, r14
    24ea:	10 f0       	brcs	.+4      	; 0x24f0 <vfprintf+0x30a>
    24ec:	9d 2c       	mov	r9, r13
    24ee:	0b c0       	rjmp	.+22     	; 0x2506 <vfprintf+0x320>
    24f0:	9d 2c       	mov	r9, r13
    24f2:	9e 0c       	add	r9, r14
    24f4:	91 1a       	sub	r9, r17
    24f6:	1e 2d       	mov	r17, r14
    24f8:	06 c0       	rjmp	.+12     	; 0x2506 <vfprintf+0x320>
    24fa:	80 e2       	ldi	r24, 0x20	; 32
    24fc:	90 e0       	ldi	r25, 0x00	; 0
    24fe:	b3 01       	movw	r22, r6
    2500:	0e 94 e6 12 	call	0x25cc	; 0x25cc <fputc>
    2504:	1f 5f       	subi	r17, 0xFF	; 255
    2506:	1e 15       	cp	r17, r14
    2508:	c0 f3       	brcs	.-16     	; 0x24fa <vfprintf+0x314>
    250a:	04 c0       	rjmp	.+8      	; 0x2514 <vfprintf+0x32e>
    250c:	1e 15       	cp	r17, r14
    250e:	10 f4       	brcc	.+4      	; 0x2514 <vfprintf+0x32e>
    2510:	e1 1a       	sub	r14, r17
    2512:	01 c0       	rjmp	.+2      	; 0x2516 <vfprintf+0x330>
    2514:	ee 24       	eor	r14, r14
    2516:	04 ff       	sbrs	r16, 4
    2518:	0f c0       	rjmp	.+30     	; 0x2538 <vfprintf+0x352>
    251a:	80 e3       	ldi	r24, 0x30	; 48
    251c:	90 e0       	ldi	r25, 0x00	; 0
    251e:	b3 01       	movw	r22, r6
    2520:	0e 94 e6 12 	call	0x25cc	; 0x25cc <fputc>
    2524:	02 ff       	sbrs	r16, 2
    2526:	1d c0       	rjmp	.+58     	; 0x2562 <vfprintf+0x37c>
    2528:	01 fd       	sbrc	r16, 1
    252a:	03 c0       	rjmp	.+6      	; 0x2532 <vfprintf+0x34c>
    252c:	88 e7       	ldi	r24, 0x78	; 120
    252e:	90 e0       	ldi	r25, 0x00	; 0
    2530:	0e c0       	rjmp	.+28     	; 0x254e <vfprintf+0x368>
    2532:	88 e5       	ldi	r24, 0x58	; 88
    2534:	90 e0       	ldi	r25, 0x00	; 0
    2536:	0b c0       	rjmp	.+22     	; 0x254e <vfprintf+0x368>
    2538:	80 2f       	mov	r24, r16
    253a:	86 78       	andi	r24, 0x86	; 134
    253c:	91 f0       	breq	.+36     	; 0x2562 <vfprintf+0x37c>
    253e:	01 ff       	sbrs	r16, 1
    2540:	02 c0       	rjmp	.+4      	; 0x2546 <vfprintf+0x360>
    2542:	8b e2       	ldi	r24, 0x2B	; 43
    2544:	01 c0       	rjmp	.+2      	; 0x2548 <vfprintf+0x362>
    2546:	80 e2       	ldi	r24, 0x20	; 32
    2548:	f7 fc       	sbrc	r15, 7
    254a:	8d e2       	ldi	r24, 0x2D	; 45
    254c:	90 e0       	ldi	r25, 0x00	; 0
    254e:	b3 01       	movw	r22, r6
    2550:	0e 94 e6 12 	call	0x25cc	; 0x25cc <fputc>
    2554:	06 c0       	rjmp	.+12     	; 0x2562 <vfprintf+0x37c>
    2556:	80 e3       	ldi	r24, 0x30	; 48
    2558:	90 e0       	ldi	r25, 0x00	; 0
    255a:	b3 01       	movw	r22, r6
    255c:	0e 94 e6 12 	call	0x25cc	; 0x25cc <fputc>
    2560:	9a 94       	dec	r9
    2562:	d9 14       	cp	r13, r9
    2564:	c0 f3       	brcs	.-16     	; 0x2556 <vfprintf+0x370>
    2566:	da 94       	dec	r13
    2568:	f1 01       	movw	r30, r2
    256a:	ed 0d       	add	r30, r13
    256c:	f1 1d       	adc	r31, r1
    256e:	80 81       	ld	r24, Z
    2570:	90 e0       	ldi	r25, 0x00	; 0
    2572:	b3 01       	movw	r22, r6
    2574:	0e 94 e6 12 	call	0x25cc	; 0x25cc <fputc>
    2578:	dd 20       	and	r13, r13
    257a:	a9 f7       	brne	.-22     	; 0x2566 <vfprintf+0x380>
    257c:	06 c0       	rjmp	.+12     	; 0x258a <vfprintf+0x3a4>
    257e:	80 e2       	ldi	r24, 0x20	; 32
    2580:	90 e0       	ldi	r25, 0x00	; 0
    2582:	b3 01       	movw	r22, r6
    2584:	0e 94 e6 12 	call	0x25cc	; 0x25cc <fputc>
    2588:	ea 94       	dec	r14
    258a:	ee 20       	and	r14, r14
    258c:	c1 f7       	brne	.-16     	; 0x257e <vfprintf+0x398>
    258e:	43 ce       	rjmp	.-890    	; 0x2216 <vfprintf+0x30>
    2590:	f3 01       	movw	r30, r6
    2592:	66 81       	ldd	r22, Z+6	; 0x06
    2594:	77 81       	ldd	r23, Z+7	; 0x07
    2596:	cb 01       	movw	r24, r22
    2598:	2b 96       	adiw	r28, 0x0b	; 11
    259a:	e2 e1       	ldi	r30, 0x12	; 18
    259c:	0c 94 b4 10 	jmp	0x2168	; 0x2168 <__epilogue_restores__>

000025a0 <strnlen_P>:
    25a0:	fc 01       	movw	r30, r24
    25a2:	05 90       	lpm	r0, Z+
    25a4:	61 50       	subi	r22, 0x01	; 1
    25a6:	70 40       	sbci	r23, 0x00	; 0
    25a8:	01 10       	cpse	r0, r1
    25aa:	d8 f7       	brcc	.-10     	; 0x25a2 <strnlen_P+0x2>
    25ac:	80 95       	com	r24
    25ae:	90 95       	com	r25
    25b0:	8e 0f       	add	r24, r30
    25b2:	9f 1f       	adc	r25, r31
    25b4:	08 95       	ret

000025b6 <strnlen>:
    25b6:	fc 01       	movw	r30, r24
    25b8:	61 50       	subi	r22, 0x01	; 1
    25ba:	70 40       	sbci	r23, 0x00	; 0
    25bc:	01 90       	ld	r0, Z+
    25be:	01 10       	cpse	r0, r1
    25c0:	d8 f7       	brcc	.-10     	; 0x25b8 <strnlen+0x2>
    25c2:	80 95       	com	r24
    25c4:	90 95       	com	r25
    25c6:	8e 0f       	add	r24, r30
    25c8:	9f 1f       	adc	r25, r31
    25ca:	08 95       	ret

000025cc <fputc>:
    25cc:	0f 93       	push	r16
    25ce:	1f 93       	push	r17
    25d0:	cf 93       	push	r28
    25d2:	df 93       	push	r29
    25d4:	8c 01       	movw	r16, r24
    25d6:	eb 01       	movw	r28, r22
    25d8:	8b 81       	ldd	r24, Y+3	; 0x03
    25da:	81 ff       	sbrs	r24, 1
    25dc:	1b c0       	rjmp	.+54     	; 0x2614 <fputc+0x48>
    25de:	82 ff       	sbrs	r24, 2
    25e0:	0d c0       	rjmp	.+26     	; 0x25fc <fputc+0x30>
    25e2:	2e 81       	ldd	r18, Y+6	; 0x06
    25e4:	3f 81       	ldd	r19, Y+7	; 0x07
    25e6:	8c 81       	ldd	r24, Y+4	; 0x04
    25e8:	9d 81       	ldd	r25, Y+5	; 0x05
    25ea:	28 17       	cp	r18, r24
    25ec:	39 07       	cpc	r19, r25
    25ee:	64 f4       	brge	.+24     	; 0x2608 <fputc+0x3c>
    25f0:	e8 81       	ld	r30, Y
    25f2:	f9 81       	ldd	r31, Y+1	; 0x01
    25f4:	01 93       	st	Z+, r16
    25f6:	f9 83       	std	Y+1, r31	; 0x01
    25f8:	e8 83       	st	Y, r30
    25fa:	06 c0       	rjmp	.+12     	; 0x2608 <fputc+0x3c>
    25fc:	e8 85       	ldd	r30, Y+8	; 0x08
    25fe:	f9 85       	ldd	r31, Y+9	; 0x09
    2600:	80 2f       	mov	r24, r16
    2602:	09 95       	icall
    2604:	89 2b       	or	r24, r25
    2606:	31 f4       	brne	.+12     	; 0x2614 <fputc+0x48>
    2608:	8e 81       	ldd	r24, Y+6	; 0x06
    260a:	9f 81       	ldd	r25, Y+7	; 0x07
    260c:	01 96       	adiw	r24, 0x01	; 1
    260e:	9f 83       	std	Y+7, r25	; 0x07
    2610:	8e 83       	std	Y+6, r24	; 0x06
    2612:	02 c0       	rjmp	.+4      	; 0x2618 <fputc+0x4c>
    2614:	0f ef       	ldi	r16, 0xFF	; 255
    2616:	1f ef       	ldi	r17, 0xFF	; 255
    2618:	c8 01       	movw	r24, r16
    261a:	df 91       	pop	r29
    261c:	cf 91       	pop	r28
    261e:	1f 91       	pop	r17
    2620:	0f 91       	pop	r16
    2622:	08 95       	ret

00002624 <__ultoa_invert>:
    2624:	fa 01       	movw	r30, r20
    2626:	aa 27       	eor	r26, r26
    2628:	28 30       	cpi	r18, 0x08	; 8
    262a:	51 f1       	breq	.+84     	; 0x2680 <__ultoa_invert+0x5c>
    262c:	20 31       	cpi	r18, 0x10	; 16
    262e:	81 f1       	breq	.+96     	; 0x2690 <__ultoa_invert+0x6c>
    2630:	e8 94       	clt
    2632:	6f 93       	push	r22
    2634:	6e 7f       	andi	r22, 0xFE	; 254
    2636:	6e 5f       	subi	r22, 0xFE	; 254
    2638:	7f 4f       	sbci	r23, 0xFF	; 255
    263a:	8f 4f       	sbci	r24, 0xFF	; 255
    263c:	9f 4f       	sbci	r25, 0xFF	; 255
    263e:	af 4f       	sbci	r26, 0xFF	; 255
    2640:	b1 e0       	ldi	r27, 0x01	; 1
    2642:	3e d0       	rcall	.+124    	; 0x26c0 <__ultoa_invert+0x9c>
    2644:	b4 e0       	ldi	r27, 0x04	; 4
    2646:	3c d0       	rcall	.+120    	; 0x26c0 <__ultoa_invert+0x9c>
    2648:	67 0f       	add	r22, r23
    264a:	78 1f       	adc	r23, r24
    264c:	89 1f       	adc	r24, r25
    264e:	9a 1f       	adc	r25, r26
    2650:	a1 1d       	adc	r26, r1
    2652:	68 0f       	add	r22, r24
    2654:	79 1f       	adc	r23, r25
    2656:	8a 1f       	adc	r24, r26
    2658:	91 1d       	adc	r25, r1
    265a:	a1 1d       	adc	r26, r1
    265c:	6a 0f       	add	r22, r26
    265e:	71 1d       	adc	r23, r1
    2660:	81 1d       	adc	r24, r1
    2662:	91 1d       	adc	r25, r1
    2664:	a1 1d       	adc	r26, r1
    2666:	20 d0       	rcall	.+64     	; 0x26a8 <__ultoa_invert+0x84>
    2668:	09 f4       	brne	.+2      	; 0x266c <__ultoa_invert+0x48>
    266a:	68 94       	set
    266c:	3f 91       	pop	r19
    266e:	2a e0       	ldi	r18, 0x0A	; 10
    2670:	26 9f       	mul	r18, r22
    2672:	11 24       	eor	r1, r1
    2674:	30 19       	sub	r19, r0
    2676:	30 5d       	subi	r19, 0xD0	; 208
    2678:	31 93       	st	Z+, r19
    267a:	de f6       	brtc	.-74     	; 0x2632 <__ultoa_invert+0xe>
    267c:	cf 01       	movw	r24, r30
    267e:	08 95       	ret
    2680:	46 2f       	mov	r20, r22
    2682:	47 70       	andi	r20, 0x07	; 7
    2684:	40 5d       	subi	r20, 0xD0	; 208
    2686:	41 93       	st	Z+, r20
    2688:	b3 e0       	ldi	r27, 0x03	; 3
    268a:	0f d0       	rcall	.+30     	; 0x26aa <__ultoa_invert+0x86>
    268c:	c9 f7       	brne	.-14     	; 0x2680 <__ultoa_invert+0x5c>
    268e:	f6 cf       	rjmp	.-20     	; 0x267c <__ultoa_invert+0x58>
    2690:	46 2f       	mov	r20, r22
    2692:	4f 70       	andi	r20, 0x0F	; 15
    2694:	40 5d       	subi	r20, 0xD0	; 208
    2696:	4a 33       	cpi	r20, 0x3A	; 58
    2698:	18 f0       	brcs	.+6      	; 0x26a0 <__ultoa_invert+0x7c>
    269a:	49 5d       	subi	r20, 0xD9	; 217
    269c:	31 fd       	sbrc	r19, 1
    269e:	40 52       	subi	r20, 0x20	; 32
    26a0:	41 93       	st	Z+, r20
    26a2:	02 d0       	rcall	.+4      	; 0x26a8 <__ultoa_invert+0x84>
    26a4:	a9 f7       	brne	.-22     	; 0x2690 <__ultoa_invert+0x6c>
    26a6:	ea cf       	rjmp	.-44     	; 0x267c <__ultoa_invert+0x58>
    26a8:	b4 e0       	ldi	r27, 0x04	; 4
    26aa:	a6 95       	lsr	r26
    26ac:	97 95       	ror	r25
    26ae:	87 95       	ror	r24
    26b0:	77 95       	ror	r23
    26b2:	67 95       	ror	r22
    26b4:	ba 95       	dec	r27
    26b6:	c9 f7       	brne	.-14     	; 0x26aa <__ultoa_invert+0x86>
    26b8:	00 97       	sbiw	r24, 0x00	; 0
    26ba:	61 05       	cpc	r22, r1
    26bc:	71 05       	cpc	r23, r1
    26be:	08 95       	ret
    26c0:	9b 01       	movw	r18, r22
    26c2:	ac 01       	movw	r20, r24
    26c4:	0a 2e       	mov	r0, r26
    26c6:	06 94       	lsr	r0
    26c8:	57 95       	ror	r21
    26ca:	47 95       	ror	r20
    26cc:	37 95       	ror	r19
    26ce:	27 95       	ror	r18
    26d0:	ba 95       	dec	r27
    26d2:	c9 f7       	brne	.-14     	; 0x26c6 <__ultoa_invert+0xa2>
    26d4:	62 0f       	add	r22, r18
    26d6:	73 1f       	adc	r23, r19
    26d8:	84 1f       	adc	r24, r20
    26da:	95 1f       	adc	r25, r21
    26dc:	a0 1d       	adc	r26, r0
    26de:	08 95       	ret

000026e0 <_exit>:
    26e0:	f8 94       	cli

000026e2 <__stop_program>:
    26e2:	ff cf       	rjmp	.-2      	; 0x26e2 <__stop_program>
